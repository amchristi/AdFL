public class org.apache.commons.validator.routines.ISBNValidatorTest extends junit.framework.TestCase
{
    private final java.lang.String[] validISBN10Format;
    private final java.lang.String[] invalidISBN10Format;
    private final java.lang.String[] validISBN13Format;
    private final java.lang.String[] invalidISBN13Format;

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);
        $r2 = newarray (java.lang.String)[6];
        $r2[0] = "1234567890";
        $r2[1] = "123456789X";
        $r2[2] = "12345-1234567-123456-X";
        $r2[3] = "12345 1234567 123456 X";
        $r2[4] = "1-2-3-4";
        $r2[5] = "1 2 3 4";
        r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] validISBN10Format> = $r2;
        $r3 = newarray (java.lang.String)[20];
        $r3[0] = "";
        $r3[1] = "   ";
        $r3[2] = "1";
        $r3[3] = "123456789";
        $r3[4] = "12345678901";
        $r3[5] = "12345678X0";
        $r3[6] = "123456-1234567-123456-X";
        $r3[7] = "12345-12345678-123456-X";
        $r3[8] = "12345-1234567-1234567-X";
        $r3[9] = "12345-1234567-123456-X2";
        $r3[10] = "--1 930110 99 5";
        $r3[11] = "1 930110 99 5--";
        $r3[12] = "1 930110-99 5-";
        $r3[13] = "1.2.3.4";
        $r3[14] = "1=2=3=4";
        $r3[15] = "1_2_3_4";
        $r3[16] = "123456789Y";
        $r3[17] = "dsasdsadsa";
        $r3[18] = "I love sparrows!";
        $r3[19] = "068-556-98-45";
        r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN10Format> = $r3;
        $r4 = newarray (java.lang.String)[10];
        $r4[0] = "9781234567890";
        $r4[1] = "9791234567890";
        $r4[2] = "978-12345-1234567-123456-1";
        $r4[3] = "979-12345-1234567-123456-1";
        $r4[4] = "978 12345 1234567 123456 1";
        $r4[5] = "979 12345 1234567 123456 1";
        $r4[6] = "978-1-2-3-4";
        $r4[7] = "979-1-2-3-4";
        $r4[8] = "978 1 2 3 4";
        $r4[9] = "979 1 2 3 4";
        r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] validISBN13Format> = $r4;
        $r5 = newarray (java.lang.String)[21];
        $r5[0] = "";
        $r5[1] = "   ";
        $r5[2] = "1";
        $r5[3] = "978123456789";
        $r5[4] = "97812345678901";
        $r5[5] = "978-123456-1234567-123456-1";
        $r5[6] = "978-12345-12345678-123456-1";
        $r5[7] = "978-12345-1234567-1234567-1";
        $r5[8] = "978-12345-1234567-123456-12";
        $r5[9] = "--978 1 930110 99 1";
        $r5[10] = "978 1 930110 99 1--";
        $r5[11] = "978 1 930110-99 1-";
        $r5[12] = "123-4-567890-12-8";
        $r5[13] = "978.1.2.3.4";
        $r5[14] = "978=1=2=3=4";
        $r5[15] = "978_1_2_3_4";
        $r5[16] = "978123456789X";
        $r5[17] = "978-0-201-63385-X";
        $r5[18] = "dsasdsadsadsa";
        $r5[19] = "I love sparrows!";
        $r5[20] = "979-1-234-567-89-6";
        r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN13Format> = $r5;
        return;
    }

    public void testValidISBN10Format()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        java.util.regex.Pattern r1;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        java.lang.String[] $r5, $r9, $r12;
        java.lang.String $r6, $r8, $r10;
        java.util.regex.Matcher $r11;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(?:(\\d{9}[0-9X])|(?:(\\d{1,5})(?:\\-|\\s)(\\d{1,7})(?:\\-|\\s)(\\d{1,6})(?:\\-|\\s)([0-9X])))$");
        i0 = 0;
        goto label1;

     label0:
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Pattern[");
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r5 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] validISBN10Format>;
        $r6 = $r5[i0];
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] validISBN10Format>;
        $r10 = $r9[i0];
        $r11 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r10);
        $z0 = virtualinvoke $r11.<java.util.regex.Matcher: boolean matches()>();
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>($r8, $z0);
        i0 = i0 + 1;

     label1:
        $r12 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] validISBN10Format>;
        $i1 = lengthof $r12;
        if i0 < $i1 goto label0;

        return;
    }

    public void testInvalidISBN10Format()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        java.util.regex.Pattern r2;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r13, $r14, $r15, $r18, $r22, $r23, $r24, $r27;
        java.lang.String[] $r6, $r10, $r16, $r20, $r25, $r29, $r32;
        java.lang.String $r7, $r9, $r11, $r17, $r19, $r21, $r26, $r28, $r30, $r31;
        java.util.regex.Matcher $r12;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(?:(\\d{9}[0-9X])|(?:(\\d{1,5})(?:\\-|\\s)(\\d{1,7})(?:\\-|\\s)(\\d{1,6})(?:\\-|\\s)([0-9X])))$");
        i0 = 0;
        goto label1;

     label0:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Pattern[");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r6 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN10Format>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN10Format>;
        $r11 = $r10[i0];
        $r12 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r11);
        $z0 = virtualinvoke $r12.<java.util.regex.Matcher: boolean matches()>();
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>($r9, $z0);
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("isValidISBN10[");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r16 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN10Format>;
        $r17 = $r16[i0];
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        $r20 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN10Format>;
        $r21 = $r20[i0];
        $z1 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN10(java.lang.String)>($r21);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>($r19, $z1);
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("validateISBN10[");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r25 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN10Format>;
        $r26 = $r25[i0];
        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        $r29 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN10Format>;
        $r30 = $r29[i0];
        $r31 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN10(java.lang.String)>($r30);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertNull(java.lang.String,java.lang.Object)>($r28, $r31);
        i0 = i0 + 1;

     label1:
        $r32 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN10Format>;
        $i1 = lengthof $r32;
        if i0 < $i1 goto label0;

        return;
    }

    public void testValidISBN13Format()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        java.util.regex.Pattern r1;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4, $r7;
        java.lang.String[] $r5, $r9, $r12;
        java.lang.String $r6, $r8, $r10;
        java.util.regex.Matcher $r11;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(978|979)(?:(\\d{10})|(?:(?:\\-|\\s)(\\d{1,5})(?:\\-|\\s)(\\d{1,7})(?:\\-|\\s)(\\d{1,6})(?:\\-|\\s)([0-9])))$");
        i0 = 0;
        goto label1;

     label0:
        $r2 = new java.lang.StringBuilder;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Pattern[");
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r5 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] validISBN13Format>;
        $r6 = $r5[i0];
        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        $r9 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] validISBN13Format>;
        $r10 = $r9[i0];
        $r11 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r10);
        $z0 = virtualinvoke $r11.<java.util.regex.Matcher: boolean matches()>();
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>($r8, $z0);
        i0 = i0 + 1;

     label1:
        $r12 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] validISBN13Format>;
        $i1 = lengthof $r12;
        if i0 < $i1 goto label0;

        return;
    }

    public void testInvalidISBN13Format()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        java.util.regex.Pattern r1;
        org.apache.commons.validator.routines.ISBNValidator r2;
        int i0, $i1;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r13, $r14, $r15, $r18, $r22, $r23, $r24, $r27;
        java.lang.String[] $r6, $r10, $r16, $r20, $r25, $r29, $r32;
        java.lang.String $r7, $r9, $r11, $r17, $r19, $r21, $r26, $r28, $r30, $r31;
        java.util.regex.Matcher $r12;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(978|979)(?:(\\d{10})|(?:(?:\\-|\\s)(\\d{1,5})(?:\\-|\\s)(\\d{1,7})(?:\\-|\\s)(\\d{1,6})(?:\\-|\\s)([0-9])))$");
        r2 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        i0 = 0;
        goto label1;

     label0:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Pattern[");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r6 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN13Format>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN13Format>;
        $r11 = $r10[i0];
        $r12 = virtualinvoke r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r11);
        $z0 = virtualinvoke $r12.<java.util.regex.Matcher: boolean matches()>();
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>($r9, $z0);
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("isValidISBN13[");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r16 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN13Format>;
        $r17 = $r16[i0];
        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        $r20 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN13Format>;
        $r21 = $r20[i0];
        $z1 = virtualinvoke r2.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN13(java.lang.String)>($r21);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>($r19, $z1);
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("validateISBN13[");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r25 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN13Format>;
        $r26 = $r25[i0];
        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        $r29 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN13Format>;
        $r30 = $r29[i0];
        $r31 = virtualinvoke r2.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN13(java.lang.String)>($r30);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertNull(java.lang.String,java.lang.Object)>($r28, $r31);
        i0 = i0 + 1;

     label1:
        $r32 = r0.<org.apache.commons.validator.routines.ISBNValidatorTest: java.lang.String[] invalidISBN13Format>;
        $i1 = lengthof $r32;
        if i0 < $i1 goto label0;

        return;
    }

    public void testIsValidISBN10()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        $z0 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN10(java.lang.String)>("1930110995");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN10-1", $z0);
        $z1 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN10(java.lang.String)>("1-930110-99-5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN10-2", $z1);
        $z2 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN10(java.lang.String)>("1 930110 99 5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN10-3", $z2);
        $z3 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN10(java.lang.String)>("020163385X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN10-4", $z3);
        $z4 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN10(java.lang.String)>("0-201-63385-X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN10-5", $z4);
        $z5 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN10(java.lang.String)>("0 201 63385 X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN10-6", $z5);
        $z6 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("1930110995");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-1", $z6);
        $z7 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("1-930110-99-5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-2", $z7);
        $z8 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("1 930110 99 5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-3", $z8);
        $z9 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("020163385X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-4", $z9);
        $z10 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("0-201-63385-X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-5", $z10);
        $z11 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("0 201 63385 X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-6", $z11);
        return;
    }

    public void testIsValidISBN13()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        $z0 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN13(java.lang.String)>("9781930110991");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN13-1", $z0);
        $z1 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN13(java.lang.String)>("978-1-930110-99-1");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN13-2", $z1);
        $z2 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN13(java.lang.String)>("978 1 930110 99 1");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN13-3", $z2);
        $z3 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN13(java.lang.String)>("9780201633856");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN13-4", $z3);
        $z4 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN13(java.lang.String)>("978-0-201-63385-6");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN13-5", $z4);
        $z5 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN13(java.lang.String)>("978 0 201 63385 6");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValidISBN13-6", $z5);
        $z6 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("9781930110991");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-1", $z6);
        $z7 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("978-1-930110-99-1");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-2", $z7);
        $z8 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("978 1 930110 99 1");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-3", $z8);
        $z9 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("9780201633856");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-4", $z9);
        $z10 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("978-0-201-63385-6");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-5", $z10);
        $z11 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>("978 0 201 63385 6");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("isValid-6", $z11);
        return;
    }

    public void testValidateISBN10()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance(boolean)>(0);
        $r2 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN10(java.lang.String)>("1930110995");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN10-1", "1930110995", $r2);
        $r3 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN10(java.lang.String)>("1-930110-99-5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN10-2", "1930110995", $r3);
        $r4 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN10(java.lang.String)>("1 930110 99 5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN10-3", "1930110995", $r4);
        $r5 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN10(java.lang.String)>("020163385X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN10-4", "020163385X", $r5);
        $r6 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN10(java.lang.String)>("0-201-63385-X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN10-5", "020163385X", $r6);
        $r7 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN10(java.lang.String)>("0 201 63385 X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN10-6", "020163385X", $r7);
        $r8 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("1930110995");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-1", "1930110995", $r8);
        $r9 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("1-930110-99-5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-2", "1930110995", $r9);
        $r10 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("1 930110 99 5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-3", "1930110995", $r10);
        $r11 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("020163385X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-4", "020163385X", $r11);
        $r12 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("0-201-63385-X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-5", "020163385X", $r12);
        $r13 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("0 201 63385 X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-6", "020163385X", $r13);
        return;
    }

    public void testValidateISBN10Convert()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        $r2 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("1930110995");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-1", "9781930110991", $r2);
        $r3 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("1-930110-99-5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-2", "9781930110991", $r3);
        $r4 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("1 930110 99 5");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-3", "9781930110991", $r4);
        $r5 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("020163385X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-4", "9780201633856", $r5);
        $r6 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("0-201-63385-X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-5", "9780201633856", $r6);
        $r7 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("0 201 63385 X");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-6", "9780201633856", $r7);
        return;
    }

    public void testValidateISBN13()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        $r2 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN13(java.lang.String)>("9781930110991");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN13-1", "9781930110991", $r2);
        $r3 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN13(java.lang.String)>("978-1-930110-99-1");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN13-2", "9781930110991", $r3);
        $r4 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN13(java.lang.String)>("978 1 930110 99 1");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN13-3", "9781930110991", $r4);
        $r5 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN13(java.lang.String)>("9780201633856");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN13-4", "9780201633856", $r5);
        $r6 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN13(java.lang.String)>("978-0-201-63385-6");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN13-5", "9780201633856", $r6);
        $r7 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN13(java.lang.String)>("978 0 201 63385 6");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validateISBN13-6", "9780201633856", $r7);
        $r8 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("9781930110991");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-1", "9781930110991", $r8);
        $r9 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("978-1-930110-99-1");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-2", "9781930110991", $r9);
        $r10 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("978 1 930110 99 1");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-3", "9781930110991", $r10);
        $r11 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("9780201633856");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-4", "9780201633856", $r11);
        $r12 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("978-0-201-63385-6");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-5", "9780201633856", $r12);
        $r13 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>("978 0 201 63385 6");
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("validate-6", "9780201633856", $r13);
        return;
    }

    public void testNull()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        $z0 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("isValid", $z0);
        $z1 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN10(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("isValidISBN10", $z1);
        $z2 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValidISBN13(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("isValidISBN13", $z2);
        $r2 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validate(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("validate", $r2);
        $r3 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN10(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("validateISBN10", $r3);
        $r4 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String validateISBN13(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("validateISBN13", $r4);
        $r5 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String convertToISBN13(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("convertToISBN13", $r5);
        return;
    }

    public void testInvalid()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        java.lang.String r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87;
        java.lang.StringBuilder $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        r2 = "193011099";
        $r3 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        $z0 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r6);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-0", $z0);
        $r7 = new java.lang.StringBuilder;
        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);
        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $z1 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r10);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-1", $z1);
        $r11 = new java.lang.StringBuilder;
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $z2 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r14);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-2", $z2);
        $r15 = new java.lang.StringBuilder;
        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>($r16);
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("3");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $z3 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r18);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-3", $z3);
        $r19 = new java.lang.StringBuilder;
        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>($r20);
        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4");
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();
        $z4 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r22);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-4", $z4);
        $r23 = new java.lang.StringBuilder;
        $r24 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>($r24);
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("5");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $z5 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r26);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("ISBN10-5", $z5);
        $r27 = new java.lang.StringBuilder;
        $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r28);
        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("6");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();
        $z6 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r30);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-6", $z6);
        $r31 = new java.lang.StringBuilder;
        $r32 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>($r32);
        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("7");
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        $z7 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r34);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-7", $z7);
        $r35 = new java.lang.StringBuilder;
        $r36 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>($r36);
        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("8");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        $z8 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r38);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-8", $z8);
        $r39 = new java.lang.StringBuilder;
        $r40 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r39.<java.lang.StringBuilder: void <init>(java.lang.String)>($r40);
        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("9");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();
        $z9 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r42);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-9", $z9);
        $r43 = new java.lang.StringBuilder;
        $r44 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);
        specialinvoke $r43.<java.lang.StringBuilder: void <init>(java.lang.String)>($r44);
        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X");
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();
        $z10 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r46);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN10-X", $z10);
        r47 = "978193011099";
        $r48 = new java.lang.StringBuilder;
        $r49 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r48.<java.lang.StringBuilder: void <init>(java.lang.String)>($r49);
        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();
        $z11 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r51);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-0", $z11);
        $r52 = new java.lang.StringBuilder;
        $r53 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r52.<java.lang.StringBuilder: void <init>(java.lang.String)>($r53);
        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1");
        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();
        $z12 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r55);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertTrue(java.lang.String,boolean)>("ISBN13-1", $z12);
        $r56 = new java.lang.StringBuilder;
        $r57 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r56.<java.lang.StringBuilder: void <init>(java.lang.String)>($r57);
        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2");
        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();
        $z13 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r59);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-2", $z13);
        $r60 = new java.lang.StringBuilder;
        $r61 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r60.<java.lang.StringBuilder: void <init>(java.lang.String)>($r61);
        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("3");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        $z14 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r63);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-3", $z14);
        $r64 = new java.lang.StringBuilder;
        $r65 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r64.<java.lang.StringBuilder: void <init>(java.lang.String)>($r65);
        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4");
        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();
        $z15 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r67);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-4", $z15);
        $r68 = new java.lang.StringBuilder;
        $r69 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r68.<java.lang.StringBuilder: void <init>(java.lang.String)>($r69);
        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("5");
        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();
        $z16 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r71);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-5", $z16);
        $r72 = new java.lang.StringBuilder;
        $r73 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r72.<java.lang.StringBuilder: void <init>(java.lang.String)>($r73);
        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("6");
        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();
        $z17 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r75);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-6", $z17);
        $r76 = new java.lang.StringBuilder;
        $r77 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r76.<java.lang.StringBuilder: void <init>(java.lang.String)>($r77);
        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("7");
        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();
        $z18 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r79);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-7", $z18);
        $r80 = new java.lang.StringBuilder;
        $r81 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r80.<java.lang.StringBuilder: void <init>(java.lang.String)>($r81);
        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("8");
        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();
        $z19 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r83);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-8", $z19);
        $r84 = new java.lang.StringBuilder;
        $r85 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r47);
        specialinvoke $r84.<java.lang.StringBuilder: void <init>(java.lang.String)>($r85);
        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("9");
        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();
        $z20 = virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: boolean isValid(java.lang.String)>($r87);
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void assertFalse(java.lang.String,boolean)>("ISBN13-9", $z20);
        return;
    }

    public void testConversionErrors()
    {
        org.apache.commons.validator.routines.ISBNValidatorTest r0;
        org.apache.commons.validator.routines.ISBNValidator r1;
        null_type n0;
        java.lang.IllegalArgumentException r2, $r9, $r16, r17, $r24, r25, $r32, r33;
        java.lang.String r3, $r8, r10, $r15, r18, $r23, r26, $r31;
        java.lang.StringBuilder $r5, $r6, $r7, $r12, $r13, $r14, $r20, $r21, $r22, $r28, $r29, $r30;

        r0 := @this: org.apache.commons.validator.routines.ISBNValidatorTest;
        r1 = staticinvoke <org.apache.commons.validator.routines.ISBNValidator: org.apache.commons.validator.routines.ISBNValidator getInstance()>();
        n0 = null;

     label0:
        r3 = "123456789 ";
        virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String convertToISBN13(java.lang.String)>(r3);
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected IllegalArgumentException for \'");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void fail(java.lang.String)>($r8);

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r2 = $r9;

     label3:
        r10 = "12345678901";
        virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String convertToISBN13(java.lang.String)>(r10);
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected IllegalArgumentException for \'");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void fail(java.lang.String)>($r15);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;
        r17 = $r16;

     label6:
        r18 = "";
        virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String convertToISBN13(java.lang.String)>(r18);
        $r20 = new java.lang.StringBuilder;
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected IllegalArgumentException for \'");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void fail(java.lang.String)>($r23);

     label7:
        goto label9;

     label8:
        $r24 := @caughtexception;
        r25 = $r24;

     label9:
        r26 = "X234567890";
        virtualinvoke r1.<org.apache.commons.validator.routines.ISBNValidator: java.lang.String convertToISBN13(java.lang.String)>(r26);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected IllegalArgumentException for \'");
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.ISBNValidatorTest: void fail(java.lang.String)>($r31);

     label10:
        goto label12;

     label11:
        $r32 := @caughtexception;
        r33 = $r32;

     label12:
        return;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalArgumentException from label6 to label7 with label8;
        catch java.lang.IllegalArgumentException from label9 to label10 with label11;
    }
}
