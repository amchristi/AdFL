public class org.apache.commons.validator.GenericTypeValidatorTest extends org.apache.commons.validator.AbstractCommonTest
{
    protected static java.lang.String FORM_KEY;
    protected static java.lang.String ACTION;

    static void <clinit>()
    {
        <org.apache.commons.validator.GenericTypeValidatorTest: java.lang.String FORM_KEY> = "typeForm";
        <org.apache.commons.validator.GenericTypeValidatorTest: java.lang.String ACTION> = "byte";
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.GenericTypeValidatorTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.GenericTypeValidatorTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.commons.validator.AbstractCommonTest: void <init>(java.lang.String)>(r1);
        return;
    }

    protected void setUp() throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.commons.validator.GenericTypeValidatorTest r0;

        r0 := @this: org.apache.commons.validator.GenericTypeValidatorTest;
        virtualinvoke r0.<org.apache.commons.validator.GenericTypeValidatorTest: void loadResources(java.lang.String)>("GenericTypeValidatorTest-config.xml");
        return;
    }

    protected void tearDown()
    {
        org.apache.commons.validator.GenericTypeValidatorTest r0;

        r0 := @this: org.apache.commons.validator.GenericTypeValidatorTest;
        return;
    }

    public void testType() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.GenericTypeValidatorTest r0;
        org.apache.commons.validator.TypeBean $r1, r2;
        java.lang.String $r3, r7;
        org.apache.commons.validator.Validator r4, $r9;
        null_type n0;
        java.util.Map r5;
        java.util.Iterator r6;
        java.lang.Object r8, $r12, $r13, $r14, $r15, $r16, $r17, $r19;
        org.apache.commons.validator.ValidatorResources $r10;
        org.apache.commons.validator.ValidatorResults r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Set $r18;

        r0 := @this: org.apache.commons.validator.GenericTypeValidatorTest;
        $r1 = new org.apache.commons.validator.TypeBean;
        specialinvoke $r1.<org.apache.commons.validator.TypeBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setByte(java.lang.String)>("12");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setShort(java.lang.String)>("129");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setInteger(java.lang.String)>("-144");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setLong(java.lang.String)>("88000");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setFloat(java.lang.String)>("12.1555f");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setDouble(java.lang.String)>("129.1551511111d");
        $r9 = new org.apache.commons.validator.Validator;
        $r10 = r0.<org.apache.commons.validator.GenericTypeValidatorTest: org.apache.commons.validator.ValidatorResources resources>;
        $r3 = <org.apache.commons.validator.GenericTypeValidatorTest: java.lang.String FORM_KEY>;
        specialinvoke $r9.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r10, $r3);
        r4 = $r9;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r2);
        n0 = null;
        r11 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r11);
        r5 = virtualinvoke r11.<org.apache.commons.validator.ValidatorResults: java.util.Map getResultValueMap()>();
        $r12 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("byte");
        $z0 = $r12 instanceof java.lang.Byte;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>("Expecting byte result to be an instance of Byte.", $z0);
        $r13 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("short");
        $z1 = $r13 instanceof java.lang.Short;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>("Expecting short result to be an instance of Short.", $z1);
        $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("integer");
        $z2 = $r14 instanceof java.lang.Integer;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>("Expecting integer result to be an instance of Integer.", $z2);
        $r15 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("long");
        $z3 = $r15 instanceof java.lang.Long;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>("Expecting long result to be an instance of Long.", $z3);
        $r16 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("float");
        $z4 = $r16 instanceof java.lang.Float;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>("Expecting float result to be an instance of Float.", $z4);
        $r17 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("double");
        $z5 = $r17 instanceof java.lang.Double;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>("Expecting double result to be an instance of Double.", $z5);
        $r18 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>();
        r6 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r19 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r19;
        r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("value ValidatorResults.getResultValueMap() should not be null.", r8);

     label1:
        $z6 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z6 != 0 goto label0;

        return;
    }

    public void testUSLocale() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.GenericTypeValidatorTest r0;
        org.apache.commons.validator.TypeBean $r1, r2;
        java.util.Locale $r3;

        r0 := @this: org.apache.commons.validator.GenericTypeValidatorTest;
        $r1 = new org.apache.commons.validator.TypeBean;
        specialinvoke $r1.<org.apache.commons.validator.TypeBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setByte(java.lang.String)>("12");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setShort(java.lang.String)>("129");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setInteger(java.lang.String)>("-144");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setLong(java.lang.String)>("88000");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setFloat(java.lang.String)>("12.1555");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setDouble(java.lang.String)>("129.1551511111");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setDate(java.lang.String)>("12/21/2010");
        $r3 = <java.util.Locale: java.util.Locale US>;
        specialinvoke r0.<org.apache.commons.validator.GenericTypeValidatorTest: java.util.Map localeTest(org.apache.commons.validator.TypeBean,java.util.Locale)>(r2, $r3);
        return;
    }

    public void testFRLocale() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.GenericTypeValidatorTest r0;
        org.apache.commons.validator.TypeBean $r1, r2;
        java.util.Locale $r3;
        java.util.Map r4;
        java.lang.String $r5, $r8;
        java.lang.Object $r6, $r9;
        java.lang.Float $r7;
        int $i0, $i1;
        boolean $z0, $z1;
        java.lang.Double $r10;

        r0 := @this: org.apache.commons.validator.GenericTypeValidatorTest;
        $r1 = new org.apache.commons.validator.TypeBean;
        specialinvoke $r1.<org.apache.commons.validator.TypeBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setByte(java.lang.String)>("12");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setShort(java.lang.String)>("-129");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setInteger(java.lang.String)>("1443");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setLong(java.lang.String)>("88000");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setFloat(java.lang.String)>("12,1555");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setDouble(java.lang.String)>("129,1551511111");
        virtualinvoke r2.<org.apache.commons.validator.TypeBean: void setDate(java.lang.String)>("21/12/2010");
        $r3 = <java.util.Locale: java.util.Locale FRENCH>;
        r4 = specialinvoke r0.<org.apache.commons.validator.GenericTypeValidatorTest: java.util.Map localeTest(org.apache.commons.validator.TypeBean,java.util.Locale)>(r2, $r3);
        $r5 = "float value not correct";
        $r6 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("float");
        $r7 = (java.lang.Float) $r6;
        $i0 = virtualinvoke $r7.<java.lang.Float: int intValue()>();
        if $i0 != 12 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r5, $z0);
        $r8 = "double value not correct";
        $r9 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>("double");
        $r10 = (java.lang.Double) $r9;
        $i1 = virtualinvoke $r10.<java.lang.Double: int intValue()>();
        if $i1 != 129 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r8, $z1);
        return;
    }

    private java.util.Map localeTest(org.apache.commons.validator.TypeBean, java.util.Locale) throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.GenericTypeValidatorTest r0;
        org.apache.commons.validator.TypeBean r1;
        java.util.Locale r2;
        org.apache.commons.validator.Validator $r3, r4;
        null_type n0;
        java.util.Map r5;
        java.util.Iterator r6;
        java.lang.String r7, $r13, $r17, $r21, $r25, $r29, $r33, $r37, $r43;
        java.lang.Object r8, $r14, $r18, $r22, $r26, $r30, $r34, $r38, $r40;
        org.apache.commons.validator.ValidatorResources $r9;
        org.apache.commons.validator.ValidatorResults r10;
        java.lang.StringBuilder $r11, $r12, $r15, $r16, $r19, $r20, $r23, $r24, $r27, $r28, $r31, $r32, $r35, $r36, $r41, $r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Set $r39;

        r0 := @this: org.apache.commons.validator.GenericTypeValidatorTest;
        r1 := @parameter0: org.apache.commons.validator.TypeBean;
        r2 := @parameter1: java.util.Locale;
        $r3 = new org.apache.commons.validator.Validator;
        $r9 = r0.<org.apache.commons.validator.GenericTypeValidatorTest: org.apache.commons.validator.ValidatorResources resources>;
        specialinvoke $r3.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r9, "typeLocaleForm");
        r4 = $r3;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r1);
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.util.Locale", r2);
        n0 = null;
        r10 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r10);
        r5 = virtualinvoke r10.<org.apache.commons.validator.ValidatorResults: java.util.Map getResultValueMap()>();
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting byte result to be an instance of Byte for locale: ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $r14 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("byte");
        $z0 = $r14 instanceof java.lang.Byte;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r13, $z0);
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting short result to be an instance of Short for locale: ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        $r18 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("short");
        $z1 = $r18 instanceof java.lang.Short;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r17, $z1);
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting integer result to be an instance of Integer for locale: ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        $r22 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("integer");
        $z2 = $r22 instanceof java.lang.Integer;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r21, $z2);
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting long result to be an instance of Long for locale: ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        $r26 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("long");
        $z3 = $r26 instanceof java.lang.Long;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r25, $z3);
        $r27 = new java.lang.StringBuilder;
        specialinvoke $r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting float result to be an instance of Float for locale: ");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        $r30 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("float");
        $z4 = $r30 instanceof java.lang.Float;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r29, $z4);
        $r31 = new java.lang.StringBuilder;
        specialinvoke $r31.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting double result to be an instance of Double for locale: ");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        $r34 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("double");
        $z5 = $r34 instanceof java.lang.Double;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r33, $z5);
        $r35 = new java.lang.StringBuilder;
        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting date result to be an instance of Date for locale: ");
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        $r38 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>("date");
        $z6 = $r38 instanceof java.util.Date;
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertTrue(java.lang.String,boolean)>($r37, $z6);
        $r39 = interfaceinvoke r5.<java.util.Map: java.util.Set keySet()>();
        r6 = interfaceinvoke $r39.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r40 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r40;
        r8 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>("value ValidatorResults.getResultValueMap() should not be null for locale: ");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.GenericTypeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>($r43, r8);

     label1:
        $z7 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z7 != 0 goto label0;

        return r5;
    }
}
