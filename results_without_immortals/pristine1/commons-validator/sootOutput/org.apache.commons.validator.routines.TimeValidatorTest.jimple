public class org.apache.commons.validator.routines.TimeValidatorTest extends junit.framework.TestCase
{
    protected static final java.util.TimeZone GMT;
    protected static final java.util.TimeZone EST;
    protected org.apache.commons.validator.routines.TimeValidator validator;
    protected java.lang.String[] patternValid;
    protected java.util.Date[] patternExpect;
    protected java.lang.String[] localeValid;
    protected java.util.Date[] localeExpect;
    protected java.lang.String[] patternInvalid;
    protected java.lang.String[] localeInvalid;

    static void <clinit>()
    {
        java.util.TimeZone $r0, $r1;

        $r0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");
        <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT> = $r0;
        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("EST");
        <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST> = $r1;
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r11, $r20, $r21;
        java.util.Date[] $r3, $r12;
        java.util.Date $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);
        $r2 = newarray (java.lang.String)[7];
        $r2[0] = "23-59-59";
        $r2[1] = "00-00-00";
        $r2[2] = "00-00-01";
        $r2[3] = "0-0-0";
        $r2[4] = "1-12-1";
        $r2[5] = "10-49-18";
        $r2[6] = "16-23-46";
        r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternValid> = $r2;
        $r3 = newarray (java.util.Date)[7];
        $r4 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 235959, 0);
        $r3[0] = $r4;
        $r5 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 0, 0);
        $r3[1] = $r5;
        $r6 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 1, 0);
        $r3[2] = $r6;
        $r7 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 0, 0);
        $r3[3] = $r7;
        $r8 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 11201, 0);
        $r3[4] = $r8;
        $r9 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 104918, 0);
        $r3[5] = $r9;
        $r10 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 162346, 0);
        $r3[6] = $r10;
        r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date[] patternExpect> = $r3;
        $r11 = newarray (java.lang.String)[7];
        $r11[0] = "23:59";
        $r11[1] = "00:00";
        $r11[2] = "00:01";
        $r11[3] = "0:0";
        $r11[4] = "1:12";
        $r11[5] = "10:49";
        $r11[6] = "16:23";
        r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeValid> = $r11;
        $r12 = newarray (java.util.Date)[7];
        $r13 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 235900, 0);
        $r12[0] = $r13;
        $r14 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 0, 0);
        $r12[1] = $r14;
        $r15 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 100, 0);
        $r12[2] = $r15;
        $r16 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 0, 0);
        $r12[3] = $r16;
        $r17 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 11200, 0);
        $r12[4] = $r17;
        $r18 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 104900, 0);
        $r12[5] = $r18;
        $r19 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date createDate(java.util.TimeZone,int,int)>(null, 162300, 0);
        $r12[6] = $r19;
        r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date[] localeExpect> = $r12;
        $r20 = newarray (java.lang.String)[13];
        $r20[0] = "24-00-00";
        $r20[1] = "24-00-01";
        $r20[2] = "25-02-03";
        $r20[3] = "10-61-31";
        $r20[4] = "10-01-61";
        $r20[5] = "05:02-29";
        $r20[6] = "0X-01:01";
        $r20[7] = "05-0X-01";
        $r20[8] = "10-01-0X";
        $r20[9] = "01:01:05";
        $r20[10] = "10-10";
        $r20[11] = "10--10";
        $r20[12] = "10-10-";
        r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternInvalid> = $r20;
        $r21 = newarray (java.lang.String)[11];
        $r21[0] = "24:00";
        $r21[1] = "24:00";
        $r21[2] = "25:02";
        $r21[3] = "10:61";
        $r21[4] = "05-02";
        $r21[5] = "0X:01";
        $r21[6] = "05:0X";
        $r21[7] = "01-01";
        $r21[8] = "10:";
        $r21[9] = "10::1";
        $r21[10] = "10:1:";
        r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeInvalid> = $r21;
        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        org.apache.commons.validator.routines.TimeValidator $r1;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        specialinvoke r0.<junit.framework.TestCase: void setUp()>();
        $r1 = new org.apache.commons.validator.routines.TimeValidator;
        specialinvoke $r1.<org.apache.commons.validator.routines.TimeValidator: void <init>()>();
        r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator> = $r1;
        return;
    }

    protected void tearDown() throws java.lang.Exception
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        specialinvoke r0.<junit.framework.TestCase: void tearDown()>();
        r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator> = null;
        return;
    }

    public void testPatternValid()
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        int i0, $i1;
        java.lang.String r1, $r5, $r8, $r13, $r16, $r19, $r22, $r25;
        java.util.Calendar r2;
        java.util.Date r3, $r27;
        java.lang.StringBuilder $r4, $r6, $r9, $r10, $r14, $r15, $r17, $r18, $r23, $r24;
        java.lang.String[] $r7, $r12, $r21, $r28;
        org.apache.commons.validator.routines.TimeValidator $r11, $r20;
        boolean $z0;
        java.util.Date[] $r26;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        i0 = 0;
        goto label1;

     label0:
        $r4 = new java.lang.StringBuilder;
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value=[");
        $r7 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternValid>;
        $r8 = $r7[i0];
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] failed ");
        r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $r11 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r12 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternValid>;
        $r13 = $r12[i0];
        r2 = virtualinvoke $r11.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.lang.String)>($r13, "HH-mm-ss");
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("validateObj() ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>($r16, r2);
        r3 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("isValid() ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        $r20 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r21 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternValid>;
        $r22 = $r21[i0];
        $z0 = virtualinvoke $r20.<org.apache.commons.validator.routines.TimeValidator: boolean isValid(java.lang.String,java.lang.String)>($r22, "HH-mm-ss");
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertTrue(java.lang.String,boolean)>($r19, $z0);
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("compare ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        $r26 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date[] patternExpect>;
        $r27 = $r26[i0];
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r25, $r27, r3);
        i0 = i0 + 1;

     label1:
        $r28 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternValid>;
        $i1 = lengthof $r28;
        if i0 < $i1 goto label0;

        return;
    }

    public void testPatternInvalid()
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        int i0, $i1;
        java.lang.String r1, $r4, $r7, $r12, $r16, $r19, $r22;
        java.util.Calendar r2;
        java.lang.StringBuilder $r3, $r5, $r8, $r9, $r13, $r14, $r15, $r17, $r18;
        java.lang.String[] $r6, $r11, $r21, $r23;
        org.apache.commons.validator.routines.TimeValidator $r10, $r20;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        i0 = 0;
        goto label1;

     label0:
        $r3 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value=[");
        $r6 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternInvalid>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] passed ");
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r11 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternInvalid>;
        $r12 = $r11[i0];
        r2 = virtualinvoke $r10.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.lang.String)>($r12, "HH-mm-ss");
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("validate() ");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNull(java.lang.String,java.lang.Object)>($r16, r2);
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("isValid() ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        $r20 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r21 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternInvalid>;
        $r22 = $r21[i0];
        $z0 = virtualinvoke $r20.<org.apache.commons.validator.routines.TimeValidator: boolean isValid(java.lang.String,java.lang.String)>($r22, "HH-mm-ss");
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertFalse(java.lang.String,boolean)>($r19, $z0);
        i0 = i0 + 1;

     label1:
        $r23 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] patternInvalid>;
        $i1 = lengthof $r23;
        if i0 < $i1 goto label0;

        return;
    }

    public void testLocaleValid()
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        int i0, $i1;
        java.lang.String r1, $r5, $r8, $r13, $r17, $r20, $r23, $r27;
        java.util.Calendar r2;
        java.util.Date r3, $r29;
        java.lang.StringBuilder $r4, $r6, $r9, $r10, $r15, $r16, $r18, $r19, $r25, $r26;
        java.lang.String[] $r7, $r12, $r22, $r30;
        org.apache.commons.validator.routines.TimeValidator $r11, $r21;
        java.util.Locale $r14, $r24;
        boolean $z0;
        java.util.Date[] $r28;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        i0 = 0;
        goto label1;

     label0:
        $r4 = new java.lang.StringBuilder;
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value=[");
        $r7 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeValid>;
        $r8 = $r7[i0];
        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] failed ");
        r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        $r11 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r12 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeValid>;
        $r13 = $r12[i0];
        $r14 = <java.util.Locale: java.util.Locale UK>;
        r2 = virtualinvoke $r11.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.util.Locale)>($r13, $r14);
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("validate() ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>($r17, r2);
        r3 = virtualinvoke r2.<java.util.Calendar: java.util.Date getTime()>();
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("isValid() ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r22 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeValid>;
        $r23 = $r22[i0];
        $r24 = <java.util.Locale: java.util.Locale UK>;
        $z0 = virtualinvoke $r21.<org.apache.commons.validator.routines.TimeValidator: boolean isValid(java.lang.String,java.util.Locale)>($r23, $r24);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertTrue(java.lang.String,boolean)>($r20, $z0);
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("compare ");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        $r28 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.util.Date[] localeExpect>;
        $r29 = $r28[i0];
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r27, $r29, r3);
        i0 = i0 + 1;

     label1:
        $r30 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeValid>;
        $i1 = lengthof $r30;
        if i0 < $i1 goto label0;

        return;
    }

    public void testLocaleInvalid()
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        int i0, $i1;
        java.lang.String r1, $r4, $r7, $r12, $r17, $r20, $r23;
        java.util.Calendar r2;
        java.lang.StringBuilder $r3, $r5, $r8, $r9, $r14, $r15, $r16, $r18, $r19;
        java.lang.String[] $r6, $r11, $r22, $r25;
        org.apache.commons.validator.routines.TimeValidator $r10, $r21;
        java.util.Locale $r13, $r24;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        i0 = 0;
        goto label1;

     label0:
        $r3 = new java.lang.StringBuilder;
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value=[");
        $r6 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeInvalid>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] passed ");
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r11 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeInvalid>;
        $r12 = $r11[i0];
        $r13 = <java.util.Locale: java.util.Locale US>;
        r2 = virtualinvoke $r10.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.util.Locale)>($r12, $r13);
        $r14 = new java.lang.StringBuilder;
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>("validate() ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNull(java.lang.String,java.lang.Object)>($r17, r2);
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("isValid() ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r22 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeInvalid>;
        $r23 = $r22[i0];
        $r24 = <java.util.Locale: java.util.Locale UK>;
        $z0 = virtualinvoke $r21.<org.apache.commons.validator.routines.TimeValidator: boolean isValid(java.lang.String,java.util.Locale)>($r23, $r24);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertFalse(java.lang.String,boolean)>($r20, $z0);
        i0 = i0 + 1;

     label1:
        $r25 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: java.lang.String[] localeInvalid>;
        $i1 = lengthof $r25;
        if i0 < $i1 goto label0;

        return;
    }

    public void testTimeZone()
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        java.util.Locale r1, $r4, $r21, $r27, $r32;
        java.util.TimeZone r2, $r3, $r5, $r8, $r9, $r11, $r13, $r14, $r16, $r18, $r19, $r22, $r24, $r25, $r29, $r30, $r34, $r35;
        null_type n0, n1, n2, n3, n4, n5, n6;
        org.apache.commons.validator.routines.TimeValidator $r6, $r10, $r15, $r20, $r26, $r31;
        java.util.Calendar r7, r12, r17, r23, r28, r33;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $r4 = <java.util.Locale: java.util.Locale UK>;
        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r4);
        r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
        $r5 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>($r5);
        n0 = null;
        $r6 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        r7 = virtualinvoke $r6.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String)>("18:01");
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("default result", r7);
        $r8 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        $r9 = virtualinvoke r7.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("default zone", $r8, $r9);
        $i0 = virtualinvoke r7.<java.util.Calendar: int get(int)>(11);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("default hour", 18, $i0);
        $i1 = virtualinvoke r7.<java.util.Calendar: int get(int)>(12);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("default minute", 1, $i1);
        n1 = null;
        $r10 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r11 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST>;
        r12 = virtualinvoke $r10.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.util.TimeZone)>("16:49", $r11);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("zone result", r12);
        $r13 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST>;
        $r14 = virtualinvoke r12.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("zone zone", $r13, $r14);
        $i2 = virtualinvoke r12.<java.util.Calendar: int get(int)>(11);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("zone hour", 16, $i2);
        $i3 = virtualinvoke r12.<java.util.Calendar: int get(int)>(12);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("zone minute", 49, $i3);
        n2 = null;
        $r15 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r16 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST>;
        r17 = virtualinvoke $r15.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.lang.String,java.util.TimeZone)>("14-34", "HH-mm", $r16);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("pattern result", r17);
        $r18 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST>;
        $r19 = virtualinvoke r17.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("pattern zone", $r18, $r19);
        $i4 = virtualinvoke r17.<java.util.Calendar: int get(int)>(11);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern hour", 14, $i4);
        $i5 = virtualinvoke r17.<java.util.Calendar: int get(int)>(12);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern minute", 34, $i5);
        n3 = null;
        $r20 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r21 = <java.util.Locale: java.util.Locale US>;
        $r22 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST>;
        r23 = virtualinvoke $r20.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.util.Locale,java.util.TimeZone)>("7:18 PM", $r21, $r22);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("locale result", r23);
        $r24 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST>;
        $r25 = virtualinvoke r23.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("locale zone", $r24, $r25);
        $i6 = virtualinvoke r23.<java.util.Calendar: int get(int)>(11);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("locale hour", 19, $i6);
        $i7 = virtualinvoke r23.<java.util.Calendar: int get(int)>(12);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("locale minute", 18, $i7);
        n4 = null;
        $r26 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r27 = <java.util.Locale: java.util.Locale GERMAN>;
        $r3 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST>;
        r28 = virtualinvoke $r26.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.lang.String,java.util.Locale,java.util.TimeZone)>("31/Dez/05 21-05", "dd/MMM/yy HH-mm", $r27, $r3);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("pattern result", r28);
        $r29 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone EST>;
        $r30 = virtualinvoke r28.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("pattern zone", $r29, $r30);
        $i8 = virtualinvoke r28.<java.util.Calendar: int get(int)>(1);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern day", 2005, $i8);
        $i9 = virtualinvoke r28.<java.util.Calendar: int get(int)>(2);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern day", 11, $i9);
        $i10 = virtualinvoke r28.<java.util.Calendar: int get(int)>(5);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern day", 31, $i10);
        $i11 = virtualinvoke r28.<java.util.Calendar: int get(int)>(11);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern hour", 21, $i11);
        $i12 = virtualinvoke r28.<java.util.Calendar: int get(int)>(12);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern minute", 5, $i12);
        n5 = null;
        $r31 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r32 = <java.util.Locale: java.util.Locale GERMAN>;
        r33 = virtualinvoke $r31.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.lang.String,java.util.Locale)>("31/Dez/05 21-05", "dd/MMM/yy HH-mm", $r32);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("pattern result", r33);
        $r34 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        $r35 = virtualinvoke r33.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("pattern zone", $r34, $r35);
        $i13 = virtualinvoke r33.<java.util.Calendar: int get(int)>(1);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern day", 2005, $i13);
        $i14 = virtualinvoke r33.<java.util.Calendar: int get(int)>(2);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern day", 11, $i14);
        $i15 = virtualinvoke r33.<java.util.Calendar: int get(int)>(5);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern day", 31, $i15);
        $i16 = virtualinvoke r33.<java.util.Calendar: int get(int)>(11);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern hour", 21, $i16);
        $i17 = virtualinvoke r33.<java.util.Calendar: int get(int)>(12);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("pattern minute", 5, $i17);
        n6 = null;
        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r1);
        staticinvoke <java.util.TimeZone: void setDefault(java.util.TimeZone)>(r2);
        return;
    }

    public void testFormat()
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        java.util.Locale r1, $r3, $r8;
        java.util.Calendar r2;
        org.apache.commons.validator.routines.TimeValidator $r4, $r5, $r7, $r10;
        java.lang.String $r6, $r9, $r11;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        $r3 = <java.util.Locale: java.util.Locale UK>;
        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r3);
        $r4 = staticinvoke <org.apache.commons.validator.routines.TimeValidator: org.apache.commons.validator.routines.TimeValidator getInstance()>();
        r2 = virtualinvoke $r4.<org.apache.commons.validator.routines.TimeValidator: java.util.Calendar validate(java.lang.String,java.lang.String)>("16:49:23", "HH:mm:ss");
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("Test Date ", r2);
        $r5 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r6 = virtualinvoke $r5.<org.apache.commons.validator.routines.TimeValidator: java.lang.String format(java.lang.Object,java.lang.String)>(r2, "HH-mm-ss");
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Format pattern", "16-49-23", $r6);
        $r7 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r8 = <java.util.Locale: java.util.Locale US>;
        $r9 = virtualinvoke $r7.<org.apache.commons.validator.routines.TimeValidator: java.lang.String format(java.lang.Object,java.util.Locale)>(r2, $r8);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Format locale", "4:49 PM", $r9);
        $r10 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $r11 = virtualinvoke $r10.<org.apache.commons.validator.routines.TimeValidator: java.lang.String format(java.lang.Object)>(r2);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Format default", "16:49", $r11);
        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>(r1);
        return;
    }

    public void testCompare()
    {
        org.apache.commons.validator.routines.TimeValidatorTest r0;
        int i0, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        byte b1;
        short s2;
        java.util.Calendar r1, r2, r3, r4, r5, r6, r7, r8, r9;
        java.util.TimeZone $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        org.apache.commons.validator.routines.TimeValidator $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;

        r0 := @this: org.apache.commons.validator.routines.TimeValidatorTest;
        i0 = 154523;
        b1 = 100;
        s2 = 10000;
        $r10 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        r1 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r10, i0, 500);
        $r11 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        r2 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r11, i0, 400);
        $r12 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        r3 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r12, i0, 300);
        $r13 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        $i3 = i0 + 1;
        r4 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r13, $i3, 100);
        $r14 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        $i4 = i0 - 1;
        r5 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r14, $i4, 100);
        $r15 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        $i5 = i0 + b1;
        r6 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r15, $i5, 100);
        $r16 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        $i6 = i0 - b1;
        r7 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r16, $i6, 100);
        $r17 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        $i7 = i0 + s2;
        r8 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r17, $i7, 100);
        $r18 = <org.apache.commons.validator.routines.TimeValidatorTest: java.util.TimeZone GMT>;
        $i8 = i0 - s2;
        r9 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>($r18, $i8, 100);
        $r19 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i9 = virtualinvoke $r19.<org.apache.commons.validator.routines.TimeValidator: int compareTime(java.util.Calendar,java.util.Calendar)>(r2, r1);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("mili LT", -1, $i9);
        $r20 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i10 = virtualinvoke $r20.<org.apache.commons.validator.routines.TimeValidator: int compareTime(java.util.Calendar,java.util.Calendar)>(r2, r2);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("mili EQ", 0, $i10);
        $r21 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i11 = virtualinvoke $r21.<org.apache.commons.validator.routines.TimeValidator: int compareTime(java.util.Calendar,java.util.Calendar)>(r2, r3);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("mili GT", 1, $i11);
        $r22 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i12 = virtualinvoke $r22.<org.apache.commons.validator.routines.TimeValidator: int compareSeconds(java.util.Calendar,java.util.Calendar)>(r2, r4);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("secs LT", -1, $i12);
        $r23 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i13 = virtualinvoke $r23.<org.apache.commons.validator.routines.TimeValidator: int compareSeconds(java.util.Calendar,java.util.Calendar)>(r2, r1);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("secs =1", 0, $i13);
        $r24 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i14 = virtualinvoke $r24.<org.apache.commons.validator.routines.TimeValidator: int compareSeconds(java.util.Calendar,java.util.Calendar)>(r2, r2);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("secs =2", 0, $i14);
        $r25 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i15 = virtualinvoke $r25.<org.apache.commons.validator.routines.TimeValidator: int compareSeconds(java.util.Calendar,java.util.Calendar)>(r2, r3);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("secs =3", 0, $i15);
        $r26 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i16 = virtualinvoke $r26.<org.apache.commons.validator.routines.TimeValidator: int compareSeconds(java.util.Calendar,java.util.Calendar)>(r2, r5);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("secs GT", 1, $i16);
        $r27 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i17 = virtualinvoke $r27.<org.apache.commons.validator.routines.TimeValidator: int compareMinutes(java.util.Calendar,java.util.Calendar)>(r2, r6);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("mins LT", -1, $i17);
        $r28 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i18 = virtualinvoke $r28.<org.apache.commons.validator.routines.TimeValidator: int compareMinutes(java.util.Calendar,java.util.Calendar)>(r2, r4);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("mins =1", 0, $i18);
        $r29 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i19 = virtualinvoke $r29.<org.apache.commons.validator.routines.TimeValidator: int compareMinutes(java.util.Calendar,java.util.Calendar)>(r2, r2);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("mins =2", 0, $i19);
        $r30 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i20 = virtualinvoke $r30.<org.apache.commons.validator.routines.TimeValidator: int compareMinutes(java.util.Calendar,java.util.Calendar)>(r2, r5);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("mins =3", 0, $i20);
        $r31 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i21 = virtualinvoke $r31.<org.apache.commons.validator.routines.TimeValidator: int compareMinutes(java.util.Calendar,java.util.Calendar)>(r2, r7);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("mins GT", 1, $i21);
        $r32 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i22 = virtualinvoke $r32.<org.apache.commons.validator.routines.TimeValidator: int compareHours(java.util.Calendar,java.util.Calendar)>(r2, r8);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("hour LT", -1, $i22);
        $r33 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i23 = virtualinvoke $r33.<org.apache.commons.validator.routines.TimeValidator: int compareHours(java.util.Calendar,java.util.Calendar)>(r2, r6);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("hour =1", 0, $i23);
        $r34 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i24 = virtualinvoke $r34.<org.apache.commons.validator.routines.TimeValidator: int compareHours(java.util.Calendar,java.util.Calendar)>(r2, r2);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("hour =2", 0, $i24);
        $r35 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i25 = virtualinvoke $r35.<org.apache.commons.validator.routines.TimeValidator: int compareHours(java.util.Calendar,java.util.Calendar)>(r2, r7);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("hour =3", 0, $i25);
        $r36 = r0.<org.apache.commons.validator.routines.TimeValidatorTest: org.apache.commons.validator.routines.TimeValidator validator>;
        $i26 = virtualinvoke $r36.<org.apache.commons.validator.routines.TimeValidator: int compareHours(java.util.Calendar,java.util.Calendar)>(r2, r9);
        staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: void assertEquals(java.lang.String,int,int)>("hour GT", 1, $i26);
        return;
    }

    protected static java.util.Calendar createTime(java.util.TimeZone, int, int)
    {
        java.util.TimeZone r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.Calendar r1, $r2;

        r0 := @parameter0: java.util.TimeZone;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        if r0 != null goto label0;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();
        goto label1;

     label0:
        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(r0);

     label1:
        r1 = $r2;
        $i5 = i0 / 10000;
        i2 = $i5 * 10000;
        $i6 = i0 / 100;
        $i7 = $i6 * 100;
        i3 = $i7 - i2;
        $i8 = i2 + i3;
        i4 = i0 - $i8;
        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(1, 1970);
        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(2, 0);
        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(5, 1);
        $i9 = i2 / 10000;
        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(11, $i9);
        $i10 = i3 / 100;
        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(12, $i10);
        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(13, i4);
        virtualinvoke r1.<java.util.Calendar: void set(int,int)>(14, i1);
        return r1;
    }

    protected static java.util.Date createDate(java.util.TimeZone, int, int)
    {
        java.util.TimeZone r0;
        int i0, i1;
        java.util.Calendar r1;
        java.util.Date $r2;

        r0 := @parameter0: java.util.TimeZone;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        r1 = staticinvoke <org.apache.commons.validator.routines.TimeValidatorTest: java.util.Calendar createTime(java.util.TimeZone,int,int)>(r0, i0, i1);
        $r2 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();
        return $r2;
    }
}
