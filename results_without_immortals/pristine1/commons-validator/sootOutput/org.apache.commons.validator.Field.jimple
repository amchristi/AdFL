public class org.apache.commons.validator.Field extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String DEFAULT_ARG;
    public static final java.lang.String TOKEN_INDEXED;
    protected static final java.lang.String TOKEN_START;
    protected static final java.lang.String TOKEN_END;
    protected static final java.lang.String TOKEN_VAR;
    protected java.lang.String property;
    protected java.lang.String indexedProperty;
    protected java.lang.String indexedListProperty;
    protected java.lang.String key;
    protected java.lang.String depends;
    protected int page;
    protected boolean clientValidation;
    protected int fieldOrder;
    private final java.util.List dependencyList;
    protected org.apache.commons.collections.FastHashMap hVars;
    protected org.apache.commons.collections.FastHashMap hMsgs;
    protected java.util.Map[] args;

    public void <init>()
    {
        org.apache.commons.validator.Field r0;
        java.util.ArrayList $r1;
        java.util.List $r2;
        org.apache.commons.collections.FastHashMap $r3, $r4;
        java.util.Map[] $r5;

        r0 := @this: org.apache.commons.validator.Field;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.commons.validator.Field: java.lang.String property> = null;
        r0.<org.apache.commons.validator.Field: java.lang.String indexedProperty> = null;
        r0.<org.apache.commons.validator.Field: java.lang.String indexedListProperty> = null;
        r0.<org.apache.commons.validator.Field: java.lang.String key> = null;
        r0.<org.apache.commons.validator.Field: java.lang.String depends> = null;
        r0.<org.apache.commons.validator.Field: int page> = 0;
        r0.<org.apache.commons.validator.Field: boolean clientValidation> = 1;
        r0.<org.apache.commons.validator.Field: int fieldOrder> = 0;
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        $r2 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($r1);
        r0.<org.apache.commons.validator.Field: java.util.List dependencyList> = $r2;
        $r3 = new org.apache.commons.collections.FastHashMap;
        specialinvoke $r3.<org.apache.commons.collections.FastHashMap: void <init>()>();
        r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hVars> = $r3;
        $r4 = new org.apache.commons.collections.FastHashMap;
        specialinvoke $r4.<org.apache.commons.collections.FastHashMap: void <init>()>();
        r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hMsgs> = $r4;
        $r5 = newarray (java.util.Map)[0];
        r0.<org.apache.commons.validator.Field: java.util.Map[] args> = $r5;
        return;
    }

    public int getPage()
    {
        org.apache.commons.validator.Field r0;
        int $i0;

        r0 := @this: org.apache.commons.validator.Field;
        $i0 = r0.<org.apache.commons.validator.Field: int page>;
        return $i0;
    }

    public void setPage(int)
    {
        org.apache.commons.validator.Field r0;
        int i0;

        r0 := @this: org.apache.commons.validator.Field;
        i0 := @parameter0: int;
        r0.<org.apache.commons.validator.Field: int page> = i0;
        return;
    }

    public int getFieldOrder()
    {
        org.apache.commons.validator.Field r0;
        int $i0;

        r0 := @this: org.apache.commons.validator.Field;
        $i0 = r0.<org.apache.commons.validator.Field: int fieldOrder>;
        return $i0;
    }

    public void setFieldOrder(int)
    {
        org.apache.commons.validator.Field r0;
        int i0;

        r0 := @this: org.apache.commons.validator.Field;
        i0 := @parameter0: int;
        r0.<org.apache.commons.validator.Field: int fieldOrder> = i0;
        return;
    }

    public java.lang.String getProperty()
    {
        org.apache.commons.validator.Field r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: java.lang.String property>;
        return $r1;
    }

    public void setProperty(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.commons.validator.Field: java.lang.String property> = r1;
        return;
    }

    public java.lang.String getIndexedProperty()
    {
        org.apache.commons.validator.Field r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: java.lang.String indexedProperty>;
        return $r1;
    }

    public void setIndexedProperty(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.commons.validator.Field: java.lang.String indexedProperty> = r1;
        return;
    }

    public java.lang.String getIndexedListProperty()
    {
        org.apache.commons.validator.Field r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: java.lang.String indexedListProperty>;
        return $r1;
    }

    public void setIndexedListProperty(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.commons.validator.Field: java.lang.String indexedListProperty> = r1;
        return;
    }

    public java.lang.String getDepends()
    {
        org.apache.commons.validator.Field r0;
        java.lang.String $r1;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: java.lang.String depends>;
        return $r1;
    }

    public void setDepends(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1, r3, $r6;
        java.util.StringTokenizer r2, $r5;
        java.util.List $r4, $r7;
        int $i0;
        boolean $z1;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.commons.validator.Field: java.lang.String depends> = r1;
        $r4 = r0.<org.apache.commons.validator.Field: java.util.List dependencyList>;
        interfaceinvoke $r4.<java.util.List: void clear()>();
        $r5 = new java.util.StringTokenizer;
        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");
        r2 = $r5;
        goto label1;

     label0:
        $r6 = virtualinvoke r2.<java.util.StringTokenizer: java.lang.String nextToken()>();
        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();
        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i0 <= 0 goto label1;

        $r7 = r0.<org.apache.commons.validator.Field: java.util.List dependencyList>;
        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r3);

     label1:
        $z1 = virtualinvoke r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();
        if $z1 != 0 goto label0;

        return;
    }

    public void addMsg(org.apache.commons.validator.Msg)
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.validator.Msg r1;
        java.util.Map $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: org.apache.commons.validator.Msg;
        $r2 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getMsgMap()>();
        $r3 = virtualinvoke r1.<org.apache.commons.validator.Msg: java.lang.String getName()>();
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);
        return;
    }

    public java.lang.String getMsg(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1, $r3;
        org.apache.commons.validator.Msg r2;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r2 = virtualinvoke r0.<org.apache.commons.validator.Field: org.apache.commons.validator.Msg getMessage(java.lang.String)>(r1);
        if r2 != null goto label0;

        $r3 = null;
        goto label1;

     label0:
        $r3 = virtualinvoke r2.<org.apache.commons.validator.Msg: java.lang.String getKey()>();

     label1:
        return $r3;
    }

    public org.apache.commons.validator.Msg getMessage(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.commons.validator.Msg $r4;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getMsgMap()>();
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (org.apache.commons.validator.Msg) $r3;
        return $r4;
    }

    public java.util.Map getMessages()
    {
        org.apache.commons.validator.Field r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getMsgMap()>();
        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);
        return $r2;
    }

    public boolean isClientValidation()
    {
        org.apache.commons.validator.Field r0;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.Field;
        $z0 = r0.<org.apache.commons.validator.Field: boolean clientValidation>;
        return $z0;
    }

    public void setClientValidation(boolean)
    {
        org.apache.commons.validator.Field r0;
        boolean z0;

        r0 := @this: org.apache.commons.validator.Field;
        z0 := @parameter0: boolean;
        r0.<org.apache.commons.validator.Field: boolean clientValidation> = z0;
        return;
    }

    public void addArg(org.apache.commons.validator.Arg)
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.validator.Arg r1;
        java.util.Map r2;
        java.lang.String $r3, $r4, $r8, $r10;
        int $i0, $i1, $i2;
        java.util.Map[] $r5, $r7;
        java.util.HashMap $r6;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: org.apache.commons.validator.Arg;
        if r1 == null goto label0;

        $r3 = virtualinvoke r1.<org.apache.commons.validator.Arg: java.lang.String getKey()>();
        if $r3 == null goto label0;

        $r4 = virtualinvoke r1.<org.apache.commons.validator.Arg: java.lang.String getKey()>();
        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        return;

     label1:
        specialinvoke r0.<org.apache.commons.validator.Field: void determineArgPosition(org.apache.commons.validator.Arg)>(r1);
        specialinvoke r0.<org.apache.commons.validator.Field: void ensureArgsCapacity(org.apache.commons.validator.Arg)>(r1);
        $r5 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i1 = virtualinvoke r1.<org.apache.commons.validator.Arg: int getPosition()>();
        r2 = $r5[$i1];
        if r2 != null goto label2;

        $r6 = new java.util.HashMap;
        specialinvoke $r6.<java.util.HashMap: void <init>()>();
        r2 = $r6;
        $r7 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i2 = virtualinvoke r1.<org.apache.commons.validator.Arg: int getPosition()>();
        $r7[$i2] = r2;

     label2:
        $r8 = virtualinvoke r1.<org.apache.commons.validator.Arg: java.lang.String getName()>();
        if $r8 != null goto label3;

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.commons.validator.Field.DEFAULT", r1);
        goto label4;

     label3:
        $r10 = virtualinvoke r1.<org.apache.commons.validator.Arg: java.lang.String getName()>();
        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r1);

     label4:
        return;
    }

    private void determineArgPosition(org.apache.commons.validator.Arg)
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.validator.Arg r1;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.lang.String r2, $r5, $r6;
        java.util.Map[] $r3, $r4, $r7, $r9, $r11, $r13, $r15;
        java.util.Map $r8, $r10, $r12, $r14;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: org.apache.commons.validator.Arg;
        i0 = virtualinvoke r1.<org.apache.commons.validator.Arg: int getPosition()>();
        if i0 < 0 goto label0;

        return;

     label0:
        $r3 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        if $r3 == null goto label1;

        $r4 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i4 = lengthof $r4;
        if $i4 != 0 goto label2;

     label1:
        virtualinvoke r1.<org.apache.commons.validator.Arg: void setPosition(int)>(0);
        return;

     label2:
        $r5 = virtualinvoke r1.<org.apache.commons.validator.Arg: java.lang.String getName()>();
        if $r5 != null goto label3;

        $r6 = "org.apache.commons.validator.Field.DEFAULT";
        goto label4;

     label3:
        $r6 = virtualinvoke r1.<org.apache.commons.validator.Arg: java.lang.String getName()>();

     label4:
        r2 = $r6;
        i1 = -1;
        i2 = -1;
        i3 = 0;
        goto label8;

     label5:
        $r7 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r8 = $r7[i3];
        if $r8 == null goto label6;

        $r9 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r10 = $r9[i3];
        $z0 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
        if $z0 == 0 goto label6;

        i1 = i3;

     label6:
        $r11 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r12 = $r11[i3];
        if $r12 == null goto label7;

        $r13 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r14 = $r13[i3];
        $z1 = interfaceinvoke $r14.<java.util.Map: boolean containsKey(java.lang.Object)>("org.apache.commons.validator.Field.DEFAULT");
        if $z1 == 0 goto label7;

        i2 = i3;

     label7:
        i3 = i3 + 1;

     label8:
        $r15 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i5 = lengthof $r15;
        if i3 < $i5 goto label5;

        if i1 >= 0 goto label9;

        i1 = i2;

     label9:
        i6 = i1 + 1;
        virtualinvoke r1.<org.apache.commons.validator.Arg: void setPosition(int)>(i6);
        return;
    }

    private void ensureArgsCapacity(org.apache.commons.validator.Arg)
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.validator.Arg r1;
        java.util.Map[] r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: org.apache.commons.validator.Arg;
        $i0 = virtualinvoke r1.<org.apache.commons.validator.Arg: int getPosition()>();
        $r3 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i1 = lengthof $r3;
        if $i0 < $i1 goto label0;

        $i2 = virtualinvoke r1.<org.apache.commons.validator.Arg: int getPosition()>();
        $i3 = $i2 + 1;
        r2 = newarray (java.util.Map)[$i3];
        $r4 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r5 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i4 = lengthof $r5;
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r2, 0, $i4);
        r0.<org.apache.commons.validator.Field: java.util.Map[] args> = r2;

     label0:
        return;
    }

    public org.apache.commons.validator.Arg getArg(int)
    {
        org.apache.commons.validator.Field r0;
        int i0;
        org.apache.commons.validator.Arg $r1;

        r0 := @this: org.apache.commons.validator.Field;
        i0 := @parameter0: int;
        $r1 = virtualinvoke r0.<org.apache.commons.validator.Field: org.apache.commons.validator.Arg getArg(java.lang.String,int)>("org.apache.commons.validator.Field.DEFAULT", i0);
        return $r1;
    }

    public org.apache.commons.validator.Arg getArg(java.lang.String, int)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;
        int i0, $i1;
        org.apache.commons.validator.Arg r2, $r9;
        java.util.Map[] $r3, $r4, $r6;
        java.util.Map $r5, $r7;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        i0 := @parameter1: int;
        $r3 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i1 = lengthof $r3;
        if i0 >= $i1 goto label0;

        $r4 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r5 = $r4[i0];
        if $r5 != null goto label1;

     label0:
        return null;

     label1:
        $r6 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r7 = $r6[i0];
        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        r2 = (org.apache.commons.validator.Arg) $r8;
        if r2 != null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.commons.validator.Field.DEFAULT");
        if $z0 == 0 goto label2;

        return null;

     label2:
        if r2 != null goto label3;

        $r9 = virtualinvoke r0.<org.apache.commons.validator.Field: org.apache.commons.validator.Arg getArg(int)>(i0);
        goto label4;

     label3:
        $r9 = r2;

     label4:
        return $r9;
    }

    public org.apache.commons.validator.Arg[] getArgs(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;
        org.apache.commons.validator.Arg[] r2;
        int i0, $i1, $i2;
        java.util.Map[] $r3, $r5;
        org.apache.commons.validator.Arg $r4;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        $r3 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i1 = lengthof $r3;
        r2 = newarray (org.apache.commons.validator.Arg)[$i1];
        i0 = 0;
        goto label1;

     label0:
        $r4 = virtualinvoke r0.<org.apache.commons.validator.Field: org.apache.commons.validator.Arg getArg(java.lang.String,int)>(r1, i0);
        r2[i0] = $r4;
        i0 = i0 + 1;

     label1:
        $r5 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i2 = lengthof $r5;
        if i0 < $i2 goto label0;

        return r2;
    }

    public void addVar(org.apache.commons.validator.Var)
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.validator.Var r1;
        java.util.Map $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: org.apache.commons.validator.Var;
        $r2 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getVarMap()>();
        $r3 = virtualinvoke r1.<org.apache.commons.validator.Var: java.lang.String getName()>();
        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r1);
        return;
    }

    public void addVar(java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1, r2, r3;
        org.apache.commons.validator.Var $r4;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.String;
        $r4 = new org.apache.commons.validator.Var;
        specialinvoke $r4.<org.apache.commons.validator.Var: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);
        virtualinvoke r0.<org.apache.commons.validator.Field: void addVar(org.apache.commons.validator.Var)>($r4);
        return;
    }

    public org.apache.commons.validator.Var getVar(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.commons.validator.Var $r4;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        $r2 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getVarMap()>();
        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        $r4 = (org.apache.commons.validator.Var) $r3;
        return $r4;
    }

    public java.lang.String getVarValue(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1, r2;
        java.lang.Object r3;
        org.apache.commons.validator.Var r4;
        java.util.Map $r5;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r2 = null;
        $r5 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getVarMap()>();
        r3 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);
        if r3 == null goto label0;

        $z0 = r3 instanceof org.apache.commons.validator.Var;
        if $z0 == 0 goto label0;

        r4 = (org.apache.commons.validator.Var) r3;
        r2 = virtualinvoke r4.<org.apache.commons.validator.Var: java.lang.String getValue()>();

     label0:
        return r2;
    }

    public java.util.Map getVars()
    {
        org.apache.commons.validator.Field r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getVarMap()>();
        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);
        return $r2;
    }

    public java.lang.String getKey()
    {
        org.apache.commons.validator.Field r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: java.lang.String key>;
        if $r1 != null goto label0;

        virtualinvoke r0.<org.apache.commons.validator.Field: void generateKey()>();

     label0:
        $r2 = r0.<org.apache.commons.validator.Field: java.lang.String key>;
        return $r2;
    }

    public void setKey(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r0.<org.apache.commons.validator.Field: java.lang.String key> = r1;
        return;
    }

    public boolean isIndexed()
    {
        org.apache.commons.validator.Field r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: java.lang.String indexedListProperty>;
        if $r1 == null goto label0;

        $r2 = r0.<org.apache.commons.validator.Field: java.lang.String indexedListProperty>;
        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        return 1;

     label0:
        return 0;
    }

    public void generateKey()
    {
        org.apache.commons.validator.Field r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7;
        boolean $z0;
        java.lang.String $r2, $r3, $r6, $r8, $r9;

        r0 := @this: org.apache.commons.validator.Field;
        $z0 = virtualinvoke r0.<org.apache.commons.validator.Field: boolean isIndexed()>();
        if $z0 == 0 goto label0;

        $r1 = new java.lang.StringBuilder;
        $r2 = r0.<org.apache.commons.validator.Field: java.lang.String indexedListProperty>;
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);
        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
        $r6 = r0.<org.apache.commons.validator.Field: java.lang.String property>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        r0.<org.apache.commons.validator.Field: java.lang.String key> = $r8;
        goto label1;

     label0:
        $r9 = r0.<org.apache.commons.validator.Field: java.lang.String property>;
        r0.<org.apache.commons.validator.Field: java.lang.String key> = $r9;

     label1:
        return;
    }

    void process(java.util.Map, java.util.Map)
    {
        org.apache.commons.validator.Field r0;
        java.util.Map r1, r2, $r33;
        java.util.Iterator r3, r20, r35;
        java.util.Map$Entry r4, r22;
        java.lang.String r5, r6, r7, $r17, $r18, r24, r28, r30, $r31, $r32, r37, r41, r43;
        org.apache.commons.collections.FastHashMap $r8, $r9, $r44;
        java.util.Set $r10, $r19, $r34;
        java.lang.Object $r11, $r12, $r16, $r21, $r23, $r29, $r36;
        java.lang.StringBuilder $r13, $r14, $r15, $r25, $r26, $r27, $r38, $r39, $r40;
        boolean $z0, $z1, $z2;
        org.apache.commons.validator.Var r42;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.util.Map;
        r2 := @parameter1: java.util.Map;
        $r8 = r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hMsgs>;
        virtualinvoke $r8.<org.apache.commons.collections.FastHashMap: void setFast(boolean)>(0);
        $r9 = r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hVars>;
        virtualinvoke $r9.<org.apache.commons.collections.FastHashMap: void setFast(boolean)>(1);
        virtualinvoke r0.<org.apache.commons.validator.Field: void generateKey()>();
        $r10 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r11 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r11;
        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        r5 = (java.lang.String) $r12;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("${");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        $r16 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r7 = (java.lang.String) $r16;
        $r17 = r0.<org.apache.commons.validator.Field: java.lang.String property>;
        $r18 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r17, r6, r7);
        r0.<org.apache.commons.validator.Field: java.lang.String property> = $r18;
        specialinvoke r0.<org.apache.commons.validator.Field: void processVars(java.lang.String,java.lang.String)>(r6, r7);
        specialinvoke r0.<org.apache.commons.validator.Field: void processMessageComponents(java.lang.String,java.lang.String)>(r6, r7);

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        $r19 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();
        r20 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();
        goto label3;

     label2:
        $r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();
        r22 = (java.util.Map$Entry) $r21;
        $r23 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();
        r24 = (java.lang.String) $r23;
        $r25 = new java.lang.StringBuilder;
        specialinvoke $r25.<java.lang.StringBuilder: void <init>(java.lang.String)>("${");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
        r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        $r29 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();
        r30 = (java.lang.String) $r29;
        $r31 = r0.<org.apache.commons.validator.Field: java.lang.String property>;
        $r32 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r31, r28, r30);
        r0.<org.apache.commons.validator.Field: java.lang.String property> = $r32;
        specialinvoke r0.<org.apache.commons.validator.Field: void processVars(java.lang.String,java.lang.String)>(r28, r30);
        specialinvoke r0.<org.apache.commons.validator.Field: void processMessageComponents(java.lang.String,java.lang.String)>(r28, r30);

     label3:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label2;

        $r33 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getVarMap()>();
        $r34 = interfaceinvoke $r33.<java.util.Map: java.util.Set keySet()>();
        r35 = interfaceinvoke $r34.<java.util.Set: java.util.Iterator iterator()>();
        goto label5;

     label4:
        $r36 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();
        r37 = (java.lang.String) $r36;
        $r38 = new java.lang.StringBuilder;
        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("${var:");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
        r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();
        r42 = virtualinvoke r0.<org.apache.commons.validator.Field: org.apache.commons.validator.Var getVar(java.lang.String)>(r37);
        r43 = virtualinvoke r42.<org.apache.commons.validator.Var: java.lang.String getValue()>();
        specialinvoke r0.<org.apache.commons.validator.Field: void processMessageComponents(java.lang.String,java.lang.String)>(r41, r43);

     label5:
        $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label4;

        $r44 = r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hMsgs>;
        virtualinvoke $r44.<org.apache.commons.collections.FastHashMap: void setFast(boolean)>(1);
        return;
    }

    private void processVars(java.lang.String, java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1, r2, r4, $r9, $r10;
        java.util.Iterator r3;
        org.apache.commons.validator.Var r5;
        java.util.Map $r6;
        java.util.Set $r7;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r6 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getVarMap()>();
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Set keySet()>();
        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.lang.String) $r8;
        r5 = virtualinvoke r0.<org.apache.commons.validator.Field: org.apache.commons.validator.Var getVar(java.lang.String)>(r4);
        $r9 = virtualinvoke r5.<org.apache.commons.validator.Var: java.lang.String getValue()>();
        $r10 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r9, r1, r2);
        virtualinvoke r5.<org.apache.commons.validator.Var: void setValue(java.lang.String)>($r10);

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

        return;
    }

    private void processMessageComponents(java.lang.String, java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1, r2, r3, $r9, $r10;
        java.util.Iterator r4;
        org.apache.commons.validator.Msg r5;
        boolean $z0, $z1;
        java.util.Map $r6;
        java.util.Collection $r7;
        java.lang.Object $r8;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 = "${var:";
        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(r3);
        if $z0 != 0 goto label2;

        $r6 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getMsgMap()>();
        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();
        r4 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();
        goto label1;

     label0:
        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.apache.commons.validator.Msg) $r8;
        $r9 = virtualinvoke r5.<org.apache.commons.validator.Msg: java.lang.String getKey()>();
        $r10 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r9, r1, r2);
        virtualinvoke r5.<org.apache.commons.validator.Msg: void setKey(java.lang.String)>($r10);

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z1 != 0 goto label0;

     label2:
        specialinvoke r0.<org.apache.commons.validator.Field: void processArg(java.lang.String,java.lang.String)>(r1, r2);
        return;
    }

    private void processArg(java.lang.String, java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1, r2, $r9, $r10;
        int i0, $i1;
        java.util.Map r3;
        java.util.Iterator r4;
        org.apache.commons.validator.Arg r5;
        java.util.Map[] $r6, $r11;
        java.util.Collection $r7;
        java.lang.Object $r8;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        i0 = 0;
        goto label5;

     label0:
        $r6 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        r3 = $r6[i0];
        if r3 != null goto label1;

        goto label4;

     label1:
        $r7 = interfaceinvoke r3.<java.util.Map: java.util.Collection values()>();
        r4 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();
        goto label3;

     label2:
        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
        r5 = (org.apache.commons.validator.Arg) $r8;
        if r5 == null goto label3;

        $r9 = virtualinvoke r5.<org.apache.commons.validator.Arg: java.lang.String getKey()>();
        $r10 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($r9, r1, r2);
        virtualinvoke r5.<org.apache.commons.validator.Arg: void setKey(java.lang.String)>($r10);

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label2;

     label4:
        i0 = i0 + 1;

     label5:
        $r11 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i1 = lengthof $r11;
        if i0 < $i1 goto label0;

        return;
    }

    public boolean isDependency(java.lang.String)
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        $r2 = r0.<org.apache.commons.validator.Field: java.util.List dependencyList>;
        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);
        return $z0;
    }

    public java.util.List getDependencyList()
    {
        org.apache.commons.validator.Field r0;
        java.util.List $r1, $r2;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: java.util.List dependencyList>;
        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);
        return $r2;
    }

    public java.lang.Object clone()
    {
        org.apache.commons.validator.Field r0, r8;
        null_type n0;
        java.lang.CloneNotSupportedException r1, $r9;
        int i0, $i1, $i2;
        java.util.HashMap r2, $r16;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, $r11;
        org.apache.commons.validator.Arg r6, $r24;
        java.lang.Object $r7, $r20, $r21, $r22, $r23;
        java.lang.RuntimeException $r10;
        java.util.Map[] $r12, r13, $r14, $r17, $r26, $r27;
        java.util.Map $r15, $r18;
        java.util.Set $r19;
        boolean $z0;
        org.apache.commons.collections.FastHashMap $r28, $r29, $r30, $r31;

        r0 := @this: org.apache.commons.validator.Field;
        n0 = null;

     label0:
        $r7 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();
        r8 = (org.apache.commons.validator.Field) $r7;

     label1:
        goto label3;

     label2:
        $r9 := @caughtexception;
        r1 = $r9;
        $r10 = new java.lang.RuntimeException;
        $r11 = virtualinvoke r1.<java.lang.CloneNotSupportedException: java.lang.String toString()>();
        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);
        throw $r10;

     label3:
        $r12 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i1 = lengthof $r12;
        r13 = newarray (java.util.Map)[$i1];
        r8.<org.apache.commons.validator.Field: java.util.Map[] args> = r13;
        i0 = 0;
        goto label9;

     label4:
        $r14 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r15 = $r14[i0];
        if $r15 != null goto label5;

        goto label8;

     label5:
        $r16 = new java.util.HashMap;
        $r17 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r18 = $r17[i0];
        specialinvoke $r16.<java.util.HashMap: void <init>(java.util.Map)>($r18);
        r2 = $r16;
        $r19 = interfaceinvoke r2.<java.util.Map: java.util.Set entrySet()>();
        r3 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();
        goto label7;

     label6:
        $r20 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        r4 = (java.util.Map$Entry) $r20;
        $r21 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();
        r5 = (java.lang.String) $r21;
        $r22 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();
        r6 = (org.apache.commons.validator.Arg) $r22;
        $r23 = virtualinvoke r6.<org.apache.commons.validator.Arg: java.lang.Object clone()>();
        $r24 = (org.apache.commons.validator.Arg) $r23;
        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r24);

     label7:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label6;

        $r26 = r8.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $r26[i0] = r2;

     label8:
        i0 = i0 + 1;

     label9:
        $r27 = r0.<org.apache.commons.validator.Field: java.util.Map[] args>;
        $i2 = lengthof $r27;
        if i0 < $i2 goto label4;

        $r28 = r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hVars>;
        $r29 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: org.apache.commons.collections.FastHashMap copyFastHashMap(org.apache.commons.collections.FastHashMap)>($r28);
        r8.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hVars> = $r29;
        $r30 = r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hMsgs>;
        $r31 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: org.apache.commons.collections.FastHashMap copyFastHashMap(org.apache.commons.collections.FastHashMap)>($r30);
        r8.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hMsgs> = $r31;
        return r8;

        catch java.lang.CloneNotSupportedException from label0 to label1 with label2;
    }

    public java.lang.String toString()
    {
        org.apache.commons.validator.Field r0;
        java.lang.StringBuilder $r1, r2, $r5, $r7, $r8, $r11, $r13, $r14, $r17, $r19, $r20, $r23, $r25, $r26, $r29, $r31, $r32, $r35, $r36, $r37, $r40, $r41, $r42;
        java.util.Iterator r3;
        java.lang.Object r4, $r53;
        java.lang.String $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r38, $r43, $r56;
        int $i0, $i1;
        org.apache.commons.collections.FastHashMap $r45;
        java.util.Map $r47, $r52;
        java.util.Set $r48;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        r2 = $r1;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t\tkey = ");
        $r6 = r0.<org.apache.commons.validator.Field: java.lang.String key>;
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t\tproperty = ");
        $r12 = r0.<org.apache.commons.validator.Field: java.lang.String property>;
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t\tindexedProperty = ");
        $r18 = r0.<org.apache.commons.validator.Field: java.lang.String indexedProperty>;
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);
        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t\tindexedListProperty = ");
        $r24 = r0.<org.apache.commons.validator.Field: java.lang.String indexedListProperty>;
        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = new java.lang.StringBuilder;
        specialinvoke $r29.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t\tdepends = ");
        $r30 = r0.<org.apache.commons.validator.Field: java.lang.String depends>;
        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);
        $r35 = new java.lang.StringBuilder;
        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t\tpage = ");
        $i0 = r0.<org.apache.commons.validator.Field: int page>;
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);
        $r40 = new java.lang.StringBuilder;
        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("\t\tfieldOrder = ");
        $i1 = r0.<org.apache.commons.validator.Field: int fieldOrder>;
        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);
        $r45 = r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hVars>;
        if $r45 == null goto label2;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\tVars:\n");
        $r47 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getVarMap()>();
        $r48 = interfaceinvoke $r47.<java.util.Map: java.util.Set keySet()>();
        r3 = interfaceinvoke $r48.<java.util.Set: java.util.Iterator iterator()>();
        goto label1;

     label0:
        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t\t\t");
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");
        $r52 = virtualinvoke r0.<org.apache.commons.validator.Field: java.util.Map getVarMap()>();
        $r53 = interfaceinvoke $r52.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r53);
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label0;

     label2:
        $r56 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r56;
    }

    java.lang.Object[] getIndexedProperty(java.lang.Object) throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.Field r0;
        java.lang.Object r1, r4;
        null_type n0;
        java.lang.IllegalAccessException r2, $r5;
        java.lang.String $r3, $r7, $r11, $r15, $r22, $r23, $r25;
        org.apache.commons.validator.ValidatorException $r6, $r10, $r14, $r20;
        java.lang.reflect.InvocationTargetException $r8, r9;
        java.lang.NoSuchMethodException $r12, r13;
        boolean $z0, $z1;
        java.util.Collection $r16;
        java.lang.Object[] $r17, $r19;
        java.lang.Class $r18;
        java.lang.StringBuilder $r21, $r24;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.Object;
        n0 = null;

     label0:
        $r3 = virtualinvoke r0.<org.apache.commons.validator.Field: java.lang.String getIndexedListProperty()>();
        r4 = staticinvoke <org.apache.commons.beanutils.PropertyUtils: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r1, $r3);

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = new org.apache.commons.validator.ValidatorException;
        $r7 = virtualinvoke r2.<java.lang.IllegalAccessException: java.lang.String getMessage()>();
        specialinvoke $r6.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r7);
        throw $r6;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new org.apache.commons.validator.ValidatorException;
        $r11 = virtualinvoke r9.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();
        specialinvoke $r10.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r11);
        throw $r10;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new org.apache.commons.validator.ValidatorException;
        $r15 = virtualinvoke r13.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();
        specialinvoke $r14.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r15);
        throw $r14;

     label5:
        $z0 = r4 instanceof java.util.Collection;
        if $z0 == 0 goto label6;

        $r16 = (java.util.Collection) r4;
        $r17 = interfaceinvoke $r16.<java.util.Collection: java.lang.Object[] toArray()>();
        return $r17;

     label6:
        $r18 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $z1 = virtualinvoke $r18.<java.lang.Class: boolean isArray()>();
        if $z1 == 0 goto label7;

        $r19 = (java.lang.Object[]) r4;
        return $r19;

     label7:
        $r20 = new org.apache.commons.validator.ValidatorException;
        $r21 = new java.lang.StringBuilder;
        $r22 = virtualinvoke r0.<org.apache.commons.validator.Field: java.lang.String getKey()>();
        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r22);
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not indexed");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r20.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r25);
        throw $r20;

        catch java.lang.IllegalAccessException from label0 to label1 with label2;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label3;
        catch java.lang.NoSuchMethodException from label0 to label1 with label4;
    }

    private int getIndexedPropertySize(java.lang.Object) throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.Field r0;
        java.lang.Object r1, r4;
        null_type n0;
        java.lang.IllegalAccessException r2, $r5;
        java.lang.String $r3, $r7, $r11, $r15, $r21, $r22, $r24;
        org.apache.commons.validator.ValidatorException $r6, $r10, $r14, $r19;
        java.lang.reflect.InvocationTargetException $r8, r9;
        java.lang.NoSuchMethodException $r12, r13;
        boolean $z0, $z1;
        java.util.Collection $r16;
        int $i0, $i1;
        java.lang.Class $r17;
        java.lang.Object[] $r18;
        java.lang.StringBuilder $r20, $r23;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.Object;
        n0 = null;

     label0:
        $r3 = virtualinvoke r0.<org.apache.commons.validator.Field: java.lang.String getIndexedListProperty()>();
        r4 = staticinvoke <org.apache.commons.beanutils.PropertyUtils: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(r1, $r3);

     label1:
        goto label5;

     label2:
        $r5 := @caughtexception;
        r2 = $r5;
        $r6 = new org.apache.commons.validator.ValidatorException;
        $r7 = virtualinvoke r2.<java.lang.IllegalAccessException: java.lang.String getMessage()>();
        specialinvoke $r6.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r7);
        throw $r6;

     label3:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new org.apache.commons.validator.ValidatorException;
        $r11 = virtualinvoke r9.<java.lang.reflect.InvocationTargetException: java.lang.String getMessage()>();
        specialinvoke $r10.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r11);
        throw $r10;

     label4:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = new org.apache.commons.validator.ValidatorException;
        $r15 = virtualinvoke r13.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();
        specialinvoke $r14.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r15);
        throw $r14;

     label5:
        if r4 != null goto label6;

        return 0;

     label6:
        $z0 = r4 instanceof java.util.Collection;
        if $z0 == 0 goto label7;

        $r16 = (java.util.Collection) r4;
        $i0 = interfaceinvoke $r16.<java.util.Collection: int size()>();
        return $i0;

     label7:
        $r17 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $z1 = virtualinvoke $r17.<java.lang.Class: boolean isArray()>();
        if $z1 == 0 goto label8;

        $r18 = (java.lang.Object[]) r4;
        $i1 = lengthof $r18;
        return $i1;

     label8:
        $r19 = new org.apache.commons.validator.ValidatorException;
        $r20 = new java.lang.StringBuilder;
        $r21 = virtualinvoke r0.<org.apache.commons.validator.Field: java.lang.String getKey()>();
        $r22 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r21);
        specialinvoke $r20.<java.lang.StringBuilder: void <init>(java.lang.String)>($r22);
        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not indexed");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r19.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r24);
        throw $r19;

        catch java.lang.IllegalAccessException from label0 to label1 with label2;
        catch java.lang.reflect.InvocationTargetException from label0 to label1 with label3;
        catch java.lang.NoSuchMethodException from label0 to label1 with label4;
    }

    private boolean validateForRule(org.apache.commons.validator.ValidatorAction, org.apache.commons.validator.ValidatorResults, java.util.Map, java.util.Map, int) throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.validator.ValidatorAction r1;
        org.apache.commons.validator.ValidatorResults r2;
        java.util.Map r3, r4;
        int i0;
        org.apache.commons.validator.ValidatorResult r5;
        java.lang.String $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: org.apache.commons.validator.ValidatorAction;
        r2 := @parameter1: org.apache.commons.validator.ValidatorResults;
        r3 := @parameter2: java.util.Map;
        r4 := @parameter3: java.util.Map;
        i0 := @parameter4: int;
        $r6 = virtualinvoke r0.<org.apache.commons.validator.Field: java.lang.String getKey()>();
        r5 = virtualinvoke r2.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>($r6);
        if r5 == null goto label0;

        $r7 = virtualinvoke r1.<org.apache.commons.validator.ValidatorAction: java.lang.String getName()>();
        $z0 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r7);
        if $z0 == 0 goto label0;

        $r8 = virtualinvoke r1.<org.apache.commons.validator.ValidatorAction: java.lang.String getName()>();
        $z1 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r8);
        return $z1;

     label0:
        $z2 = specialinvoke r0.<org.apache.commons.validator.Field: boolean runDependentValidators(org.apache.commons.validator.ValidatorAction,org.apache.commons.validator.ValidatorResults,java.util.Map,java.util.Map,int)>(r1, r2, r3, r4, i0);
        if $z2 != 0 goto label1;

        return 0;

     label1:
        $z3 = virtualinvoke r1.<org.apache.commons.validator.ValidatorAction: boolean executeValidationMethod(org.apache.commons.validator.Field,java.util.Map,org.apache.commons.validator.ValidatorResults,int)>(r0, r4, r2, i0);
        return $z3;
    }

    private boolean runDependentValidators(org.apache.commons.validator.ValidatorAction, org.apache.commons.validator.ValidatorResults, java.util.Map, java.util.Map, int) throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.validator.ValidatorAction r1, r8;
        org.apache.commons.validator.ValidatorResults r2;
        java.util.Map r3, r4;
        int i0;
        java.util.List r5;
        java.util.Iterator r6;
        java.lang.String r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r9, $r10;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: org.apache.commons.validator.ValidatorAction;
        r2 := @parameter1: org.apache.commons.validator.ValidatorResults;
        r3 := @parameter2: java.util.Map;
        r4 := @parameter3: java.util.Map;
        i0 := @parameter4: int;
        r5 = virtualinvoke r1.<org.apache.commons.validator.ValidatorAction: java.util.List getDependencyList()>();
        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();
        if $z0 == 0 goto label0;

        return 1;

     label0:
        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();
        goto label3;

     label1:
        $r9 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r9;
        $r10 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);
        r8 = (org.apache.commons.validator.ValidatorAction) $r10;
        if r8 != null goto label2;

        specialinvoke r0.<org.apache.commons.validator.Field: void handleMissingAction(java.lang.String)>(r7);

     label2:
        $z1 = specialinvoke r0.<org.apache.commons.validator.Field: boolean validateForRule(org.apache.commons.validator.ValidatorAction,org.apache.commons.validator.ValidatorResults,java.util.Map,java.util.Map,int)>(r8, r2, r3, r4, i0);
        if $z1 != 0 goto label3;

        return 0;

     label3:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label1;

        return 1;
    }

    public org.apache.commons.validator.ValidatorResults validate(java.util.Map, java.util.Map) throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.Field r0;
        java.util.Map r1, r2;
        org.apache.commons.validator.ValidatorResults r3, r6, $r10, $r11, $r13;
        java.lang.Object r4, $r14, $r15;
        int i0, i1, $i2;
        java.util.Iterator r5;
        java.lang.String r7, $r9;
        org.apache.commons.validator.ValidatorAction r8;
        boolean z0, $z1, $z2;
        java.util.List $r12;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.util.Map;
        r2 := @parameter1: java.util.Map;
        $r9 = virtualinvoke r0.<org.apache.commons.validator.Field: java.lang.String getDepends()>();
        if $r9 != null goto label0;

        $r10 = new org.apache.commons.validator.ValidatorResults;
        specialinvoke $r10.<org.apache.commons.validator.ValidatorResults: void <init>()>();
        return $r10;

     label0:
        $r11 = new org.apache.commons.validator.ValidatorResults;
        specialinvoke $r11.<org.apache.commons.validator.ValidatorResults: void <init>()>();
        r3 = $r11;
        r4 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>("java.lang.Object");
        $z1 = virtualinvoke r0.<org.apache.commons.validator.Field: boolean isIndexed()>();
        if $z1 == 0 goto label1;

        $i2 = specialinvoke r0.<org.apache.commons.validator.Field: int getIndexedPropertySize(java.lang.Object)>(r4);
        goto label2;

     label1:
        $i2 = 1;

     label2:
        i0 = $i2;
        i1 = 0;
        goto label7;

     label3:
        $r12 = r0.<org.apache.commons.validator.Field: java.util.List dependencyList>;
        r5 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();
        $r13 = new org.apache.commons.validator.ValidatorResults;
        specialinvoke $r13.<org.apache.commons.validator.ValidatorResults: void <init>()>();
        r6 = $r13;
        goto label6;

     label4:
        $r14 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();
        r7 = (java.lang.String) $r14;
        $r15 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);
        r8 = (org.apache.commons.validator.ValidatorAction) $r15;
        if r8 != null goto label5;

        specialinvoke r0.<org.apache.commons.validator.Field: void handleMissingAction(java.lang.String)>(r7);

     label5:
        z0 = specialinvoke r0.<org.apache.commons.validator.Field: boolean validateForRule(org.apache.commons.validator.ValidatorAction,org.apache.commons.validator.ValidatorResults,java.util.Map,java.util.Map,int)>(r8, r6, r2, r1, i1);
        if z0 != 0 goto label6;

        virtualinvoke r3.<org.apache.commons.validator.ValidatorResults: void merge(org.apache.commons.validator.ValidatorResults)>(r6);
        return r3;

     label6:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label4;

        virtualinvoke r3.<org.apache.commons.validator.ValidatorResults: void merge(org.apache.commons.validator.ValidatorResults)>(r6);
        i1 = i1 + 1;

     label7:
        if i1 < i0 goto label3;

        return r3;
    }

    private void handleMissingAction(java.lang.String) throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.Field r0;
        java.lang.String r1, $r6, $r8;
        org.apache.commons.validator.ValidatorException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;

        r0 := @this: org.apache.commons.validator.Field;
        r1 := @parameter0: java.lang.String;
        $r2 = new org.apache.commons.validator.ValidatorException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("No ValidatorAction named ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found for field ");
        $r6 = virtualinvoke r0.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<org.apache.commons.validator.ValidatorException: void <init>(java.lang.String)>($r8);
        throw $r2;
    }

    protected java.util.Map getMsgMap()
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.collections.FastHashMap $r1;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hMsgs>;
        return $r1;
    }

    protected java.util.Map getVarMap()
    {
        org.apache.commons.validator.Field r0;
        org.apache.commons.collections.FastHashMap $r1;

        r0 := @this: org.apache.commons.validator.Field;
        $r1 = r0.<org.apache.commons.validator.Field: org.apache.commons.collections.FastHashMap hVars>;
        return $r1;
    }
}
