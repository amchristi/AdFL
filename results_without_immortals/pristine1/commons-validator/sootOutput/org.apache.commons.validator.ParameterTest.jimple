public class org.apache.commons.validator.ParameterTest extends org.apache.commons.validator.AbstractCommonTest
{
    private static final java.lang.String FORM_KEY;
    private java.lang.String firstName;
    private java.lang.String middleName;
    private java.lang.String lastName;

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.ParameterTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.ParameterTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.commons.validator.AbstractCommonTest: void <init>(java.lang.String)>(r1);
        return;
    }

    protected void setUp() throws java.io.IOException, org.xml.sax.SAXException
    {
        org.apache.commons.validator.ParameterTest r0;

        r0 := @this: org.apache.commons.validator.ParameterTest;
        virtualinvoke r0.<org.apache.commons.validator.ParameterTest: void loadResources(java.lang.String)>("ParameterTest-config.xml");
        r0.<org.apache.commons.validator.ParameterTest: java.lang.String firstName> = "foo";
        r0.<org.apache.commons.validator.ParameterTest: java.lang.String middleName> = "123";
        r0.<org.apache.commons.validator.ParameterTest: java.lang.String lastName> = "456";
        return;
    }

    protected void tearDown()
    {
        org.apache.commons.validator.ParameterTest r0;

        r0 := @this: org.apache.commons.validator.ParameterTest;
        return;
    }

    public void testAllValid()
    {
        org.apache.commons.validator.ParameterTest r0;
        org.apache.commons.validator.NameBean r1;
        org.apache.commons.validator.Validator r2, $r4;
        java.lang.Exception r3, $r8;
        org.apache.commons.validator.ValidatorResources $r5;
        java.util.Locale $r6;
        java.lang.StringBuilder $r9, $r10;
        java.lang.String $r11;

        r0 := @this: org.apache.commons.validator.ParameterTest;
        r1 = specialinvoke r0.<org.apache.commons.validator.ParameterTest: org.apache.commons.validator.NameBean createNameBean()>();
        $r4 = new org.apache.commons.validator.Validator;
        $r5 = r0.<org.apache.commons.validator.ParameterTest: org.apache.commons.validator.ValidatorResources resources>;
        specialinvoke $r4.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r5, "nameForm");
        r2 = $r4;
        virtualinvoke r2.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r1);
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        virtualinvoke r2.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.util.Locale", $r6);

     label0:
        virtualinvoke r2.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r3 = $r8;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Validator.validate() threw ");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.ParameterTest: void fail(java.lang.String)>($r11);

     label3:
        specialinvoke r0.<org.apache.commons.validator.ParameterTest: void assertParameterValue(org.apache.commons.validator.Validator,java.lang.String,java.lang.Class)>(r2, "java.lang.Object", class "java/lang/Object");
        specialinvoke r0.<org.apache.commons.validator.ParameterTest: void assertParameterValue(org.apache.commons.validator.Validator,java.lang.String,java.lang.Class)>(r2, "org.apache.commons.validator.Field", class "org/apache/commons/validator/Field");
        specialinvoke r0.<org.apache.commons.validator.ParameterTest: void assertParameterValue(org.apache.commons.validator.Validator,java.lang.String,java.lang.Class)>(r2, "org.apache.commons.validator.Form", class "org/apache/commons/validator/Form");
        specialinvoke r0.<org.apache.commons.validator.ParameterTest: void assertParameterValue(org.apache.commons.validator.Validator,java.lang.String,java.lang.Class)>(r2, "java.util.Locale", class "java/util/Locale");
        specialinvoke r0.<org.apache.commons.validator.ParameterTest: void assertParameterValue(org.apache.commons.validator.Validator,java.lang.String,java.lang.Class)>(r2, "org.apache.commons.validator.ValidatorAction", class "org/apache/commons/validator/ValidatorAction");
        specialinvoke r0.<org.apache.commons.validator.ParameterTest: void assertParameterValue(org.apache.commons.validator.Validator,java.lang.String,java.lang.Class)>(r2, "org.apache.commons.validator.Validator", class "org/apache/commons/validator/Validator");
        specialinvoke r0.<org.apache.commons.validator.ParameterTest: void assertParameterValue(org.apache.commons.validator.Validator,java.lang.String,java.lang.Class)>(r2, "org.apache.commons.validator.ValidatorResults", class "org/apache/commons/validator/ValidatorResults");
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    private void assertParameterValue(org.apache.commons.validator.Validator, java.lang.String, java.lang.Class)
    {
        org.apache.commons.validator.ParameterTest r0;
        org.apache.commons.validator.Validator r1;
        java.lang.String r2, $r6, $r9, $r11, $r15, $r18;
        java.lang.Class r3, $r14;
        java.lang.Object r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r12, $r13, $r16, $r17;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.ParameterTest;
        r1 := @parameter0: org.apache.commons.validator.Validator;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.lang.Class;
        r4 = virtualinvoke r1.<org.apache.commons.validator.Validator: java.lang.Object getParameterValue(java.lang.String)>(r2);
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected \'");
        $r6 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was null");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.ParameterTest: void assertNotNull(java.lang.String,java.lang.Object)>($r9, r4);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected \'");
        $r11 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' but was \'");
        $r14 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();
        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        $z0 = virtualinvoke r3.<java.lang.Class: boolean isInstance(java.lang.Object)>(r4);
        staticinvoke <org.apache.commons.validator.ParameterTest: void assertTrue(java.lang.String,boolean)>($r18, $z0);
        return;
    }

    private org.apache.commons.validator.NameBean createNameBean()
    {
        org.apache.commons.validator.ParameterTest r0;
        org.apache.commons.validator.NameBean $r1, r2;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: org.apache.commons.validator.ParameterTest;
        $r1 = new org.apache.commons.validator.NameBean;
        specialinvoke $r1.<org.apache.commons.validator.NameBean: void <init>()>();
        r2 = $r1;
        $r3 = r0.<org.apache.commons.validator.ParameterTest: java.lang.String firstName>;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setFirstName(java.lang.String)>($r3);
        $r4 = r0.<org.apache.commons.validator.ParameterTest: java.lang.String middleName>;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setMiddleName(java.lang.String)>($r4);
        $r5 = r0.<org.apache.commons.validator.ParameterTest: java.lang.String lastName>;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setLastName(java.lang.String)>($r5);
        return r2;
    }
}
