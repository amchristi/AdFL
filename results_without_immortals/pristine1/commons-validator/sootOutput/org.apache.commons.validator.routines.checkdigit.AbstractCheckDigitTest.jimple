public abstract class org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest extends junit.framework.TestCase
{
    protected org.apache.commons.logging.Log log;
    protected int checkDigitLth;
    protected org.apache.commons.validator.routines.checkdigit.CheckDigit routine;
    protected java.lang.String[] valid;
    protected java.lang.String[] invalid;
    protected java.lang.String zeroSum;
    protected java.lang.String missingMessage;
    private static final java.lang.String POSSIBLE_CHECK_DIGITS;

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.String r1;
        java.lang.Class $r2;
        org.apache.commons.logging.Log $r3;
        java.lang.String[] $r4;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r3 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r2);
        r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log> = $r3;
        r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: int checkDigitLth> = 1;
        $r4 = newarray (java.lang.String)[1];
        $r4[0] = "12345678A";
        r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] invalid> = $r4;
        r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String zeroSum> = "0000000000";
        r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String missingMessage> = "Code is missing";
        return;
    }

    protected void tearDown() throws java.lang.Exception
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        specialinvoke r0.<junit.framework.TestCase: void tearDown()>();
        r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid> = null;
        r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine> = null;
        return;
    }

    public void testIsValidTrue()
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.StringBuilder $r1, $r7, $r11, $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r24;
        int i0, $i1;
        org.apache.commons.logging.Log $r2, $r3, $r9, $r10;
        boolean $z0, $z1, $z2;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r4, $r26;
        java.lang.Class $r5;
        java.lang.String $r6, $r8, $r15, $r18, $r23, $r25, $r28;
        java.lang.String[] $r14, $r22, $r27, $r29;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        $r2 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r3 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("testIsValidTrue() for ");
        $r4 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r8);

     label0:
        i0 = 0;
        goto label3;

     label1:
        $r9 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z1 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label2;

        $r10 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("   ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Testing Valid Code=[");
        $r14 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $r15 = $r14[i0];
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label2:
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("valid[");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");
        $r22 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $r23 = $r22[i0];
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        $r26 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r27 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $r28 = $r27[i0];
        $z2 = interfaceinvoke $r26.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>($r28);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertTrue(java.lang.String,boolean)>($r25, $z2);
        i0 = i0 + 1;

     label3:
        $r29 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $i1 = lengthof $r29;
        if i0 < $i1 goto label1;

        return;
    }

    public void testIsValidFalse()
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.StringBuilder $r1, $r7, $r11, $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r24, $r34, $r35, $r36, $r38, $r39, $r41, $r42, $r43, $r45;
        int i0, i1, $i2, $i3;
        org.apache.commons.logging.Log $r2, $r3, $r9, $r10, $r32, $r33;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r4, $r26, $r47;
        java.lang.Class $r5;
        java.lang.String $r6, $r8, $r15, $r18, $r23, $r25, $r28, $r37, $r40, $r44, $r46, $r48;
        java.lang.String[] $r14, $r22, $r27, $r29, $r30, r31;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        $r2 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r2.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r3 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("testIsValidFalse() for ");
        $r4 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r8);

     label0:
        i0 = 0;
        goto label3;

     label1:
        $r9 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z1 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label2;

        $r10 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("   ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Testing Invalid Code=[");
        $r14 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] invalid>;
        $r15 = $r14[i0];
        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label2:
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid[");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");
        $r22 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] invalid>;
        $r23 = $r22[i0];
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        $r26 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r27 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] invalid>;
        $r28 = $r27[i0];
        $z2 = interfaceinvoke $r26.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>($r28);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertFalse(java.lang.String,boolean)>($r25, $z2);
        i0 = i0 + 1;

     label3:
        $r29 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] invalid>;
        $i2 = lengthof $r29;
        if i0 < $i2 goto label1;

        $r30 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        r31 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] createInvalidCodes(java.lang.String[])>($r30);
        i1 = 0;
        goto label6;

     label4:
        $r32 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z3 = interfaceinvoke $r32.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z3 == 0 goto label5;

        $r33 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r34 = new java.lang.StringBuilder;
        specialinvoke $r34.<java.lang.StringBuilder: void <init>(java.lang.String)>("   ");
        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Testing Invalid Check Digit, Code=[");
        $r37 = r31[i1];
        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r40);

     label5:
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid check digit[");
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");
        $r44 = r31[i1];
        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);
        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();
        $r47 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r48 = r31[i1];
        $z4 = interfaceinvoke $r47.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>($r48);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertFalse(java.lang.String,boolean)>($r46, $z4);
        i1 = i1 + 1;

     label6:
        $i3 = lengthof r31;
        if i1 < $i3 goto label4;

        return;
    }

    public void testCalculateValid()
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.StringBuilder $r1, $r10, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r27, $r28, $r31, $r36, $r37, $r38, $r41, $r42, $r43;
        int i0, $i1;
        java.lang.String r2, r3, $r9, $r11, $r13, $r15, $r25, $r30, $r32, $r34, $r40, $r44;
        java.lang.Exception r4, $r35;
        org.apache.commons.logging.Log $r5, $r6, $r16, $r17;
        boolean $z0, $z1;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r7, $r33;
        java.lang.Class $r8;
        java.lang.String[] $r12, $r14, $r29, $r39, $r45;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        $r5 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("testCalculateValid() for ");
        $r7 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();
        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();
        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r11);

     label0:
        i0 = 0;
        goto label7;

     label1:
        $r12 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $r13 = $r12[i0];
        r2 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String removeCheckDigit(java.lang.String)>($r13);
        $r14 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $r15 = $r14[i0];
        r3 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String checkDigit(java.lang.String)>($r15);

     label2:
        $r16 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z1 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label3;

        $r17 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("   ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Testing Valid Check Digit, Code=[");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] expected=[");
        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r25);

     label3:
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("valid[");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: ");
        $r29 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $r30 = $r29[i0];
        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r34 = interfaceinvoke $r33.<org.apache.commons.validator.routines.checkdigit.CheckDigit: java.lang.String calculate(java.lang.String)>(r2);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>($r32, r3, $r34);

     label4:
        goto label6;

     label5:
        $r35 := @caughtexception;
        r4 = $r35;
        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>(java.lang.String)>("valid[");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r39 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $r40 = $r39[i0];
        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);
        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw ");
        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void fail(java.lang.String)>($r44);

     label6:
        i0 = i0 + 1;

     label7:
        $r45 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] valid>;
        $i1 = lengthof $r45;
        if i0 < $i1 goto label1;

        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    public void testCalculateInvalid()
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.StringBuilder $r1, $r10, $r15, $r16, $r17, $r18, $r19, $r23, $r24, $r25, $r26, $r27, $r28, $r32, $r33, $r34, $r36;
        int i0, $i1;
        java.lang.String r2, r3, r4, $r9, $r11, $r20, $r22, $r29, $r35, $r37, $r38;
        org.apache.commons.logging.Log $r5, $r6, $r13, $r14;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r7, $r21;
        java.lang.Class $r8;
        java.lang.String[] $r12, $r39;
        org.apache.commons.validator.routines.checkdigit.CheckDigitException $r30, r31;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        $r5 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label0;

        $r6 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("testCalculateInvalid() for ");
        $r7 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();
        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();
        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r11);

     label0:
        i0 = 0;
        goto label6;

     label1:
        $r12 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] invalid>;
        r2 = $r12[i0];
        $r13 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $z1 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label2;

        $r14 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.logging.Log log>;
        $r15 = new java.lang.StringBuilder;
        specialinvoke $r15.<java.lang.StringBuilder: void <init>(java.lang.String)>("   ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Testing Invalid Check Digit, Code=[");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r20);

     label2:
        r3 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String checkDigit(java.lang.String)>(r2);
        $r21 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r22 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String removeCheckDigit(java.lang.String)>(r2);
        r4 = interfaceinvoke $r21.<org.apache.commons.validator.routines.checkdigit.CheckDigit: java.lang.String calculate(java.lang.String)>($r22);
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);
        if $z2 == 0 goto label5;

        $r23 = new java.lang.StringBuilder;
        specialinvoke $r23.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expected mismatch for ");
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expected ");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" actual ");
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void fail(java.lang.String)>($r29);

     label3:
        goto label5;

     label4:
        $r30 := @caughtexception;
        r31 = $r30;
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid Character[");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");
        $r35 = virtualinvoke r31.<org.apache.commons.validator.routines.checkdigit.CheckDigitException: java.lang.String getMessage()>();
        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();
        $r38 = virtualinvoke r31.<org.apache.commons.validator.routines.checkdigit.CheckDigitException: java.lang.String getMessage()>();
        $z3 = virtualinvoke $r38.<java.lang.String: boolean startsWith(java.lang.String)>("Invalid ");
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertTrue(java.lang.String,boolean)>($r37, $z3);

     label5:
        i0 = i0 + 1;

     label6:
        $r39 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String[] invalid>;
        $i1 = lengthof $r39;
        if i0 < $i1 goto label1;

        return;

        catch org.apache.commons.validator.routines.checkdigit.CheckDigitException from label1 to label3 with label4;
    }

    public void testMissingCode()
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.Exception r1, $r7, $r12, r13;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r2, $r3, $r4, $r5, $r10;
        boolean $z0, $z1, $z2;
        java.lang.String $r8, $r9, $r14, $r15;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        $r2 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $z0 = interfaceinvoke $r2.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertFalse(java.lang.String,boolean)>("isValid() Null", $z0);
        $r3 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $z1 = interfaceinvoke $r3.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>("");
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertFalse(java.lang.String,boolean)>("isValid() Zero Length", $z1);
        $r4 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $z2 = interfaceinvoke $r4.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>("9");
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertFalse(java.lang.String,boolean)>("isValid() Length 1", $z2);

     label0:
        $r5 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        interfaceinvoke $r5.<org.apache.commons.validator.routines.checkdigit.CheckDigit: java.lang.String calculate(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void fail(java.lang.String)>("calculate() Null - expected exception");

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r1 = $r7;
        $r8 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String missingMessage>;
        $r9 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("calculate() Null", $r8, $r9);

     label3:
        $r10 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        interfaceinvoke $r10.<org.apache.commons.validator.routines.checkdigit.CheckDigit: java.lang.String calculate(java.lang.String)>("");
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void fail(java.lang.String)>("calculate() Zero Length - expected exception");

     label4:
        goto label6;

     label5:
        $r12 := @caughtexception;
        r13 = $r12;
        $r14 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String missingMessage>;
        $r15 = virtualinvoke r13.<java.lang.Exception: java.lang.String getMessage()>();
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("calculate() Zero Length", $r14, $r15);

     label6:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void testZeroSum()
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.Exception r1, $r7;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r2, $r4;
        java.lang.String $r3, $r5, $r8;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        $r2 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r3 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String zeroSum>;
        $z0 = interfaceinvoke $r2.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>($r3);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertFalse(java.lang.String,boolean)>("isValid() Zero Sum", $z0);

     label0:
        $r4 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r5 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String zeroSum>;
        interfaceinvoke $r4.<org.apache.commons.validator.routines.checkdigit.CheckDigit: java.lang.String calculate(java.lang.String)>($r5);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void fail(java.lang.String)>("Zero Sum - expected exception");

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r1 = $r7;
        $r8 = virtualinvoke r1.<java.lang.Exception: java.lang.String getMessage()>();
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("isValid() Zero Sum", "Invalid code, sum is zero", $r8);

     label3:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
    }

    public void testSerialization()
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.io.ByteArrayOutputStream $r1, r2;
        java.io.ObjectOutputStream r3, $r6;
        java.io.ByteArrayInputStream r4, $r19;
        java.io.ObjectInputStream r5, $r21;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r7, $r11, $r25;
        java.lang.Exception $r8, r9, $r22, r23;
        java.lang.StringBuilder $r10, $r15, $r16, $r24, $r29, $r30;
        java.lang.Class $r12, $r26;
        java.lang.String $r13, $r14, $r17, $r27, $r28, $r31;
        java.lang.Object r18;
        byte[] $r20;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        $r1 = new java.io.ByteArrayOutputStream;
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();
        r2 = $r1;

     label0:
        $r6 = new java.io.ObjectOutputStream;
        specialinvoke $r6.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r2);
        r3 = $r6;
        $r7 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        virtualinvoke r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);
        virtualinvoke r3.<java.io.ObjectOutputStream: void flush()>();
        virtualinvoke r3.<java.io.ObjectOutputStream: void close()>();

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.StringBuilder;
        $r11 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();
        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);
        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error during serialization: ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void fail(java.lang.String)>($r17);

     label3:
        r18 = null;

     label4:
        $r19 = new java.io.ByteArrayInputStream;
        $r20 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        specialinvoke $r19.<java.io.ByteArrayInputStream: void <init>(byte[])>($r20);
        r4 = $r19;
        $r21 = new java.io.ObjectInputStream;
        specialinvoke $r21.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r4);
        r5 = $r21;
        r18 = virtualinvoke r5.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        virtualinvoke r4.<java.io.ByteArrayInputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = new java.lang.StringBuilder;
        $r25 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>();
        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();
        $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27);
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r28);
        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error during deserialization: ");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void fail(java.lang.String)>($r31);

     label7:
        staticinvoke <org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void assertNotNull(java.lang.Object)>(r18);
        return;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected java.lang.String[] createInvalidCodes(java.lang.String[])
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.String[] r1, r4, $r16, $r18;
        java.util.ArrayList $r2, r3;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r5, r6, r7, r8, $r10, $r12, $r14, $r15;
        boolean $z0;
        java.lang.StringBuilder $r11, $r13;
        java.lang.Object[] $r17;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        r1 := @parameter0: java.lang.String[];
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        r4 = r1;
        i0 = lengthof r1;
        i1 = 0;
        goto label4;

     label0:
        r5 = r4[i1];
        r6 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String removeCheckDigit(java.lang.String)>(r5);
        r7 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: java.lang.String checkDigit(java.lang.String)>(r5);
        i2 = 0;
        goto label3;

     label1:
        $r10 = "0123456789 ABCDEFHIJKLMNOPQRSTUVWXYZ\tabcdefghijklmnopqrstuvwxyz!@\u00a3$%^&*()_+";
        $i3 = i2 + 1;
        r8 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(i2, $i3);
        $z0 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>(r7);
        if $z0 != 0 goto label2;

        $r11 = new java.lang.StringBuilder;
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);
        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r14);

     label2:
        i2 = i2 + 1;

     label3:
        $r15 = "0123456789 ABCDEFHIJKLMNOPQRSTUVWXYZ\tabcdefghijklmnopqrstuvwxyz!@\u00a3$%^&*()_+";
        $i4 = virtualinvoke $r15.<java.lang.String: int length()>();
        if i2 < $i4 goto label1;

        i1 = i1 + 1;

     label4:
        if i1 < i0 goto label0;

        $i5 = interfaceinvoke r3.<java.util.List: int size()>();
        $r16 = newarray (java.lang.String)[$i5];
        $r17 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r16);
        $r18 = (java.lang.String[]) $r17;
        return $r18;
    }

    protected java.lang.String removeCheckDigit(java.lang.String)
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.String r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: int checkDigitLth>;
        if $i0 > $i1 goto label1;

     label0:
        return null;

     label1:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        $i3 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: int checkDigitLth>;
        $i4 = $i2 - $i3;
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);
        return $r2;
    }

    protected java.lang.String checkDigit(java.lang.String)
    {
        org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest r0;
        java.lang.String r1, $r2;
        int i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: int checkDigitLth>;
        if $i1 > $i2 goto label1;

     label0:
        return "";

     label1:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();
        $i4 = r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: int checkDigitLth>;
        i0 = $i3 - $i4;
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);
        return $r2;
    }
}
