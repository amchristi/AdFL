public class org.apache.commons.validator.ExtensionTest extends junit.framework.TestCase
{
    protected static java.lang.String FORM_KEY;
    protected static java.lang.String FORM_KEY2;
    protected static java.lang.String CHECK_MSG_KEY;
    protected static java.lang.String ACTION;
    private org.apache.commons.validator.ValidatorResources resources;

    static void <clinit>()
    {
        <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY> = "nameForm";
        <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY2> = "nameForm2";
        <org.apache.commons.validator.ExtensionTest: java.lang.String CHECK_MSG_KEY> = "nameForm.lastname.displayname";
        <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION> = "required";
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.ExtensionTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);
        r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources> = null;
        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        org.apache.commons.validator.ExtensionTest r0;
        java.io.InputStream r1;
        java.lang.Throwable r2, $r5;
        java.lang.Class $r3;
        org.apache.commons.validator.ValidatorResources $r4;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        r1 = null;

     label0:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        r1 = virtualinvoke $r3.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("ExtensionTest-config.xml");
        $r4 = new org.apache.commons.validator.ValidatorResources;
        specialinvoke $r4.<org.apache.commons.validator.ValidatorResources: void <init>(java.io.InputStream)>(r1);
        r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources> = $r4;
        goto label3;

     label1:
        $r5 := @caughtexception;
        r2 = $r5;
        if r1 == null goto label2;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label2:
        throw r2;

     label3:
        if r1 == null goto label4;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label4:
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    protected void tearDown()
    {
        org.apache.commons.validator.ExtensionTest r0;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        return;
    }

    public void testRequired() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ExtensionTest r0;
        org.apache.commons.validator.NameBean $r1, r2;
        java.lang.String $r3, $r11, $r14, $r15, $r17, $r20, $r21, $r23, $r26, $r27, $r29, $r32, $r33;
        org.apache.commons.validator.Validator r4, $r7;
        null_type n0;
        org.apache.commons.validator.ValidatorResult r5, r6;
        org.apache.commons.validator.ValidatorResources $r8;
        org.apache.commons.validator.ValidatorResults r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r16, $r18, $r19, $r22, $r24, $r25, $r28, $r30, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        $r1 = new org.apache.commons.validator.NameBean;
        specialinvoke $r1.<org.apache.commons.validator.NameBean: void <init>()>();
        r2 = $r1;
        $r7 = new org.apache.commons.validator.Validator;
        $r8 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r3 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        specialinvoke $r7.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r8, $r3);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r2);
        n0 = null;
        r9 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r9);
        r5 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("firstName");
        r6 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r5);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult should contain the \'");
        $r11 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z0 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r15);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r14, $z0);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult for the \'");
        $r17 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have failed.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z1 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r21);
        if $z1 == 0 goto label0;

        $z2 = 0;
        goto label1;

     label0:
        $z2 = 1;

     label1:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r20, $z2);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r6);
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult should contain the \'");
        $r23 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z3 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r27);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r26, $z3);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult for the \'");
        $r29 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have failed.");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z4 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r33);
        if $z4 == 0 goto label2;

        $z5 = 0;
        goto label3;

     label2:
        $z5 = 1;

     label3:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r32, $z5);
        return;
    }

    public void testRequiredFirstNameBlank() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ExtensionTest r0;
        org.apache.commons.validator.NameBean $r1, r2;
        java.lang.String $r3, $r11, $r14, $r15, $r17, $r20, $r21, $r23, $r26, $r27, $r29, $r32, $r33;
        org.apache.commons.validator.Validator r4, $r7;
        null_type n0;
        org.apache.commons.validator.ValidatorResult r5, r6;
        org.apache.commons.validator.ValidatorResources $r8;
        org.apache.commons.validator.ValidatorResults r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r16, $r18, $r19, $r22, $r24, $r25, $r28, $r30, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        $r1 = new org.apache.commons.validator.NameBean;
        specialinvoke $r1.<org.apache.commons.validator.NameBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setFirstName(java.lang.String)>("");
        $r7 = new org.apache.commons.validator.Validator;
        $r8 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r3 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        specialinvoke $r7.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r8, $r3);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r2);
        n0 = null;
        r9 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r9);
        r5 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("firstName");
        r6 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r5);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult should contain the \'");
        $r11 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z0 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r15);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r14, $z0);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult for the \'");
        $r17 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have failed.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z1 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r21);
        if $z1 == 0 goto label0;

        $z2 = 0;
        goto label1;

     label0:
        $z2 = 1;

     label1:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r20, $z2);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r6);
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult should contain the \'");
        $r23 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z3 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r27);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r26, $z3);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult for the \'");
        $r29 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have failed.");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z4 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r33);
        if $z4 == 0 goto label2;

        $z5 = 0;
        goto label3;

     label2:
        $z5 = 1;

     label3:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r32, $z5);
        return;
    }

    public void testRequiredFirstName() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ExtensionTest r0;
        org.apache.commons.validator.NameBean $r1, r2;
        java.lang.String $r3, $r11, $r14, $r15, $r17, $r20, $r21, $r23, $r26, $r27, $r29, $r32, $r33;
        org.apache.commons.validator.Validator r4, $r7;
        null_type n0;
        org.apache.commons.validator.ValidatorResult r5, r6;
        org.apache.commons.validator.ValidatorResources $r8;
        org.apache.commons.validator.ValidatorResults r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r16, $r18, $r19, $r22, $r24, $r25, $r28, $r30, $r31;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        $r1 = new org.apache.commons.validator.NameBean;
        specialinvoke $r1.<org.apache.commons.validator.NameBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setFirstName(java.lang.String)>("Joe");
        $r7 = new org.apache.commons.validator.Validator;
        $r8 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r3 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        specialinvoke $r7.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r8, $r3);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r2);
        n0 = null;
        r9 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r9);
        r5 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("firstName");
        r6 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r5);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult should contain the \'");
        $r11 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z0 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r15);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r14, $z0);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult for the \'");
        $r17 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have passed.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z1 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r21);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r20, $z1);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r6);
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult should contain the \'");
        $r23 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z2 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r27);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r26, $z2);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult for the \'");
        $r29 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have failed.");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z3 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r33);
        if $z3 == 0 goto label0;

        $z4 = 0;
        goto label1;

     label0:
        $z4 = 1;

     label1:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r32, $z4);
        return;
    }

    public void testRequiredLastNameBlank() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ExtensionTest r0;
        org.apache.commons.validator.NameBean $r1, r2;
        java.lang.String $r3, $r11, $r14, $r15, $r17, $r20, $r21, $r23, $r26, $r27, $r29, $r32, $r33;
        org.apache.commons.validator.Validator r4, $r7;
        null_type n0;
        org.apache.commons.validator.ValidatorResult r5, r6;
        org.apache.commons.validator.ValidatorResources $r8;
        org.apache.commons.validator.ValidatorResults r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r16, $r18, $r19, $r22, $r24, $r25, $r28, $r30, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        $r1 = new org.apache.commons.validator.NameBean;
        specialinvoke $r1.<org.apache.commons.validator.NameBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setLastName(java.lang.String)>("");
        $r7 = new org.apache.commons.validator.Validator;
        $r8 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r3 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        specialinvoke $r7.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r8, $r3);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r2);
        n0 = null;
        r9 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r9);
        r5 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("firstName");
        r6 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r5);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult should contain the \'");
        $r11 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z0 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r15);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r14, $z0);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult for the \'");
        $r17 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have failed.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z1 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r21);
        if $z1 == 0 goto label0;

        $z2 = 0;
        goto label1;

     label0:
        $z2 = 1;

     label1:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r20, $z2);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r6);
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult should contain the \'");
        $r23 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z3 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r27);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r26, $z3);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult for the \'");
        $r29 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have failed.");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z4 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r33);
        if $z4 == 0 goto label2;

        $z5 = 0;
        goto label3;

     label2:
        $z5 = 1;

     label3:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r32, $z5);
        return;
    }

    public void testRequiredLastName() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ExtensionTest r0;
        org.apache.commons.validator.NameBean $r1, r2;
        java.lang.String $r3, $r11, $r14, $r15, $r17, $r20, $r21, $r23, $r26, $r27, $r29, $r32, $r33;
        org.apache.commons.validator.Validator r4, $r7;
        null_type n0;
        org.apache.commons.validator.ValidatorResult r5, r6;
        org.apache.commons.validator.ValidatorResources $r8;
        org.apache.commons.validator.ValidatorResults r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r16, $r18, $r19, $r22, $r24, $r25, $r28, $r30, $r31;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        $r1 = new org.apache.commons.validator.NameBean;
        specialinvoke $r1.<org.apache.commons.validator.NameBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setLastName(java.lang.String)>("Smith");
        $r7 = new org.apache.commons.validator.Validator;
        $r8 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r3 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        specialinvoke $r7.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r8, $r3);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r2);
        n0 = null;
        r9 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r9);
        r5 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("firstName");
        r6 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r5);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult should contain the \'");
        $r11 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z0 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r15);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r14, $z0);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult for the \'");
        $r17 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have failed.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z1 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r21);
        if $z1 == 0 goto label0;

        $z2 = 0;
        goto label1;

     label0:
        $z2 = 1;

     label1:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r20, $z2);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r6);
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult should contain the \'");
        $r23 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z3 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r27);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r26, $z3);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult for the \'");
        $r29 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have passed.");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z4 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r33);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r32, $z4);
        return;
    }

    public void testRequiredName() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ExtensionTest r0;
        org.apache.commons.validator.NameBean $r1, r2;
        java.lang.String $r3, $r11, $r14, $r15, $r17, $r20, $r21, $r23, $r26, $r27, $r29, $r32, $r33;
        org.apache.commons.validator.Validator r4, $r7;
        null_type n0;
        org.apache.commons.validator.ValidatorResult r5, r6;
        org.apache.commons.validator.ValidatorResources $r8;
        org.apache.commons.validator.ValidatorResults r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r16, $r18, $r19, $r22, $r24, $r25, $r28, $r30, $r31;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        $r1 = new org.apache.commons.validator.NameBean;
        specialinvoke $r1.<org.apache.commons.validator.NameBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setFirstName(java.lang.String)>("Joe");
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setLastName(java.lang.String)>("Smith");
        $r7 = new org.apache.commons.validator.Validator;
        $r8 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r3 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        specialinvoke $r7.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r8, $r3);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r2);
        n0 = null;
        r9 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r9);
        r5 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("firstName");
        r6 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r5);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult should contain the \'");
        $r11 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();
        $r15 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z0 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r15);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r14, $z0);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult for the \'");
        $r17 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have passed.");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        $r21 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z1 = virtualinvoke r5.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r21);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r20, $z1);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("Last Name ValidatorResult should not be null.", r6);
        $r22 = new java.lang.StringBuilder;
        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult should contain the \'");
        $r23 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action.");
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z2 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>($r27);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r26, $z2);
        $r28 = new java.lang.StringBuilder;
        specialinvoke $r28.<java.lang.StringBuilder: void <init>(java.lang.String)>("Last Name ValidatorResult for the \'");
        $r29 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have passed.");
        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();
        $r33 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $z3 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>($r33);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r32, $z3);
        return;
    }

    public void testOverrideRule() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ExtensionTest r0;
        org.apache.commons.validator.NameBean $r1, r2;
        java.lang.String $r3, $r11, $r14, $r17, $r20, $r21;
        org.apache.commons.validator.Validator r4, $r7;
        null_type n0;
        org.apache.commons.validator.ValidatorResult r5, r6;
        org.apache.commons.validator.ValidatorResources $r8;
        org.apache.commons.validator.ValidatorResults r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r15, $r16;
        org.apache.commons.validator.Field $r18;
        org.apache.commons.validator.Arg $r19;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        $r1 = new org.apache.commons.validator.NameBean;
        specialinvoke $r1.<org.apache.commons.validator.NameBean: void <init>()>();
        r2 = $r1;
        virtualinvoke r2.<org.apache.commons.validator.NameBean: void setLastName(java.lang.String)>("Smith");
        $r7 = new org.apache.commons.validator.Validator;
        $r8 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r3 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY2>;
        specialinvoke $r7.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>($r8, $r3);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r2);
        n0 = null;
        r9 = virtualinvoke r4.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r9);
        r5 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("firstName");
        r6 = virtualinvoke r9.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>("First Name ValidatorResult should not be null.", r5);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("First Name ValidatorResult for the \'");
        $r11 = <org.apache.commons.validator.ExtensionTest: java.lang.String ACTION>;
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' action should have \'");
        $r14 = <org.apache.commons.validator.ExtensionTest: java.lang.String CHECK_MSG_KEY>;
        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as a key.");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        $r18 = r5.<org.apache.commons.validator.ValidatorResult: org.apache.commons.validator.Field field>;
        $r19 = virtualinvoke $r18.<org.apache.commons.validator.Field: org.apache.commons.validator.Arg getArg(int)>(0);
        $r20 = virtualinvoke $r19.<org.apache.commons.validator.Arg: java.lang.String getKey()>();
        $r21 = <org.apache.commons.validator.ExtensionTest: java.lang.String CHECK_MSG_KEY>;
        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r17, $z0);
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNull(java.lang.String,java.lang.Object)>("Last Name ValidatorResult should be null.", r6);
        return;
    }

    public void testOrder()
    {
        org.apache.commons.validator.ExtensionTest r0;
        java.util.Locale $r1, $r9;
        java.lang.String $r2, $r10, $r12, $r13, $r15, $r17, $r19, $r22, $r23, $r25, $r27, $r29, $r36, $r39, $r40, $r42, $r45, $r46, $r54, $r57, $r58, $r60, $r63, $r64;
        org.apache.commons.validator.Form r3, r4;
        org.apache.commons.validator.Field r5, r6, r49, r52;
        org.apache.commons.validator.ValidatorResources $r7, $r8;
        java.lang.StringBuilder $r11, $r14, $r16, $r18, $r21, $r24, $r26, $r28, $r35, $r37, $r38, $r41, $r43, $r44, $r53, $r55, $r56, $r59, $r61, $r62;
        java.util.List $r20, $r30, $r31, $r33, $r47, $r50;
        int $i0, $i1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r32, $r34, $r48, $r51;

        r0 := @this: org.apache.commons.validator.ExtensionTest;
        $r7 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r1 = <org.apache.commons.validator.ValidatorResources: java.util.Locale defaultLocale>;
        $r2 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        r3 = virtualinvoke $r7.<org.apache.commons.validator.ValidatorResources: org.apache.commons.validator.Form getForm(java.util.Locale,java.lang.String)>($r1, $r2);
        $r8 = r0.<org.apache.commons.validator.ExtensionTest: org.apache.commons.validator.ValidatorResources resources>;
        $r9 = <org.apache.commons.validator.ValidatorResources: java.util.Locale defaultLocale>;
        $r10 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY2>;
        r4 = virtualinvoke $r8.<org.apache.commons.validator.ValidatorResources: org.apache.commons.validator.Form getForm(java.util.Locale,java.lang.String)>($r9, $r10);
        $r11 = new java.lang.StringBuilder;
        $r12 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);
        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null.");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>($r15, r3);
        $r16 = new java.lang.StringBuilder;
        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("There should only be 2 fields in ");
        $r17 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        $r20 = virtualinvoke r3.<org.apache.commons.validator.Form: java.util.List getFields()>();
        $i0 = interfaceinvoke $r20.<java.util.List: int size()>();
        if $i0 != 2 goto label0;

        $z0 = 1;
        goto label1;

     label0:
        $z0 = 0;

     label1:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r19, $z0);
        $r21 = new java.lang.StringBuilder;
        $r22 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY2>;
        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r22);
        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r23);
        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is null.");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertNotNull(java.lang.String,java.lang.Object)>($r25, r4);
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("There should only be 2 fields in ");
        $r27 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY2>;
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        $r30 = virtualinvoke r4.<org.apache.commons.validator.Form: java.util.List getFields()>();
        $i1 = interfaceinvoke $r30.<java.util.List: int size()>();
        if $i1 != 2 goto label2;

        $z1 = 1;
        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r29, $z1);
        $r31 = virtualinvoke r3.<org.apache.commons.validator.Form: java.util.List getFields()>();
        $r32 = interfaceinvoke $r31.<java.util.List: java.lang.Object get(int)>(0);
        r5 = (org.apache.commons.validator.Field) $r32;
        $r33 = virtualinvoke r3.<org.apache.commons.validator.Form: java.util.List getFields()>();
        $r34 = interfaceinvoke $r33.<java.util.List: java.lang.Object get(int)>(1);
        r6 = (org.apache.commons.validator.Field) $r34;
        $r35 = new java.lang.StringBuilder;
        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("firstName in ");
        $r36 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be the first in the list");
        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();
        $r40 = virtualinvoke r5.<org.apache.commons.validator.Field: java.lang.String getKey()>();
        $z2 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("firstName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r39, $z2);
        $r41 = new java.lang.StringBuilder;
        specialinvoke $r41.<java.lang.StringBuilder: void <init>(java.lang.String)>("lastName in ");
        $r42 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY>;
        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be the first in the list");
        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();
        $r46 = virtualinvoke r6.<org.apache.commons.validator.Field: java.lang.String getKey()>();
        $z3 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r45, $z3);
        $r47 = virtualinvoke r4.<org.apache.commons.validator.Form: java.util.List getFields()>();
        $r48 = interfaceinvoke $r47.<java.util.List: java.lang.Object get(int)>(0);
        r49 = (org.apache.commons.validator.Field) $r48;
        $r50 = virtualinvoke r4.<org.apache.commons.validator.Form: java.util.List getFields()>();
        $r51 = interfaceinvoke $r50.<java.util.List: java.lang.Object get(int)>(1);
        r52 = (org.apache.commons.validator.Field) $r51;
        $r53 = new java.lang.StringBuilder;
        specialinvoke $r53.<java.lang.StringBuilder: void <init>(java.lang.String)>("firstName in ");
        $r54 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY2>;
        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);
        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be the first in the list");
        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();
        $r58 = virtualinvoke r52.<org.apache.commons.validator.Field: java.lang.String getKey()>();
        $z4 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>("firstName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r57, $z4);
        $r59 = new java.lang.StringBuilder;
        specialinvoke $r59.<java.lang.StringBuilder: void <init>(java.lang.String)>("lastName in ");
        $r60 = <org.apache.commons.validator.ExtensionTest: java.lang.String FORM_KEY2>;
        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);
        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be the first in the list");
        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();
        $r64 = virtualinvoke r49.<org.apache.commons.validator.Field: java.lang.String getKey()>();
        $z5 = virtualinvoke $r64.<java.lang.String: boolean equals(java.lang.Object)>("lastName");
        staticinvoke <org.apache.commons.validator.ExtensionTest: void assertTrue(java.lang.String,boolean)>($r63, $z5);
        return;
    }
}
