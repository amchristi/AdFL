public final class org.apache.commons.validator.routines.checkdigit.ISINCheckDigit extends org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit
{
    private static final long serialVersionUID;
    public static final org.apache.commons.validator.routines.checkdigit.CheckDigit ISIN_CHECK_DIGIT;
    private static final int[] POSITION_WEIGHT;

    static void <clinit>()
    {
        org.apache.commons.validator.routines.checkdigit.ISINCheckDigit $r0;
        int[] $r1;

        $r0 = new org.apache.commons.validator.routines.checkdigit.ISINCheckDigit;
        specialinvoke $r0.<org.apache.commons.validator.routines.checkdigit.ISINCheckDigit: void <init>()>();
        <org.apache.commons.validator.routines.checkdigit.ISINCheckDigit: org.apache.commons.validator.routines.checkdigit.CheckDigit ISIN_CHECK_DIGIT> = $r0;
        $r1 = newarray (int)[2];
        $r1[0] = 2;
        $r1[1] = 1;
        <org.apache.commons.validator.routines.checkdigit.ISINCheckDigit: int[] POSITION_WEIGHT> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.commons.validator.routines.checkdigit.ISINCheckDigit r0;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.ISINCheckDigit;
        specialinvoke r0.<org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit: void <init>(int)>(10);
        return;
    }

    protected int calculateModulus(java.lang.String, boolean) throws org.apache.commons.validator.routines.checkdigit.CheckDigitException
    {
        org.apache.commons.validator.routines.checkdigit.ISINCheckDigit r0;
        java.lang.String r1, $r9, $r16, $r18;
        boolean z0, $z1;
        java.lang.StringBuilder $r2, r3, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15;
        char c0, $c7;
        int i1, $i2, $i3, $i4, $i5, i6, $i8, $i9, $i10;
        org.apache.commons.validator.routines.checkdigit.CheckDigitException $r4, $r10;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.ISINCheckDigit;
        r1 := @parameter0: java.lang.String;
        z0 := @parameter1: boolean;
        $r2 = new java.lang.StringBuilder;
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();
        $i3 = $i2 * 2;
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i3);
        r3 = $r2;
        if z0 == 0 goto label0;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();
        $i5 = $i4 - 1;
        c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);
        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);
        if $z1 != 0 goto label0;

        $r4 = new org.apache.commons.validator.routines.checkdigit.CheckDigitException;
        $r5 = new java.lang.StringBuilder;
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid checkdigit[");
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] in ");
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r4.<org.apache.commons.validator.routines.checkdigit.CheckDigitException: void <init>(java.lang.String)>($r9);
        throw $r4;

     label0:
        i6 = 0;
        goto label4;

     label1:
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);
        i1 = staticinvoke <java.lang.Character: int getNumericValue(char)>($c7);
        if i1 < 0 goto label2;

        if i1 <= 35 goto label3;

     label2:
        $r10 = new org.apache.commons.validator.routines.checkdigit.CheckDigitException;
        $r11 = new java.lang.StringBuilder;
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid Character[");
        $i8 = i6 + 1;
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = \'");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r10.<org.apache.commons.validator.routines.checkdigit.CheckDigitException: void <init>(java.lang.String)>($r16);
        throw $r10;

     label3:
        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        i6 = i6 + 1;

     label4:
        $i9 = virtualinvoke r1.<java.lang.String: int length()>();
        if i6 < $i9 goto label1;

        $r18 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();
        $i10 = specialinvoke r0.<org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit: int calculateModulus(java.lang.String,boolean)>($r18, z0);
        return $i10;
    }

    protected int weightedValue(int, int, int)
    {
        org.apache.commons.validator.routines.checkdigit.ISINCheckDigit r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        int[] $r1;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.ISINCheckDigit;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = <org.apache.commons.validator.routines.checkdigit.ISINCheckDigit: int[] POSITION_WEIGHT>;
        $i5 = i2 % 2;
        i3 = $r1[$i5];
        i4 = i0 * i3;
        $i6 = staticinvoke <org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit: int sumDigits(int)>(i4);
        return $i6;
    }
}
