public class org.apache.commons.validator.routines.ISSNValidatorTest extends junit.framework.TestCase
{
    private static final org.apache.commons.validator.routines.ISSNValidator VALIDATOR;
    private final java.lang.String[] validFormat;
    private final java.lang.String[] invalidFormat;

    static void <clinit>()
    {
        org.apache.commons.validator.routines.ISSNValidator $r0;

        $r0 = staticinvoke <org.apache.commons.validator.routines.ISSNValidator: org.apache.commons.validator.routines.ISSNValidator getInstance()>();
        <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR> = $r0;
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.routines.ISSNValidatorTest r0;
        java.lang.String r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidatorTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);
        $r2 = newarray (java.lang.String)[14];
        $r2[0] = "ISSN 0317-8471";
        $r2[1] = "1050-124X";
        $r2[2] = "ISSN 1562-6865";
        $r2[3] = "1063-7710";
        $r2[4] = "1748-7188";
        $r2[5] = "ISSN 0264-2875";
        $r2[6] = "1750-0095";
        $r2[7] = "1188-1534";
        $r2[8] = "1911-1479";
        $r2[9] = "ISSN 1911-1460";
        $r2[10] = "0001-6772";
        $r2[11] = "1365-201X";
        $r2[12] = "0264-3596";
        $r2[13] = "1144-875X";
        r0.<org.apache.commons.validator.routines.ISSNValidatorTest: java.lang.String[] validFormat> = $r2;
        $r3 = newarray (java.lang.String)[11];
        $r3[0] = "";
        $r3[1] = "   ";
        $r3[2] = "ISBN 0317-8471";
        $r3[3] = "\'1050-124X";
        $r3[4] = "ISSN1562-6865";
        $r3[5] = "10637710";
        $r3[6] = "1748-7188\'";
        $r3[7] = "ISSN  0264-2875";
        $r3[8] = "1750 0095";
        $r3[9] = "1188_1534";
        $r3[10] = "1911-1478";
        r0.<org.apache.commons.validator.routines.ISSNValidatorTest: java.lang.String[] invalidFormat> = $r3;
        return;
    }

    public void testIsValidISSN()
    {
        org.apache.commons.validator.routines.ISSNValidatorTest r0;
        java.lang.String[] r1, $r3;
        int i0, i1;
        java.lang.String r2;
        org.apache.commons.validator.routines.ISSNValidator $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidatorTest;
        $r3 = r0.<org.apache.commons.validator.routines.ISSNValidatorTest: java.lang.String[] validFormat>;
        r1 = $r3;
        i0 = lengthof $r3;
        i1 = 0;
        goto label1;

     label0:
        r2 = r1[i1];
        $r4 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $z0 = virtualinvoke $r4.<org.apache.commons.validator.routines.ISSNValidator: boolean isValid(java.lang.String)>(r2);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertTrue(java.lang.String,boolean)>(r2, $z0);
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        return;
    }

    public void testNull()
    {
        org.apache.commons.validator.routines.ISSNValidatorTest r0;
        org.apache.commons.validator.routines.ISSNValidator $r1;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidatorTest;
        $r1 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $z0 = virtualinvoke $r1.<org.apache.commons.validator.routines.ISSNValidator: boolean isValid(java.lang.String)>(null);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertFalse(java.lang.String,boolean)>("isValid", $z0);
        return;
    }

    public void testInvalid()
    {
        org.apache.commons.validator.routines.ISSNValidatorTest r0;
        java.lang.String[] r1, $r3;
        int i0, i1;
        java.lang.String r2;
        org.apache.commons.validator.routines.ISSNValidator $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidatorTest;
        $r3 = r0.<org.apache.commons.validator.routines.ISSNValidatorTest: java.lang.String[] invalidFormat>;
        r1 = $r3;
        i0 = lengthof $r3;
        i1 = 0;
        goto label1;

     label0:
        r2 = r1[i1];
        $r4 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $z0 = virtualinvoke $r4.<org.apache.commons.validator.routines.ISSNValidator: boolean isValid(java.lang.String)>(r2);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertFalse(java.lang.String,boolean)>(r2, $z0);
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        return;
    }

    public void testIsValidISSNConvertNull()
    {
        org.apache.commons.validator.routines.ISSNValidatorTest r0;
        org.apache.commons.validator.routines.ISSNValidator $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidatorTest;
        $r1 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r2 = virtualinvoke $r1.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>(null, "00");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertNull(java.lang.Object)>($r2);
        return;
    }

    public void testIsValidISSNConvertSuffix()
    {
        org.apache.commons.validator.routines.ISSNValidatorTest r0;
        org.apache.commons.validator.routines.ISSNValidator $r1, $r5, $r9, $r13, $r17, $r21;
        java.lang.IllegalArgumentException r2, $r4, $r7, r8, $r11, r12, $r15, r16, $r19, r20, $r23, r24;
        java.lang.String $r3, $r6, $r10, $r14, $r18, $r22;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidatorTest;

     label0:
        $r1 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r3 = virtualinvoke $r1.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>(null, null);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertNull(java.lang.Object)>($r3);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void fail(java.lang.String)>("Expected IllegalArgumentException");

     label1:
        goto label3;

     label2:
        $r4 := @caughtexception;
        r2 = $r4;

     label3:
        $r5 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r6 = virtualinvoke $r5.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>(null, "");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertNull(java.lang.Object)>($r6);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void fail(java.lang.String)>("Expected IllegalArgumentException");

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;
        r8 = $r7;

     label6:
        $r9 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r10 = virtualinvoke $r9.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>(null, "0");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertNull(java.lang.Object)>($r10);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void fail(java.lang.String)>("Expected IllegalArgumentException");

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;
        r12 = $r11;

     label9:
        $r13 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r14 = virtualinvoke $r13.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>(null, "A");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertNull(java.lang.Object)>($r14);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void fail(java.lang.String)>("Expected IllegalArgumentException");

     label10:
        goto label12;

     label11:
        $r15 := @caughtexception;
        r16 = $r15;

     label12:
        $r17 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r18 = virtualinvoke $r17.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>(null, "AA");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertNull(java.lang.Object)>($r18);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void fail(java.lang.String)>("Expected IllegalArgumentException");

     label13:
        goto label15;

     label14:
        $r19 := @caughtexception;
        r20 = $r19;

     label15:
        $r21 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r22 = virtualinvoke $r21.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>(null, "999");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertNull(java.lang.Object)>($r22);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void fail(java.lang.String)>("Expected IllegalArgumentException");

     label16:
        goto label18;

     label17:
        $r23 := @caughtexception;
        r24 = $r23;

     label18:
        return;

        catch java.lang.IllegalArgumentException from label0 to label1 with label2;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
        catch java.lang.IllegalArgumentException from label6 to label7 with label8;
        catch java.lang.IllegalArgumentException from label9 to label10 with label11;
        catch java.lang.IllegalArgumentException from label12 to label13 with label14;
        catch java.lang.IllegalArgumentException from label15 to label16 with label17;
    }

    public void testIsValidISSNConvert()
    {
        org.apache.commons.validator.routines.ISSNValidatorTest r0;
        org.apache.commons.validator.routines.checkdigit.CheckDigit r1;
        java.util.Random r2, $r7;
        java.lang.String[] r3, $r8;
        int i0, i1, $i2;
        java.lang.String r4, r5, r6, $r13, $r15, $r17;
        java.lang.Object[] $r9;
        java.lang.Integer $r10;
        org.apache.commons.validator.routines.ISSNValidator $r11, $r12, $r14, $r16;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidatorTest;
        r1 = <org.apache.commons.validator.routines.checkdigit.EAN13CheckDigit: org.apache.commons.validator.routines.checkdigit.CheckDigit EAN13_CHECK_DIGIT>;
        $r7 = new java.util.Random;
        specialinvoke $r7.<java.util.Random: void <init>()>();
        r2 = $r7;
        $r8 = r0.<org.apache.commons.validator.routines.ISSNValidatorTest: java.lang.String[] validFormat>;
        r3 = $r8;
        i0 = lengthof $r8;
        i1 = 0;
        goto label1;

     label0:
        r4 = r3[i1];
        $r9 = newarray (java.lang.Object)[1];
        $i2 = virtualinvoke r2.<java.util.Random: int nextInt(int)>(100);
        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
        $r9[0] = $r10;
        r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d", $r9);
        $r11 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        r6 = virtualinvoke $r11.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>(r4, r5);
        $z0 = interfaceinvoke r1.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>(r6);
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertTrue(java.lang.String,boolean)>(r6, $z0);
        i1 = i1 + 1;

     label1:
        if i1 < i0 goto label0;

        $r12 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r13 = virtualinvoke $r12.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>("1144-875X", "00");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertEquals(java.lang.String,java.lang.String)>("9771144875007", $r13);
        $r14 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r15 = virtualinvoke $r14.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>("0264-3596", "00");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertEquals(java.lang.String,java.lang.String)>("9770264359008", $r15);
        $r16 = <org.apache.commons.validator.routines.ISSNValidatorTest: org.apache.commons.validator.routines.ISSNValidator VALIDATOR>;
        $r17 = virtualinvoke $r16.<org.apache.commons.validator.routines.ISSNValidator: java.lang.String convertToEAN13(java.lang.String,java.lang.String)>("1234-5679", "00");
        staticinvoke <org.apache.commons.validator.routines.ISSNValidatorTest: void assertEquals(java.lang.String,java.lang.String)>("9771234567003", $r17);
        return;
    }
}
