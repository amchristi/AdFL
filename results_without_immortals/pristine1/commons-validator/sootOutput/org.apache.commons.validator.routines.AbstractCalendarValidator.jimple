public abstract class org.apache.commons.validator.routines.AbstractCalendarValidator extends org.apache.commons.validator.routines.AbstractFormatValidator
{
    private static final long serialVersionUID;
    private final int dateStyle;
    private final int timeStyle;

    public void <init>(boolean, int, int)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        boolean z0;
        int i0, i1;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        z0 := @parameter0: boolean;
        i0 := @parameter1: int;
        i1 := @parameter2: int;
        specialinvoke r0.<org.apache.commons.validator.routines.AbstractFormatValidator: void <init>(boolean)>(z0);
        r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int dateStyle> = i0;
        r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int timeStyle> = i1;
        return;
    }

    public boolean isValid(java.lang.String, java.lang.String, java.util.Locale)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.String r1, r2;
        java.util.Locale r3;
        java.lang.Object r4;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.Locale;
        r4 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale,java.util.TimeZone)>(r1, r2, r3, null);
        if r4 != null goto label0;

        $z0 = 0;
        goto label1;

     label0:
        $z0 = 1;

     label1:
        return $z0;
    }

    public java.lang.String format(java.lang.Object, java.util.TimeZone)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.Object r1;
        java.util.TimeZone r2;
        java.lang.String $r3;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.TimeZone;
        $r3 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.lang.String format(java.lang.Object,java.lang.String,java.util.Locale,java.util.TimeZone)>(r1, null, null, r2);
        return $r3;
    }

    public java.lang.String format(java.lang.Object, java.lang.String, java.util.TimeZone)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.Object r1;
        java.lang.String r2, $r4;
        java.util.TimeZone r3;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.TimeZone;
        $r4 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.lang.String format(java.lang.Object,java.lang.String,java.util.Locale,java.util.TimeZone)>(r1, r2, null, r3);
        return $r4;
    }

    public java.lang.String format(java.lang.Object, java.util.Locale, java.util.TimeZone)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.Object r1;
        java.util.Locale r2;
        java.util.TimeZone r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.util.Locale;
        r3 := @parameter2: java.util.TimeZone;
        $r4 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.lang.String format(java.lang.Object,java.lang.String,java.util.Locale,java.util.TimeZone)>(r1, null, r2, r3);
        return $r4;
    }

    public java.lang.String format(java.lang.Object, java.lang.String, java.util.Locale)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.Object r1;
        java.lang.String r2, $r4;
        java.util.Locale r3;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.Locale;
        $r4 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.lang.String format(java.lang.Object,java.lang.String,java.util.Locale,java.util.TimeZone)>(r1, r2, r3, null);
        return $r4;
    }

    public java.lang.String format(java.lang.Object, java.lang.String, java.util.Locale, java.util.TimeZone)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.Object r1;
        java.lang.String r2, $r9;
        java.util.Locale r3;
        java.util.TimeZone r4, $r8;
        java.text.DateFormat r5;
        java.text.Format $r6;
        boolean $z0;
        java.util.Calendar $r7;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.Locale;
        r4 := @parameter3: java.util.TimeZone;
        $r6 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.text.Format getFormat(java.lang.String,java.util.Locale)>(r2, r3);
        r5 = (java.text.DateFormat) $r6;
        if r4 == null goto label0;

        virtualinvoke r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r4);
        goto label1;

     label0:
        $z0 = r1 instanceof java.util.Calendar;
        if $z0 == 0 goto label1;

        $r7 = (java.util.Calendar) r1;
        $r8 = virtualinvoke $r7.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
        virtualinvoke r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r8);

     label1:
        $r9 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.lang.String format(java.lang.Object,java.text.Format)>(r1, r5);
        return $r9;
    }

    protected java.lang.String format(java.lang.Object, java.text.Format)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.Object r1;
        java.text.Format r2;
        boolean $z0;
        java.util.Calendar $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.Object;
        r2 := @parameter1: java.text.Format;
        if r1 != null goto label0;

        return null;

     label0:
        $z0 = r1 instanceof java.util.Calendar;
        if $z0 == 0 goto label1;

        $r3 = (java.util.Calendar) r1;
        r1 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

     label1:
        $r4 = virtualinvoke r2.<java.text.Format: java.lang.String format(java.lang.Object)>(r1);
        return $r4;
    }

    protected java.lang.Object parse(java.lang.String, java.lang.String, java.util.Locale, java.util.TimeZone)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.String r1, r2, $r6, r7;
        java.util.Locale r3;
        java.util.TimeZone r4;
        java.text.DateFormat r5;
        int $i0;
        java.text.Format $r8;
        java.lang.Object $r9;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        r3 := @parameter2: java.util.Locale;
        r4 := @parameter3: java.util.TimeZone;
        if r1 != null goto label0;

        $r6 = null;
        goto label1;

     label0:
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

     label1:
        r7 = $r6;
        if r7 == null goto label2;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();
        if $i0 != 0 goto label3;

     label2:
        return null;

     label3:
        $r8 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.text.Format getFormat(java.lang.String,java.util.Locale)>(r2, r3);
        r5 = (java.text.DateFormat) $r8;
        if r4 == null goto label4;

        virtualinvoke r5.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(r4);

     label4:
        $r9 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.lang.Object parse(java.lang.String,java.text.Format)>(r7, r5);
        return $r9;
    }

    protected abstract java.lang.Object processParsedValue(java.lang.Object, java.text.Format);

    protected java.text.Format getFormat(java.lang.String, java.util.Locale)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.lang.String r1;
        java.util.Locale r2;
        null_type n0;
        boolean z0, $z1;
        java.text.DateFormatSymbols r3, $r7;
        int $i0;
        java.text.Format $r4;
        java.text.DateFormat r5;
        java.text.SimpleDateFormat $r6, $r8;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.util.Locale;
        n0 = null;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        $z1 = 1;
        goto label1;

     label0:
        $z1 = 0;

     label1:
        z0 = $z1;
        if z0 != 0 goto label2;

        $r4 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: java.text.Format getFormat(java.util.Locale)>(r2);
        r5 = (java.text.DateFormat) $r4;
        goto label4;

     label2:
        if r2 != null goto label3;

        $r6 = new java.text.SimpleDateFormat;
        specialinvoke $r6.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r1);
        r5 = $r6;
        goto label4;

     label3:
        $r7 = new java.text.DateFormatSymbols;
        specialinvoke $r7.<java.text.DateFormatSymbols: void <init>(java.util.Locale)>(r2);
        r3 = $r7;
        $r8 = new java.text.SimpleDateFormat;
        specialinvoke $r8.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.text.DateFormatSymbols)>(r1, r3);
        r5 = $r8;

     label4:
        virtualinvoke r5.<java.text.DateFormat: void setLenient(boolean)>(0);
        return r5;
    }

    protected java.text.Format getFormat(java.util.Locale)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.util.Locale r1;
        null_type n0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.text.DateFormat r2;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.util.Locale;
        n0 = null;
        $i1 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int dateStyle>;
        if $i1 < 0 goto label1;

        $i2 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int timeStyle>;
        if $i2 < 0 goto label1;

        if r1 != null goto label0;

        $i3 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int dateStyle>;
        $i4 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int timeStyle>;
        r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>($i3, $i4);
        goto label7;

     label0:
        $i5 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int dateStyle>;
        $i6 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int timeStyle>;
        r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>($i5, $i6, r1);
        goto label7;

     label1:
        $i7 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int timeStyle>;
        if $i7 < 0 goto label3;

        if r1 != null goto label2;

        $i8 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int timeStyle>;
        r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int)>($i8);
        goto label7;

     label2:
        $i9 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int timeStyle>;
        r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>($i9, r1);
        goto label7;

     label3:
        $i10 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int dateStyle>;
        if $i10 < 0 goto label4;

        $i11 = r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int dateStyle>;
        goto label5;

     label4:
        $i11 = 3;

     label5:
        i0 = $i11;
        if r1 != null goto label6;

        r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int)>(i0);
        goto label7;

     label6:
        r2 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(i0, r1);

     label7:
        virtualinvoke r2.<java.text.DateFormat: void setLenient(boolean)>(0);
        return r2;
    }

    protected int compare(java.util.Calendar, java.util.Calendar, int)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.util.Calendar r1, r2;
        int i0, i1, $i2, $i3, i4, $i5, i6, $i7;
        boolean z0;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.util.Calendar;
        r2 := @parameter1: java.util.Calendar;
        i0 := @parameter2: int;
        z0 = 0;
        i1 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 1);
        if i1 != 0 goto label0;

        if i0 != 1 goto label1;

     label0:
        return i1;

     label1:
        if i0 != 3 goto label2;

        $i2 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 3);
        return $i2;

     label2:
        if i0 != 6 goto label3;

        $i3 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 6);
        return $i3;

     label3:
        i4 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 2);
        if i4 != 0 goto label4;

        if i0 != 2 goto label5;

     label4:
        return i4;

     label5:
        if i0 != 4 goto label6;

        $i5 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 4);
        return $i5;

     label6:
        i6 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 5);
        if i6 != 0 goto label7;

        if i0 == 5 goto label7;

        if i0 == 7 goto label7;

        if i0 != 8 goto label8;

     label7:
        return i6;

     label8:
        $i7 = virtualinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int compareTime(java.util.Calendar,java.util.Calendar,int)>(r1, r2, i0);
        return $i7;
    }

    protected int compareTime(java.util.Calendar, java.util.Calendar, int)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.util.Calendar r1, r2;
        int i0, i1, i2, i3, $i4;
        boolean z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5;
        java.lang.String $r6;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.util.Calendar;
        r2 := @parameter1: java.util.Calendar;
        i0 := @parameter2: int;
        z0 = 0;
        i1 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 11);
        if i1 != 0 goto label0;

        if i0 == 10 goto label0;

        if i0 != 11 goto label1;

     label0:
        return i1;

     label1:
        i2 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 12);
        if i2 != 0 goto label2;

        if i0 != 12 goto label3;

     label2:
        return i2;

     label3:
        i3 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 13);
        if i3 != 0 goto label4;

        if i0 != 13 goto label5;

     label4:
        return i3;

     label5:
        if i0 != 14 goto label6;

        $i4 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateCompareResult(java.util.Calendar,java.util.Calendar,int)>(r1, r2, 14);
        return $i4;

     label6:
        $r3 = new java.lang.IllegalArgumentException;
        $r4 = new java.lang.StringBuilder;
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid field: ");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);
        throw $r3;
    }

    protected int compareQuarters(java.util.Calendar, java.util.Calendar, int)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.util.Calendar r1, r2;
        int i0, i1, i2;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.util.Calendar;
        r2 := @parameter1: java.util.Calendar;
        i0 := @parameter2: int;
        i1 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateQuarter(java.util.Calendar,int)>(r1, i0);
        i2 = specialinvoke r0.<org.apache.commons.validator.routines.AbstractCalendarValidator: int calculateQuarter(java.util.Calendar,int)>(r2, i0);
        if i1 >= i2 goto label0;

        return -1;

     label0:
        if i1 <= i2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private int calculateQuarter(java.util.Calendar, int)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.util.Calendar r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.util.Calendar;
        i0 := @parameter1: int;
        i1 = virtualinvoke r1.<java.util.Calendar: int get(int)>(1);
        $i5 = virtualinvoke r1.<java.util.Calendar: int get(int)>(2);
        i2 = $i5 + 1;
        if i2 < i0 goto label0;

        $i6 = i2 - i0;
        goto label1;

     label0:
        $i7 = 12 - i0;
        $i6 = i2 + $i7;

     label1:
        i3 = $i6;
        $i8 = i3 / 3;
        i4 = $i8 + 1;
        if i2 >= i0 goto label2;

        i1 = i1 + -1;

     label2:
        $i9 = i1 * 10;
        $i10 = $i9 + i4;
        return $i10;
    }

    private int calculateCompareResult(java.util.Calendar, java.util.Calendar, int)
    {
        org.apache.commons.validator.routines.AbstractCalendarValidator r0;
        java.util.Calendar r1, r2;
        int i0, i1, $i2, $i3;

        r0 := @this: org.apache.commons.validator.routines.AbstractCalendarValidator;
        r1 := @parameter0: java.util.Calendar;
        r2 := @parameter1: java.util.Calendar;
        i0 := @parameter2: int;
        $i2 = virtualinvoke r1.<java.util.Calendar: int get(int)>(i0);
        $i3 = virtualinvoke r2.<java.util.Calendar: int get(int)>(i0);
        i1 = $i2 - $i3;
        if i1 >= 0 goto label0;

        return -1;

     label0:
        if i1 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
