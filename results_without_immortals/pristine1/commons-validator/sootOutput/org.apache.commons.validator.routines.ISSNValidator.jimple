public class org.apache.commons.validator.routines.ISSNValidator extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String ISSN_REGEX;
    private static final org.apache.commons.validator.routines.CodeValidator issnValidator;
    private static final org.apache.commons.validator.routines.ISSNValidator ISSN_VALIDATOR;

    static void <clinit>()
    {
        org.apache.commons.validator.routines.CodeValidator $r0;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r1;
        org.apache.commons.validator.routines.ISSNValidator $r2;

        $r0 = new org.apache.commons.validator.routines.CodeValidator;
        $r1 = <org.apache.commons.validator.routines.checkdigit.ISSNCheckDigit: org.apache.commons.validator.routines.checkdigit.CheckDigit ISSN_CHECK_DIGIT>;
        specialinvoke $r0.<org.apache.commons.validator.routines.CodeValidator: void <init>(java.lang.String,int,org.apache.commons.validator.routines.checkdigit.CheckDigit)>("(?:ISSN )?(\\d{4})-(\\d{3}[0-9X])$", 8, $r1);
        <org.apache.commons.validator.routines.ISSNValidator: org.apache.commons.validator.routines.CodeValidator issnValidator> = $r0;
        $r2 = new org.apache.commons.validator.routines.ISSNValidator;
        specialinvoke $r2.<org.apache.commons.validator.routines.ISSNValidator: void <init>()>();
        <org.apache.commons.validator.routines.ISSNValidator: org.apache.commons.validator.routines.ISSNValidator ISSN_VALIDATOR> = $r2;
        return;
    }

    public void <init>()
    {
        org.apache.commons.validator.routines.ISSNValidator r0;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static org.apache.commons.validator.routines.ISSNValidator getInstance()
    {
        org.apache.commons.validator.routines.ISSNValidator $r0;

        $r0 = <org.apache.commons.validator.routines.ISSNValidator: org.apache.commons.validator.routines.ISSNValidator ISSN_VALIDATOR>;
        return $r0;
    }

    public boolean isValid(java.lang.String)
    {
        org.apache.commons.validator.routines.ISSNValidator r0;
        java.lang.String r1;
        org.apache.commons.validator.routines.CodeValidator $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidator;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.commons.validator.routines.ISSNValidator: org.apache.commons.validator.routines.CodeValidator issnValidator>;
        $z0 = virtualinvoke $r2.<org.apache.commons.validator.routines.CodeValidator: boolean isValid(java.lang.String)>(r1);
        return $z0;
    }

    public java.lang.Object validate(java.lang.String)
    {
        org.apache.commons.validator.routines.ISSNValidator r0;
        java.lang.String r1;
        org.apache.commons.validator.routines.CodeValidator $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidator;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.commons.validator.routines.ISSNValidator: org.apache.commons.validator.routines.CodeValidator issnValidator>;
        $r3 = virtualinvoke $r2.<org.apache.commons.validator.routines.CodeValidator: java.lang.Object validate(java.lang.String)>(r1);
        return $r3;
    }

    public java.lang.String convertToEAN13(java.lang.String, java.lang.String)
    {
        org.apache.commons.validator.routines.ISSNValidator r0;
        java.lang.String r1, r2, r5, r6, r7, $r11, $r13, $r18, $r27, $r29;
        java.lang.StringBuilder $r3, $r9, $r10, $r12, $r14, $r15, $r17, $r19, $r24, $r25, $r26, $r28;
        java.lang.Object r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r8, $r23;
        int $i0, $i1;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r16;
        org.apache.commons.validator.routines.checkdigit.CheckDigitException $r21, r22;

        r0 := @this: org.apache.commons.validator.routines.ISSNValidator;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        if r2 == null goto label0;

        $z0 = virtualinvoke r2.<java.lang.String: boolean matches(java.lang.String)>("\\d\\d");
        if $z0 != 0 goto label1;

     label0:
        $r8 = new java.lang.IllegalArgumentException;
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Suffix must be two digits: \'");
        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);
        throw $r8;

     label1:
        r4 = virtualinvoke r0.<org.apache.commons.validator.routines.ISSNValidator: java.lang.Object validate(java.lang.String)>(r1);
        if r4 != null goto label2;

        return null;

     label2:
        r5 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("977");
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();
        $i1 = $i0 - 1;
        $r13 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);
        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        r6 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r16 = <org.apache.commons.validator.routines.checkdigit.EAN13CheckDigit: org.apache.commons.validator.routines.checkdigit.CheckDigit EAN13_CHECK_DIGIT>;
        r7 = interfaceinvoke $r16.<org.apache.commons.validator.routines.checkdigit.CheckDigit: java.lang.String calculate(java.lang.String)>(r6);
        $r17 = new java.lang.StringBuilder;
        $r18 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r6);
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>($r18);
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);
        r6 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return r6;

     label5:
        $r21 := @caughtexception;
        r22 = $r21;
        $r23 = new java.lang.IllegalArgumentException;
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("Check digit error for \'");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' - ");
        $r27 = virtualinvoke r22.<org.apache.commons.validator.routines.checkdigit.CheckDigitException: java.lang.String getMessage()>();
        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);
        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r29);
        throw $r23;

        catch org.apache.commons.validator.routines.checkdigit.CheckDigitException from label3 to label4 with label5;
    }
}
