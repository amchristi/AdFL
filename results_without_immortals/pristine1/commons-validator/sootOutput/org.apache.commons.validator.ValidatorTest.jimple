public class org.apache.commons.validator.ValidatorTest extends junit.framework.TestCase
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.ValidatorTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.ValidatorTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);
        return;
    }

    public void testManualObject()
    {
        org.apache.commons.validator.ValidatorTest r0;
        java.lang.String r1, r2, $r13, $r21, $r22;
        org.apache.commons.validator.ValidatorResources r3;
        org.apache.commons.validator.ValidatorTest$TestBean r4, $r8;
        org.apache.commons.validator.Validator r5, $r9;
        org.apache.commons.validator.ValidatorResults r6, r16;
        org.apache.commons.validator.ValidatorResult r7, r17;
        java.lang.StringBuilder $r10, $r11, $r12, $r18, $r19, $r20;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r14, r15, $r23, r24;

        r0 := @this: org.apache.commons.validator.ValidatorTest;
        r1 = "date";
        r2 = "date";
        r3 = specialinvoke r0.<org.apache.commons.validator.ValidatorTest: org.apache.commons.validator.ValidatorResources setupDateResources(java.lang.String,java.lang.String)>(r1, r2);
        $r8 = new org.apache.commons.validator.ValidatorTest$TestBean;
        specialinvoke $r8.<org.apache.commons.validator.ValidatorTest$TestBean: void <init>(org.apache.commons.validator.ValidatorTest)>(r0);
        r4 = $r8;
        virtualinvoke r4.<org.apache.commons.validator.ValidatorTest$TestBean: void setDate(java.lang.String)>("2/3/1999");
        $r9 = new org.apache.commons.validator.Validator;
        specialinvoke $r9.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>(r3, "testForm");
        r5 = $r9;
        virtualinvoke r5.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r4);

     label0:
        r6 = virtualinvoke r5.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r6);
        r7 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>(r1);
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r6);
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("ValidatorResult does not contain \'");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' validator result.");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        $z0 = virtualinvoke r7.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>(r2);
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertTrue(java.lang.String,boolean)>($r13, $z0);
        $z1 = virtualinvoke r7.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>(r2);
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertTrue(java.lang.String,boolean)>("Validation of the date formatting has failed.", $z1);

     label1:
        goto label3;

     label2:
        $r14 := @caughtexception;
        r15 = $r14;
        staticinvoke <org.apache.commons.validator.ValidatorTest: void fail(java.lang.String)>("An exception was thrown while calling Validator.validate()");

     label3:
        virtualinvoke r4.<org.apache.commons.validator.ValidatorTest$TestBean: void setDate(java.lang.String)>("2/30/1999");

     label4:
        r16 = virtualinvoke r5.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r16);
        r17 = virtualinvoke r16.<org.apache.commons.validator.ValidatorResults: org.apache.commons.validator.ValidatorResult getValidatorResult(java.lang.String)>(r1);
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertNotNull(java.lang.String,java.lang.Object)>("Results are null.", r16);
        $r18 = new java.lang.StringBuilder;
        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>("ValidatorResult does not contain \'");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' validator result.");
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        $z2 = virtualinvoke r17.<org.apache.commons.validator.ValidatorResult: boolean containsAction(java.lang.String)>(r2);
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertTrue(java.lang.String,boolean)>($r21, $z2);
        $r22 = "Validation of the date formatting has passed when it should have failed.";
        $z3 = virtualinvoke r17.<org.apache.commons.validator.ValidatorResult: boolean isValid(java.lang.String)>(r2);
        if $z3 == 0 goto label5;

        $z4 = 0;
        goto label6;

     label5:
        $z4 = 1;

     label6:
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertTrue(java.lang.String,boolean)>($r22, $z4);

     label7:
        goto label9;

     label8:
        $r23 := @caughtexception;
        r24 = $r23;
        staticinvoke <org.apache.commons.validator.ValidatorTest: void fail(java.lang.String)>("An exception was thrown while calling Validator.validate()");

     label9:
        return;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label4 to label7 with label8;
    }

    public void testOnlyReturnErrors() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ValidatorTest r0;
        java.lang.String r1, r2;
        org.apache.commons.validator.ValidatorResources r3;
        org.apache.commons.validator.ValidatorTest$TestBean r4, $r7;
        org.apache.commons.validator.Validator r5, $r8;
        org.apache.commons.validator.ValidatorResults r6, r10;
        java.util.Set $r9, $r11;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.validator.ValidatorTest;
        r1 = "date";
        r2 = "date";
        r3 = specialinvoke r0.<org.apache.commons.validator.ValidatorTest: org.apache.commons.validator.ValidatorResources setupDateResources(java.lang.String,java.lang.String)>(r1, r2);
        $r7 = new org.apache.commons.validator.ValidatorTest$TestBean;
        specialinvoke $r7.<org.apache.commons.validator.ValidatorTest$TestBean: void <init>(org.apache.commons.validator.ValidatorTest)>(r0);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.ValidatorTest$TestBean: void setDate(java.lang.String)>("2/3/1999");
        $r8 = new org.apache.commons.validator.Validator;
        specialinvoke $r8.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>(r3, "testForm");
        r5 = $r8;
        virtualinvoke r5.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r4);
        r6 = virtualinvoke r5.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertNotNull(java.lang.Object)>(r6);
        $r9 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResults: java.util.Set getPropertyNames()>();
        $z0 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertTrue(boolean)>($z0);
        virtualinvoke r5.<org.apache.commons.validator.Validator: void setOnlyReturnErrors(boolean)>(1);
        r10 = virtualinvoke r5.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        $r11 = virtualinvoke r10.<org.apache.commons.validator.ValidatorResults: java.util.Set getPropertyNames()>();
        $z1 = interfaceinvoke $r11.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertFalse(boolean)>($z1);
        return;
    }

    public void testOnlyValidateField() throws org.apache.commons.validator.ValidatorException
    {
        org.apache.commons.validator.ValidatorTest r0;
        java.lang.String r1, r2;
        org.apache.commons.validator.ValidatorResources r3;
        org.apache.commons.validator.ValidatorTest$TestBean r4, $r7;
        org.apache.commons.validator.Validator r5, $r8;
        org.apache.commons.validator.ValidatorResults r6;
        java.util.Set $r9;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.ValidatorTest;
        r1 = "date";
        r2 = "date";
        r3 = specialinvoke r0.<org.apache.commons.validator.ValidatorTest: org.apache.commons.validator.ValidatorResources setupDateResources(java.lang.String,java.lang.String)>(r1, r2);
        $r7 = new org.apache.commons.validator.ValidatorTest$TestBean;
        specialinvoke $r7.<org.apache.commons.validator.ValidatorTest$TestBean: void <init>(org.apache.commons.validator.ValidatorTest)>(r0);
        r4 = $r7;
        virtualinvoke r4.<org.apache.commons.validator.ValidatorTest$TestBean: void setDate(java.lang.String)>("2/3/1999");
        $r8 = new org.apache.commons.validator.Validator;
        specialinvoke $r8.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String,java.lang.String)>(r3, "testForm", r1);
        r5 = $r8;
        virtualinvoke r5.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r4);
        r6 = virtualinvoke r5.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertNotNull(java.lang.Object)>(r6);
        $r9 = virtualinvoke r6.<org.apache.commons.validator.ValidatorResults: java.util.Set getPropertyNames()>();
        $z0 = interfaceinvoke $r9.<java.util.Set: boolean contains(java.lang.Object)>(r1);
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertTrue(boolean)>($z0);
        return;
    }

    private org.apache.commons.validator.ValidatorResources setupDateResources(java.lang.String, java.lang.String)
    {
        org.apache.commons.validator.ValidatorTest r0;
        java.lang.String r1, r2;
        org.apache.commons.validator.ValidatorResources $r3, r4;
        org.apache.commons.validator.ValidatorAction r5, $r9;
        org.apache.commons.validator.FormSet r6, $r10;
        org.apache.commons.validator.Form r7, $r11;
        org.apache.commons.validator.Field r8, $r12;

        r0 := @this: org.apache.commons.validator.ValidatorTest;
        r1 := @parameter0: java.lang.String;
        r2 := @parameter1: java.lang.String;
        $r3 = new org.apache.commons.validator.ValidatorResources;
        specialinvoke $r3.<org.apache.commons.validator.ValidatorResources: void <init>()>();
        r4 = $r3;
        $r9 = new org.apache.commons.validator.ValidatorAction;
        specialinvoke $r9.<org.apache.commons.validator.ValidatorAction: void <init>()>();
        r5 = $r9;
        virtualinvoke r5.<org.apache.commons.validator.ValidatorAction: void setName(java.lang.String)>(r2);
        virtualinvoke r5.<org.apache.commons.validator.ValidatorAction: void setClassname(java.lang.String)>("org.apache.commons.validator.ValidatorTest");
        virtualinvoke r5.<org.apache.commons.validator.ValidatorAction: void setMethod(java.lang.String)>("formatDate");
        virtualinvoke r5.<org.apache.commons.validator.ValidatorAction: void setMethodParams(java.lang.String)>("java.lang.Object,org.apache.commons.validator.Field");
        $r10 = new org.apache.commons.validator.FormSet;
        specialinvoke $r10.<org.apache.commons.validator.FormSet: void <init>()>();
        r6 = $r10;
        $r11 = new org.apache.commons.validator.Form;
        specialinvoke $r11.<org.apache.commons.validator.Form: void <init>()>();
        r7 = $r11;
        virtualinvoke r7.<org.apache.commons.validator.Form: void setName(java.lang.String)>("testForm");
        $r12 = new org.apache.commons.validator.Field;
        specialinvoke $r12.<org.apache.commons.validator.Field: void <init>()>();
        r8 = $r12;
        virtualinvoke r8.<org.apache.commons.validator.Field: void setProperty(java.lang.String)>(r1);
        virtualinvoke r8.<org.apache.commons.validator.Field: void setDepends(java.lang.String)>(r2);
        virtualinvoke r7.<org.apache.commons.validator.Form: void addField(org.apache.commons.validator.Field)>(r8);
        virtualinvoke r6.<org.apache.commons.validator.FormSet: void addForm(org.apache.commons.validator.Form)>(r7);
        virtualinvoke r4.<org.apache.commons.validator.ValidatorResources: void addValidatorAction(org.apache.commons.validator.ValidatorAction)>(r5);
        virtualinvoke r4.<org.apache.commons.validator.ValidatorResources: void addFormSet(org.apache.commons.validator.FormSet)>(r6);
        virtualinvoke r4.<org.apache.commons.validator.ValidatorResources: void process()>();
        return r4;
    }

    public void testManualBoolean()
    {
        org.apache.commons.validator.ValidatorTest r0;
        org.apache.commons.validator.ValidatorResources $r1, r2;
        org.apache.commons.validator.ValidatorAction r3, $r11;
        org.apache.commons.validator.FormSet r4, $r12;
        org.apache.commons.validator.Form r5, $r13;
        org.apache.commons.validator.Field r6, $r14;
        java.util.ArrayList r7, $r15;
        org.apache.commons.validator.ValidatorTest$TestBean r8, $r16;
        org.apache.commons.validator.Validator r9, $r17;
        java.lang.Exception r10, $r19, $r21, r22;
        int $i0, $i1;

        r0 := @this: org.apache.commons.validator.ValidatorTest;
        $r1 = new org.apache.commons.validator.ValidatorResources;
        specialinvoke $r1.<org.apache.commons.validator.ValidatorResources: void <init>()>();
        r2 = $r1;
        $r11 = new org.apache.commons.validator.ValidatorAction;
        specialinvoke $r11.<org.apache.commons.validator.ValidatorAction: void <init>()>();
        r3 = $r11;
        virtualinvoke r3.<org.apache.commons.validator.ValidatorAction: void setName(java.lang.String)>("capLetter");
        virtualinvoke r3.<org.apache.commons.validator.ValidatorAction: void setClassname(java.lang.String)>("org.apache.commons.validator.ValidatorTest");
        virtualinvoke r3.<org.apache.commons.validator.ValidatorAction: void setMethod(java.lang.String)>("isCapLetter");
        virtualinvoke r3.<org.apache.commons.validator.ValidatorAction: void setMethodParams(java.lang.String)>("java.lang.Object,org.apache.commons.validator.Field,java.util.List");
        $r12 = new org.apache.commons.validator.FormSet;
        specialinvoke $r12.<org.apache.commons.validator.FormSet: void <init>()>();
        r4 = $r12;
        $r13 = new org.apache.commons.validator.Form;
        specialinvoke $r13.<org.apache.commons.validator.Form: void <init>()>();
        r5 = $r13;
        virtualinvoke r5.<org.apache.commons.validator.Form: void setName(java.lang.String)>("testForm");
        $r14 = new org.apache.commons.validator.Field;
        specialinvoke $r14.<org.apache.commons.validator.Field: void <init>()>();
        r6 = $r14;
        virtualinvoke r6.<org.apache.commons.validator.Field: void setProperty(java.lang.String)>("letter");
        virtualinvoke r6.<org.apache.commons.validator.Field: void setDepends(java.lang.String)>("capLetter");
        virtualinvoke r5.<org.apache.commons.validator.Form: void addField(org.apache.commons.validator.Field)>(r6);
        virtualinvoke r4.<org.apache.commons.validator.FormSet: void addForm(org.apache.commons.validator.Form)>(r5);
        virtualinvoke r2.<org.apache.commons.validator.ValidatorResources: void addValidatorAction(org.apache.commons.validator.ValidatorAction)>(r3);
        virtualinvoke r2.<org.apache.commons.validator.ValidatorResources: void addFormSet(org.apache.commons.validator.FormSet)>(r4);
        virtualinvoke r2.<org.apache.commons.validator.ValidatorResources: void process()>();
        $r15 = new java.util.ArrayList;
        specialinvoke $r15.<java.util.ArrayList: void <init>()>();
        r7 = $r15;
        $r16 = new org.apache.commons.validator.ValidatorTest$TestBean;
        specialinvoke $r16.<org.apache.commons.validator.ValidatorTest$TestBean: void <init>(org.apache.commons.validator.ValidatorTest)>(r0);
        r8 = $r16;
        virtualinvoke r8.<org.apache.commons.validator.ValidatorTest$TestBean: void setLetter(java.lang.String)>("A");
        $r17 = new org.apache.commons.validator.Validator;
        specialinvoke $r17.<org.apache.commons.validator.Validator: void <init>(org.apache.commons.validator.ValidatorResources,java.lang.String)>(r2, "testForm");
        r9 = $r17;
        virtualinvoke r9.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.lang.Object", r8);
        virtualinvoke r9.<org.apache.commons.validator.Validator: void setParameter(java.lang.String,java.lang.Object)>("java.util.List", r7);

     label0:
        virtualinvoke r9.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();

     label1:
        goto label3;

     label2:
        $r19 := @caughtexception;
        r10 = $r19;
        staticinvoke <org.apache.commons.validator.ValidatorTest: void fail(java.lang.String)>("An exception was thrown while calling Validator.validate()");

     label3:
        $i0 = interfaceinvoke r7.<java.util.List: int size()>();
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertEquals(java.lang.String,int,int)>("Validation of the letter \'A\'.", 0, $i0);
        interfaceinvoke r7.<java.util.List: void clear()>();
        virtualinvoke r8.<org.apache.commons.validator.ValidatorTest$TestBean: void setLetter(java.lang.String)>("AA");

     label4:
        virtualinvoke r9.<org.apache.commons.validator.Validator: org.apache.commons.validator.ValidatorResults validate()>();

     label5:
        goto label7;

     label6:
        $r21 := @caughtexception;
        r22 = $r21;
        staticinvoke <org.apache.commons.validator.ValidatorTest: void fail(java.lang.String)>("An exception was thrown while calling Validator.validate()");

     label7:
        $i1 = interfaceinvoke r7.<java.util.List: int size()>();
        staticinvoke <org.apache.commons.validator.ValidatorTest: void assertEquals(java.lang.String,int,int)>("Validation of the letter \'AA\'.", 1, $i1);
        return;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static boolean isCapLetter(java.lang.Object, org.apache.commons.validator.Field, java.util.List)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.util.List r2;
        java.lang.String r3, $r4;
        int $i0;
        char $c1, $c2;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        r2 := @parameter2: java.util.List;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r3 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i0 != 1 goto label1;

        $c1 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);
        if $c1 < 65 goto label0;

        $c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>(0);
        if $c2 > 90 goto label0;

        return 1;

     label0:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("Error");
        return 0;

     label1:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>("Error");
        return 0;
    }

    public static java.util.Date formatDate(java.lang.Object, org.apache.commons.validator.Field)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.lang.String r2, $r4, $r11, $r13;
        java.util.Date r3;
        null_type n0;
        java.util.Locale $r5;
        java.text.DateFormat r6;
        java.text.ParseException $r7, r8;
        java.io.PrintStream $r9;
        java.lang.StringBuilder $r10, $r12;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r2 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        r3 = null;

     label0:
        n0 = null;
        $r5 = <java.util.Locale: java.util.Locale US>;
        r6 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(3, $r5);
        virtualinvoke r6.<java.text.DateFormat: void setLenient(boolean)>(0);
        r3 = virtualinvoke r6.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r2);

     label1:
        goto label3;

     label2:
        $r7 := @caughtexception;
        r8 = $r7;
        $r9 = <java.lang.System: java.io.PrintStream out>;
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("ValidatorTest.formatDate() - ");
        $r11 = virtualinvoke r8.<java.text.ParseException: java.lang.String getMessage()>();
        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

     label3:
        return r3;

        catch java.text.ParseException from label0 to label1 with label2;
    }
}
