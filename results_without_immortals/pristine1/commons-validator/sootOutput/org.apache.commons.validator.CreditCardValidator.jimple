public class org.apache.commons.validator.CreditCardValidator extends java.lang.Object
{
    public static final int NONE;
    public static final int AMEX;
    public static final int VISA;
    public static final int MASTERCARD;
    public static final int DISCOVER;
    private final java.util.Collection cardTypes;

    public void <init>()
    {
        org.apache.commons.validator.CreditCardValidator r0;

        r0 := @this: org.apache.commons.validator.CreditCardValidator;
        specialinvoke r0.<org.apache.commons.validator.CreditCardValidator: void <init>(int)>(15);
        return;
    }

    public void <init>(int)
    {
        org.apache.commons.validator.CreditCardValidator r0;
        int i0;
        java.util.ArrayList $r1;
        org.apache.commons.validator.util.Flags r2, $r3;
        long $l1;
        boolean $z0, $z2, $z4, $z6;
        java.util.Collection $r4, $r6, $r8, $r10;
        org.apache.commons.validator.CreditCardValidator$Visa $r5;
        org.apache.commons.validator.CreditCardValidator$Amex $r7;
        org.apache.commons.validator.CreditCardValidator$Mastercard $r9;
        org.apache.commons.validator.CreditCardValidator$Discover $r11;

        r0 := @this: org.apache.commons.validator.CreditCardValidator;
        i0 := @parameter0: int;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        $r1 = new java.util.ArrayList;
        specialinvoke $r1.<java.util.ArrayList: void <init>()>();
        r0.<org.apache.commons.validator.CreditCardValidator: java.util.Collection cardTypes> = $r1;
        $r3 = new org.apache.commons.validator.util.Flags;
        $l1 = (long) i0;
        specialinvoke $r3.<org.apache.commons.validator.util.Flags: void <init>(long)>($l1);
        r2 = $r3;
        $z0 = virtualinvoke r2.<org.apache.commons.validator.util.Flags: boolean isOn(long)>(2L);
        if $z0 == 0 goto label0;

        $r4 = r0.<org.apache.commons.validator.CreditCardValidator: java.util.Collection cardTypes>;
        $r5 = new org.apache.commons.validator.CreditCardValidator$Visa;
        specialinvoke $r5.<org.apache.commons.validator.CreditCardValidator$Visa: void <init>(org.apache.commons.validator.CreditCardValidator$Visa)>(null);
        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>($r5);

     label0:
        $z2 = virtualinvoke r2.<org.apache.commons.validator.util.Flags: boolean isOn(long)>(1L);
        if $z2 == 0 goto label1;

        $r6 = r0.<org.apache.commons.validator.CreditCardValidator: java.util.Collection cardTypes>;
        $r7 = new org.apache.commons.validator.CreditCardValidator$Amex;
        specialinvoke $r7.<org.apache.commons.validator.CreditCardValidator$Amex: void <init>(org.apache.commons.validator.CreditCardValidator$Amex)>(null);
        interfaceinvoke $r6.<java.util.Collection: boolean add(java.lang.Object)>($r7);

     label1:
        $z4 = virtualinvoke r2.<org.apache.commons.validator.util.Flags: boolean isOn(long)>(4L);
        if $z4 == 0 goto label2;

        $r8 = r0.<org.apache.commons.validator.CreditCardValidator: java.util.Collection cardTypes>;
        $r9 = new org.apache.commons.validator.CreditCardValidator$Mastercard;
        specialinvoke $r9.<org.apache.commons.validator.CreditCardValidator$Mastercard: void <init>(org.apache.commons.validator.CreditCardValidator$Mastercard)>(null);
        interfaceinvoke $r8.<java.util.Collection: boolean add(java.lang.Object)>($r9);

     label2:
        $z6 = virtualinvoke r2.<org.apache.commons.validator.util.Flags: boolean isOn(long)>(8L);
        if $z6 == 0 goto label3;

        $r10 = r0.<org.apache.commons.validator.CreditCardValidator: java.util.Collection cardTypes>;
        $r11 = new org.apache.commons.validator.CreditCardValidator$Discover;
        specialinvoke $r11.<org.apache.commons.validator.CreditCardValidator$Discover: void <init>(org.apache.commons.validator.CreditCardValidator$Discover)>(null);
        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r11);

     label3:
        return;
    }

    public boolean isValid(java.lang.String)
    {
        org.apache.commons.validator.CreditCardValidator r0;
        java.lang.String r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        org.apache.commons.validator.CreditCardValidator$CreditCardType r4;
        int $i0, $i1;
        boolean $z0, $z1, $z2;
        java.util.Collection $r5;

        r0 := @this: org.apache.commons.validator.CreditCardValidator;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 < 13 goto label0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i1 <= 19 goto label1;

     label0:
        return 0;

     label1:
        $z0 = virtualinvoke r0.<org.apache.commons.validator.CreditCardValidator: boolean luhnCheck(java.lang.String)>(r1);
        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r5 = r0.<org.apache.commons.validator.CreditCardValidator: java.util.Collection cardTypes>;
        r2 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();
        goto label4;

     label3:
        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();
        r4 = (org.apache.commons.validator.CreditCardValidator$CreditCardType) r3;
        $z1 = interfaceinvoke r4.<org.apache.commons.validator.CreditCardValidator$CreditCardType: boolean matches(java.lang.String)>(r1);
        if $z1 == 0 goto label4;

        return 1;

     label4:
        $z2 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();
        if $z2 != 0 goto label3;

        return 0;
    }

    public void addAllowedCardType(org.apache.commons.validator.CreditCardValidator$CreditCardType)
    {
        org.apache.commons.validator.CreditCardValidator r0;
        org.apache.commons.validator.CreditCardValidator$CreditCardType r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.commons.validator.CreditCardValidator;
        r1 := @parameter0: org.apache.commons.validator.CreditCardValidator$CreditCardType;
        $r2 = r0.<org.apache.commons.validator.CreditCardValidator: java.util.Collection cardTypes>;
        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);
        return;
    }

    protected boolean luhnCheck(java.lang.String)
    {
        org.apache.commons.validator.CreditCardValidator r0;
        java.lang.String r1, $r4, $r5;
        int i0, i1, i3, i5, $i6, $i7;
        long l2, $l8, $l10;
        boolean z0, $z1;
        java.lang.NumberFormatException r2, $r6;
        java.lang.StringBuilder $r3;
        char $c4;
        byte $b9, $b11;

        r0 := @this: org.apache.commons.validator.CreditCardValidator;
        r1 := @parameter0: java.lang.String;
        i0 = virtualinvoke r1.<java.lang.String: int length()>();
        i1 = i0 & 1;
        l2 = 0L;
        i3 = 0;
        goto label6;

     label0:
        z0 = 0;

     label1:
        $r3 = new java.lang.StringBuilder;
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c4);
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();
        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;
        r2 = $r6;
        return 0;

     label4:
        $i6 = i3 & 1;
        $i7 = $i6 ^ i1;
        if $i7 != 0 goto label5;

        i5 = i5 * 2;
        if i5 <= 9 goto label5;

        i5 = i5 + -9;

     label5:
        $l8 = (long) i5;
        l2 = l2 + $l8;
        i3 = i3 + 1;

     label6:
        if i3 < i0 goto label0;

        $b9 = l2 cmp 0L;
        if $b9 != 0 goto label7;

        $z1 = 0;
        goto label9;

     label7:
        $l10 = l2 % 10L;
        $b11 = $l10 cmp 0L;
        if $b11 != 0 goto label8;

        $z1 = 1;
        goto label9;

     label8:
        $z1 = 0;

     label9:
        return $z1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }
}
