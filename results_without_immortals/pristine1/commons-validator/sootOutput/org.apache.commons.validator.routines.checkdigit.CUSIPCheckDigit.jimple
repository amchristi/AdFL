public final class org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit extends org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit
{
    private static final long serialVersionUID;
    public static final org.apache.commons.validator.routines.checkdigit.CheckDigit CUSIP_CHECK_DIGIT;
    private static final int[] POSITION_WEIGHT;

    static void <clinit>()
    {
        org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit $r0;
        int[] $r1;

        $r0 = new org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit;
        specialinvoke $r0.<org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit: void <init>()>();
        <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit: org.apache.commons.validator.routines.checkdigit.CheckDigit CUSIP_CHECK_DIGIT> = $r0;
        $r1 = newarray (int)[2];
        $r1[0] = 2;
        $r1[1] = 1;
        <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit: int[] POSITION_WEIGHT> = $r1;
        return;
    }

    public void <init>()
    {
        org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit r0;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit;
        specialinvoke r0.<org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit: void <init>(int)>(10);
        return;
    }

    protected int toInt(char, int, int) throws org.apache.commons.validator.routines.checkdigit.CheckDigitException
    {
        org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit r0;
        char c0;
        int i1, i2, i3;
        byte b4, $b5;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        org.apache.commons.validator.routines.checkdigit.CheckDigitException $r2;
        java.lang.String $r10;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit;
        c0 := @parameter0: char;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 = staticinvoke <java.lang.Character: int getNumericValue(char)>(c0);
        if i2 != 1 goto label0;

        $b5 = 9;
        goto label1;

     label0:
        $b5 = 35;

     label1:
        b4 = $b5;
        if i3 < 0 goto label2;

        if i3 <= b4 goto label3;

     label2:
        $r2 = new org.apache.commons.validator.routines.checkdigit.CheckDigitException;
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid Character[");
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] = \'");
        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' out of range 0 to ");
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(b4);
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        specialinvoke $r2.<org.apache.commons.validator.routines.checkdigit.CheckDigitException: void <init>(java.lang.String)>($r10);
        throw $r2;

     label3:
        return i3;
    }

    protected int weightedValue(int, int, int)
    {
        org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        int[] $r1;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit;
        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        $r1 = <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit: int[] POSITION_WEIGHT>;
        $i5 = i2 % 2;
        i3 = $r1[$i5];
        i4 = i0 * i3;
        $i6 = staticinvoke <org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit: int sumDigits(int)>(i4);
        return $i6;
    }
}
