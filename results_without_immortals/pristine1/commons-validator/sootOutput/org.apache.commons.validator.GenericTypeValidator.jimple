public class org.apache.commons.validator.GenericTypeValidator extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final org.apache.commons.logging.Log LOG;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "org/apache/commons/validator/GenericTypeValidator");
        <org.apache.commons.validator.GenericTypeValidator: org.apache.commons.logging.Log LOG> = $r0;
        return;
    }

    public void <init>()
    {
        org.apache.commons.validator.GenericTypeValidator r0;

        r0 := @this: org.apache.commons.validator.GenericTypeValidator;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.Byte formatByte(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException r1, $r3;
        java.lang.Byte $r2;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = new java.lang.Byte;
        specialinvoke $r2.<java.lang.Byte: void <init>(java.lang.String)>(r0);

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public static java.lang.Byte formatByte(java.lang.String, java.util.Locale)
    {
        java.lang.String r0;
        java.util.Locale r1, $r6;
        java.lang.Byte r2, $r8;
        null_type n0;
        java.text.ParsePosition r3, $r7;
        java.lang.Number r4;
        java.text.NumberFormat r5;
        int $i0, $i1, $i2;
        double $d0, $d1;
        byte $b3, $b4, $b5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Locale;
        r2 = null;
        if r0 == null goto label2;

        n0 = null;
        if r1 == null goto label0;

        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>(r1);
        goto label1;

     label0:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>($r6);

     label1:
        virtualinvoke r5.<java.text.NumberFormat: void setParseIntegerOnly(boolean)>(1);
        $r7 = new java.text.ParsePosition;
        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);
        r3 = $r7;
        r4 = virtualinvoke r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r0, r3);
        $i0 = virtualinvoke r3.<java.text.ParsePosition: int getErrorIndex()>();
        if $i0 != -1 goto label2;

        $i1 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 != $i2 goto label2;

        $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b3 = $d0 cmpl -128.0;
        if $b3 < 0 goto label2;

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b4 = $d1 cmpg 127.0;
        if $b4 > 0 goto label2;

        $r8 = new java.lang.Byte;
        $b5 = virtualinvoke r4.<java.lang.Number: byte byteValue()>();
        specialinvoke $r8.<java.lang.Byte: void <init>(byte)>($b5);
        r2 = $r8;

     label2:
        return r2;
    }

    public static java.lang.Short formatShort(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException r1, $r3;
        java.lang.Short $r2;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = new java.lang.Short;
        specialinvoke $r2.<java.lang.Short: void <init>(java.lang.String)>(r0);

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public static java.lang.Short formatShort(java.lang.String, java.util.Locale)
    {
        java.lang.String r0;
        java.util.Locale r1, $r6;
        java.lang.Short r2, $r8;
        null_type n0;
        java.text.ParsePosition r3, $r7;
        java.lang.Number r4;
        java.text.NumberFormat r5;
        int $i0, $i1, $i2;
        double $d0, $d1;
        byte $b3, $b4;
        short $s5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Locale;
        r2 = null;
        if r0 == null goto label2;

        n0 = null;
        if r1 == null goto label0;

        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>(r1);
        goto label1;

     label0:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>($r6);

     label1:
        virtualinvoke r5.<java.text.NumberFormat: void setParseIntegerOnly(boolean)>(1);
        $r7 = new java.text.ParsePosition;
        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);
        r3 = $r7;
        r4 = virtualinvoke r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r0, r3);
        $i0 = virtualinvoke r3.<java.text.ParsePosition: int getErrorIndex()>();
        if $i0 != -1 goto label2;

        $i1 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 != $i2 goto label2;

        $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b3 = $d0 cmpl -32768.0;
        if $b3 < 0 goto label2;

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b4 = $d1 cmpg 32767.0;
        if $b4 > 0 goto label2;

        $r8 = new java.lang.Short;
        $s5 = virtualinvoke r4.<java.lang.Number: short shortValue()>();
        specialinvoke $r8.<java.lang.Short: void <init>(short)>($s5);
        r2 = $r8;

     label2:
        return r2;
    }

    public static java.lang.Integer formatInt(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException r1, $r3;
        java.lang.Integer $r2;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = new java.lang.Integer;
        specialinvoke $r2.<java.lang.Integer: void <init>(java.lang.String)>(r0);

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public static java.lang.Integer formatInt(java.lang.String, java.util.Locale)
    {
        java.lang.String r0;
        java.util.Locale r1, $r6;
        java.lang.Integer r2, $r8;
        null_type n0;
        java.text.ParsePosition r3, $r7;
        java.lang.Number r4;
        java.text.NumberFormat r5;
        int $i0, $i1, $i2, $i5;
        double $d0, $d1;
        byte $b3, $b4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Locale;
        r2 = null;
        if r0 == null goto label2;

        n0 = null;
        if r1 == null goto label0;

        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>(r1);
        goto label1;

     label0:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>($r6);

     label1:
        virtualinvoke r5.<java.text.NumberFormat: void setParseIntegerOnly(boolean)>(1);
        $r7 = new java.text.ParsePosition;
        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);
        r3 = $r7;
        r4 = virtualinvoke r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r0, r3);
        $i0 = virtualinvoke r3.<java.text.ParsePosition: int getErrorIndex()>();
        if $i0 != -1 goto label2;

        $i1 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 != $i2 goto label2;

        $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b3 = $d0 cmpl -2.147483648E9;
        if $b3 < 0 goto label2;

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b4 = $d1 cmpg 2.147483647E9;
        if $b4 > 0 goto label2;

        $r8 = new java.lang.Integer;
        $i5 = virtualinvoke r4.<java.lang.Number: int intValue()>();
        specialinvoke $r8.<java.lang.Integer: void <init>(int)>($i5);
        r2 = $r8;

     label2:
        return r2;
    }

    public static java.lang.Long formatLong(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException r1, $r3;
        java.lang.Long $r2;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = new java.lang.Long;
        specialinvoke $r2.<java.lang.Long: void <init>(java.lang.String)>(r0);

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public static java.lang.Long formatLong(java.lang.String, java.util.Locale)
    {
        java.lang.String r0;
        java.util.Locale r1, $r6;
        java.lang.Long r2, $r8;
        null_type n0;
        java.text.ParsePosition r3, $r7;
        java.lang.Number r4;
        java.text.NumberFormat r5;
        int $i0, $i1, $i2;
        double $d0, $d1;
        byte $b3, $b4;
        long $l5;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Locale;
        r2 = null;
        if r0 == null goto label2;

        n0 = null;
        if r1 == null goto label0;

        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>(r1);
        goto label1;

     label0:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>($r6);

     label1:
        virtualinvoke r5.<java.text.NumberFormat: void setParseIntegerOnly(boolean)>(1);
        $r7 = new java.text.ParsePosition;
        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);
        r3 = $r7;
        r4 = virtualinvoke r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r0, r3);
        $i0 = virtualinvoke r3.<java.text.ParsePosition: int getErrorIndex()>();
        if $i0 != -1 goto label2;

        $i1 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 != $i2 goto label2;

        $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b3 = $d0 cmpl -9.223372036854776E18;
        if $b3 < 0 goto label2;

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b4 = $d1 cmpg 9.223372036854776E18;
        if $b4 > 0 goto label2;

        $r8 = new java.lang.Long;
        $l5 = virtualinvoke r4.<java.lang.Number: long longValue()>();
        specialinvoke $r8.<java.lang.Long: void <init>(long)>($l5);
        r2 = $r8;

     label2:
        return r2;
    }

    public static java.lang.Float formatFloat(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException r1, $r3;
        java.lang.Float $r2;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = new java.lang.Float;
        specialinvoke $r2.<java.lang.Float: void <init>(java.lang.String)>(r0);

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public static java.lang.Float formatFloat(java.lang.String, java.util.Locale)
    {
        java.lang.String r0;
        java.util.Locale r1, $r6;
        java.lang.Float r2, $r8;
        null_type n0;
        java.text.ParsePosition r3, $r7;
        java.lang.Number r4;
        java.text.NumberFormat r5;
        int $i0, $i1, $i2;
        double $d0, $d1;
        byte $b3, $b4;
        float $f0;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Locale;
        r2 = null;
        if r0 == null goto label2;

        n0 = null;
        if r1 == null goto label0;

        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>(r1);
        goto label1;

     label0:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r6);

     label1:
        $r7 = new java.text.ParsePosition;
        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);
        r3 = $r7;
        r4 = virtualinvoke r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r0, r3);
        $i0 = virtualinvoke r3.<java.text.ParsePosition: int getErrorIndex()>();
        if $i0 != -1 goto label2;

        $i1 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 != $i2 goto label2;

        $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b3 = $d0 cmpl -3.4028234663852886E38;
        if $b3 < 0 goto label2;

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b4 = $d1 cmpg 3.4028234663852886E38;
        if $b4 > 0 goto label2;

        $r8 = new java.lang.Float;
        $f0 = virtualinvoke r4.<java.lang.Number: float floatValue()>();
        specialinvoke $r8.<java.lang.Float: void <init>(float)>($f0);
        r2 = $r8;

     label2:
        return r2;
    }

    public static java.lang.Double formatDouble(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException r1, $r3;
        java.lang.Double $r2;

        r0 := @parameter0: java.lang.String;
        if r0 != null goto label0;

        return null;

     label0:
        $r2 = new java.lang.Double;
        specialinvoke $r2.<java.lang.Double: void <init>(java.lang.String)>(r0);

     label1:
        return $r2;

     label2:
        $r3 := @caughtexception;
        r1 = $r3;
        return null;

        catch java.lang.NumberFormatException from label0 to label1 with label2;
    }

    public static java.lang.Double formatDouble(java.lang.String, java.util.Locale)
    {
        java.lang.String r0;
        java.util.Locale r1, $r6;
        java.lang.Double r2, $r8;
        null_type n0;
        java.text.ParsePosition r3, $r7;
        java.lang.Number r4;
        java.text.NumberFormat r5;
        int $i0, $i1, $i2;
        double $d0, $d1, $d2;
        byte $b3, $b4;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Locale;
        r2 = null;
        if r0 == null goto label2;

        n0 = null;
        if r1 == null goto label0;

        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>(r1);
        goto label1;

     label0:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r5 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>($r6);

     label1:
        $r7 = new java.text.ParsePosition;
        specialinvoke $r7.<java.text.ParsePosition: void <init>(int)>(0);
        r3 = $r7;
        r4 = virtualinvoke r5.<java.text.NumberFormat: java.lang.Number parse(java.lang.String,java.text.ParsePosition)>(r0, r3);
        $i0 = virtualinvoke r3.<java.text.ParsePosition: int getErrorIndex()>();
        if $i0 != -1 goto label2;

        $i1 = virtualinvoke r3.<java.text.ParsePosition: int getIndex()>();
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 != $i2 goto label2;

        $d0 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b3 = $d0 cmpl -1.7976931348623157E308;
        if $b3 < 0 goto label2;

        $d1 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        $b4 = $d1 cmpg 1.7976931348623157E308;
        if $b4 > 0 goto label2;

        $r8 = new java.lang.Double;
        $d2 = virtualinvoke r4.<java.lang.Number: double doubleValue()>();
        specialinvoke $r8.<java.lang.Double: void <init>(double)>($d2);
        r2 = $r8;

     label2:
        return r2;
    }

    public static java.util.Date formatDate(java.lang.String, java.util.Locale)
    {
        java.lang.String r0, $r20;
        java.util.Locale r1, $r6, $r7;
        java.util.Date r2;
        null_type n0, n1;
        java.text.ParseException r3, $r8, $r9, r10;
        java.text.DateFormat r4, r5;
        org.apache.commons.logging.Log $r11, $r12;
        boolean $z0;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.util.Locale;
        r2 = null;
        if r0 != null goto label0;

        return null;

     label0:
        n0 = null;
        n1 = null;
        if r1 == null goto label1;

        r4 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(3, r1);
        r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(2, r1);
        goto label2;

     label1:
        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r4 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(3, $r6);
        $r7 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
        r5 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(2, $r7);

     label2:
        virtualinvoke r4.<java.text.DateFormat: void setLenient(boolean)>(0);
        virtualinvoke r5.<java.text.DateFormat: void setLenient(boolean)>(0);

     label3:
        r2 = virtualinvoke r4.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r0);

     label4:
        goto label8;

     label5:
        $r8 := @caughtexception;
        r3 = $r8;
        r2 = virtualinvoke r5.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r0);

     label6:
        goto label8;

     label7:
        $r9 := @caughtexception;
        r10 = $r9;
        $r11 = <org.apache.commons.validator.GenericTypeValidator: org.apache.commons.logging.Log LOG>;
        $z0 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z0 == 0 goto label8;

        $r12 = <org.apache.commons.validator.GenericTypeValidator: org.apache.commons.logging.Log LOG>;
        $r13 = new java.lang.StringBuilder;
        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("Date parse failed value=[");
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("locale=[");
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r20);

     label8:
        return r2;

        catch java.text.ParseException from label3 to label4 with label5;
        catch java.text.ParseException from label0 to label6 with label7;
    }

    public static java.util.Date formatDate(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String r0, r1, $r19;
        boolean z0, $z1;
        java.util.Date r2;
        java.text.SimpleDateFormat r3, $r4;
        int $i0, $i1, $i2;
        java.text.ParseException $r5, r6;
        org.apache.commons.logging.Log $r7, $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @parameter0: java.lang.String;
        r1 := @parameter1: java.lang.String;
        z0 := @parameter2: boolean;
        r2 = null;
        if r0 == null goto label0;

        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 != 0 goto label1;

     label0:
        return null;

     label1:
        $r4 = new java.text.SimpleDateFormat;
        specialinvoke $r4.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(r1);
        r3 = $r4;
        virtualinvoke r3.<java.text.SimpleDateFormat: void setLenient(boolean)>(0);
        r2 = virtualinvoke r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>(r0);
        if z0 == 0 goto label4;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();
        if $i1 == $i2 goto label4;

        r2 = null;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;
        r6 = $r5;
        $r7 = <org.apache.commons.validator.GenericTypeValidator: org.apache.commons.logging.Log LOG>;
        $z1 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
        if $z1 == 0 goto label4;

        $r8 = <org.apache.commons.validator.GenericTypeValidator: org.apache.commons.logging.Log LOG>;
        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Date parse failed value=[");
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pattern=[");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], ");
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("strict=[");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r19);

     label4:
        return r2;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public static java.lang.Long formatCreditCard(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        java.lang.Long $r1;

        r0 := @parameter0: java.lang.String;
        $z0 = staticinvoke <org.apache.commons.validator.GenericValidator: boolean isCreditCard(java.lang.String)>(r0);
        if $z0 == 0 goto label0;

        $r1 = new java.lang.Long;
        specialinvoke $r1.<java.lang.Long: void <init>(java.lang.String)>(r0);
        goto label1;

     label0:
        $r1 = null;

     label1:
        return $r1;
    }
}
