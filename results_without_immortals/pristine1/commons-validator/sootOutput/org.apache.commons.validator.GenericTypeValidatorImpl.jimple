public class org.apache.commons.validator.GenericTypeValidatorImpl extends java.lang.Object
{

    public void <init>()
    {
        org.apache.commons.validator.GenericTypeValidatorImpl r0;

        r0 := @this: org.apache.commons.validator.GenericTypeValidatorImpl;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        return;
    }

    public static java.lang.Byte validateByte(java.lang.Object, org.apache.commons.validator.Field)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.lang.String r2, $r3;
        java.lang.Byte $r4;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        $r3 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r2 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r3);
        $r4 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Byte formatByte(java.lang.String)>(r2);
        return $r4;
    }

    public static java.lang.Byte validateByte(java.lang.Object, org.apache.commons.validator.Field, java.util.Locale)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.util.Locale r2;
        java.lang.String r3, $r4;
        java.lang.Byte $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        r2 := @parameter2: java.util.Locale;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r3 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        $r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Byte formatByte(java.lang.String,java.util.Locale)>(r3, r2);
        return $r5;
    }

    public static java.lang.Short validateShort(java.lang.Object, org.apache.commons.validator.Field)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.lang.String r2, $r3;
        java.lang.Short $r4;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        $r3 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r2 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r3);
        $r4 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Short formatShort(java.lang.String)>(r2);
        return $r4;
    }

    public static java.lang.Short validateShort(java.lang.Object, org.apache.commons.validator.Field, java.util.Locale)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.util.Locale r2;
        java.lang.String r3, $r4;
        java.lang.Short $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        r2 := @parameter2: java.util.Locale;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r3 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        $r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Short formatShort(java.lang.String,java.util.Locale)>(r3, r2);
        return $r5;
    }

    public static java.lang.Integer validateInt(java.lang.Object, org.apache.commons.validator.Field)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.lang.String r2, $r3;
        java.lang.Integer $r4;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        $r3 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r2 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r3);
        $r4 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Integer formatInt(java.lang.String)>(r2);
        return $r4;
    }

    public static java.lang.Integer validateInt(java.lang.Object, org.apache.commons.validator.Field, java.util.Locale)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.util.Locale r2;
        java.lang.String r3, $r4;
        java.lang.Integer $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        r2 := @parameter2: java.util.Locale;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r3 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        $r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Integer formatInt(java.lang.String,java.util.Locale)>(r3, r2);
        return $r5;
    }

    public static java.lang.Long validateLong(java.lang.Object, org.apache.commons.validator.Field)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.lang.String r2, $r3;
        java.lang.Long $r4;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        $r3 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r2 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r3);
        $r4 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Long formatLong(java.lang.String)>(r2);
        return $r4;
    }

    public static java.lang.Long validateLong(java.lang.Object, org.apache.commons.validator.Field, java.util.Locale)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.util.Locale r2;
        java.lang.String r3, $r4;
        java.lang.Long $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        r2 := @parameter2: java.util.Locale;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r3 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        $r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Long formatLong(java.lang.String,java.util.Locale)>(r3, r2);
        return $r5;
    }

    public static java.lang.Float validateFloat(java.lang.Object, org.apache.commons.validator.Field)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.lang.String r2, $r3;
        java.lang.Float $r4;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        $r3 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r2 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r3);
        $r4 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Float formatFloat(java.lang.String)>(r2);
        return $r4;
    }

    public static java.lang.Float validateFloat(java.lang.Object, org.apache.commons.validator.Field, java.util.Locale)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.util.Locale r2;
        java.lang.String r3, $r4;
        java.lang.Float $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        r2 := @parameter2: java.util.Locale;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r3 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        $r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Float formatFloat(java.lang.String,java.util.Locale)>(r3, r2);
        return $r5;
    }

    public static java.lang.Double validateDouble(java.lang.Object, org.apache.commons.validator.Field)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.lang.String r2, $r3;
        java.lang.Double $r4;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        $r3 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r2 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r3);
        $r4 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Double formatDouble(java.lang.String)>(r2);
        return $r4;
    }

    public static java.lang.Double validateDouble(java.lang.Object, org.apache.commons.validator.Field, java.util.Locale)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.util.Locale r2;
        java.lang.String r3, $r4;
        java.lang.Double $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        r2 := @parameter2: java.util.Locale;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r3 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        $r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.lang.Double formatDouble(java.lang.String,java.util.Locale)>(r3, r2);
        return $r5;
    }

    public static java.util.Date validateDate(java.lang.Object, org.apache.commons.validator.Field, java.util.Locale)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.util.Locale r2;
        java.lang.String r3, $r4;
        java.util.Date $r5;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        r2 := @parameter2: java.util.Locale;
        $r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r3 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r4);
        $r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.util.Date formatDate(java.lang.String,java.util.Locale)>(r3, r2);
        return $r5;
    }

    public static java.util.Date validateDate(java.lang.Object, org.apache.commons.validator.Field)
    {
        java.lang.Object r0;
        org.apache.commons.validator.Field r1;
        java.lang.String r2, r3, r4, $r6;
        java.util.Date r5;
        int $i0, $i1;

        r0 := @parameter0: java.lang.Object;
        r1 := @parameter1: org.apache.commons.validator.Field;
        $r6 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getProperty()>();
        r2 = staticinvoke <org.apache.commons.validator.util.ValidatorUtils: java.lang.String getValueAsString(java.lang.Object,java.lang.String)>(r0, $r6);
        r3 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getVarValue(java.lang.String)>("datePattern");
        r4 = virtualinvoke r1.<org.apache.commons.validator.Field: java.lang.String getVarValue(java.lang.String)>("datePatternStrict");
        r5 = null;
        if r3 == null goto label0;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();
        if $i0 <= 0 goto label0;

        r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.util.Date formatDate(java.lang.String,java.lang.String,boolean)>(r2, r3, 0);
        goto label1;

     label0:
        if r4 == null goto label1;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();
        if $i1 <= 0 goto label1;

        r5 = staticinvoke <org.apache.commons.validator.GenericTypeValidator: java.util.Date formatDate(java.lang.String,java.lang.String,boolean)>(r2, r4, 1);

     label1:
        return r5;
    }
}
