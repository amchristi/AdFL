public abstract class org.apache.commons.validator.routines.AbstractNumberValidatorTest extends junit.framework.TestCase
{
    protected org.apache.commons.validator.routines.AbstractNumberValidator validator;
    protected org.apache.commons.validator.routines.AbstractNumberValidator strictValidator;
    protected java.lang.Number max;
    protected java.lang.Number maxPlusOne;
    protected java.lang.Number min;
    protected java.lang.Number minMinusOne;
    protected java.lang.String[] invalid;
    protected java.lang.String[] valid;
    protected java.lang.Number[] validCompare;
    protected java.lang.String[] invalidStrict;
    protected java.lang.String[] validStrict;
    protected java.lang.Number[] validStrictCompare;
    protected java.lang.String testPattern;
    protected java.lang.Number testNumber;
    protected java.lang.Number testZero;
    protected java.lang.String testStringUS;
    protected java.lang.String testStringDE;
    protected java.lang.String localeValue;
    protected java.lang.String localePattern;
    protected java.util.Locale testLocale;
    protected java.lang.Number localeExpected;

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<junit.framework.TestCase: void <init>(java.lang.String)>(r1);
        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        java.util.Locale $r1;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        specialinvoke r0.<junit.framework.TestCase: void setUp()>();
        $r1 = <java.util.Locale: java.util.Locale US>;
        staticinvoke <java.util.Locale: void setDefault(java.util.Locale)>($r1);
        return;
    }

    protected void tearDown() throws java.lang.Exception
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        specialinvoke r0.<junit.framework.TestCase: void tearDown()>();
        r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator> = null;
        r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator> = null;
        return;
    }

    public void testFormatType()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        org.apache.commons.validator.routines.AbstractNumberValidator $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        $r1 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $i0 = virtualinvoke $r1.<org.apache.commons.validator.routines.AbstractNumberValidator: int getFormatType()>();
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,int,int)>("Format Type A", 0, $i0);
        $r2 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $i1 = virtualinvoke $r2.<org.apache.commons.validator.routines.AbstractNumberValidator: int getFormatType()>();
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,int,int)>("Format Type B", 0, $i1);
        return;
    }

    public void testValidateMinMax()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        java.text.DecimalFormat $r1, r2;
        java.lang.Number $r3, $r4, $r6, $r10, $r13, $r15, $r19;
        org.apache.commons.validator.routines.AbstractNumberValidator $r5, $r9, $r14, $r18;
        java.lang.String $r7, $r11, $r16, $r20;
        java.lang.Object $r8, $r12, $r17, $r21;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        $r1 = new java.text.DecimalFormat;
        specialinvoke $r1.<java.text.DecimalFormat: void <init>(java.lang.String)>("#");
        r2 = $r1;
        $r3 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number max>;
        if $r3 == null goto label0;

        $r4 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number max>;
        $r5 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r6 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number max>;
        $r7 = virtualinvoke r2.<java.text.DecimalFormat: java.lang.String format(java.lang.Object)>($r6);
        $r8 = virtualinvoke $r5.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r7, "#", null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Test Max", $r4, $r8);
        $r9 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r10 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number maxPlusOne>;
        $r11 = virtualinvoke r2.<java.text.DecimalFormat: java.lang.String format(java.lang.Object)>($r10);
        $r12 = virtualinvoke $r9.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r11, "#", null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("Test Max + 1", $r12);
        $r13 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number min>;
        $r14 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r15 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number min>;
        $r16 = virtualinvoke r2.<java.text.DecimalFormat: java.lang.String format(java.lang.Object)>($r15);
        $r17 = virtualinvoke $r14.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r16, "#", null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Test Min", $r13, $r17);
        $r18 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r19 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number minMinusOne>;
        $r20 = virtualinvoke r2.<java.text.DecimalFormat: java.lang.String format(java.lang.Object)>($r19);
        $r21 = virtualinvoke $r18.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r20, "#", null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("Test min - 1", $r21);

     label0:
        return;
    }

    public void testInvalidStrict()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        int i0, $i1;
        java.lang.String r1, $r7, $r12, $r15, $r19, $r22, $r26, $r29, $r30, $r34, $r37, $r38;
        java.util.Locale $r2, $r23;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r17, $r18, $r24, $r25, $r32, $r33;
        java.lang.String[] $r6, $r14, $r21, $r28, $r36, $r39;
        org.apache.commons.validator.routines.AbstractNumberValidator $r13, $r20, $r27, $r35;
        java.lang.Object $r16, $r31;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        i0 = 0;
        goto label1;

     label0:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("idx=[");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] value=[");
        $r6 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalidStrict>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("(A) ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r14 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalidStrict>;
        $r15 = $r14[i0];
        $r2 = <java.util.Locale: java.util.Locale US>;
        $r16 = virtualinvoke $r13.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r15, null, $r2);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>($r12, $r16);
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("(B) ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        $r20 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r21 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalidStrict>;
        $r22 = $r21[i0];
        $r23 = <java.util.Locale: java.util.Locale US>;
        $z0 = virtualinvoke $r20.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isValid(java.lang.String,java.lang.String,java.util.Locale)>($r22, null, $r23);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertFalse(java.lang.String,boolean)>($r19, $z0);
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("(C) ");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r28 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalidStrict>;
        $r29 = $r28[i0];
        $r30 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testPattern>;
        $r31 = virtualinvoke $r27.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r29, $r30, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>($r26, $r31);
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("(D) ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        $r35 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r36 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalidStrict>;
        $r37 = $r36[i0];
        $r38 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testPattern>;
        $z1 = virtualinvoke $r35.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isValid(java.lang.String,java.lang.String,java.util.Locale)>($r37, $r38, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertFalse(java.lang.String,boolean)>($r34, $z1);
        i0 = i0 + 1;

     label1:
        $r39 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalidStrict>;
        $i1 = lengthof $r39;
        if i0 < $i1 goto label0;

        return;
    }

    public void testInvalidNotStrict()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        int i0, $i1;
        java.lang.String r1, $r7, $r12, $r15, $r19, $r22, $r26, $r29, $r30, $r34, $r37, $r38;
        java.util.Locale $r2, $r23;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r17, $r18, $r24, $r25, $r32, $r33;
        java.lang.String[] $r6, $r14, $r21, $r28, $r36, $r39;
        org.apache.commons.validator.routines.AbstractNumberValidator $r13, $r20, $r27, $r35;
        java.lang.Object $r16, $r31;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        i0 = 0;
        goto label1;

     label0:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("idx=[");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] value=[");
        $r6 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalid>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("(A) ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r14 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalid>;
        $r15 = $r14[i0];
        $r2 = <java.util.Locale: java.util.Locale US>;
        $r16 = virtualinvoke $r13.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r15, null, $r2);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>($r12, $r16);
        $r17 = new java.lang.StringBuilder;
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("(B) ");
        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();
        $r20 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r21 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalid>;
        $r22 = $r21[i0];
        $r23 = <java.util.Locale: java.util.Locale US>;
        $z0 = virtualinvoke $r20.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isValid(java.lang.String,java.lang.String,java.util.Locale)>($r22, null, $r23);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertFalse(java.lang.String,boolean)>($r19, $z0);
        $r24 = new java.lang.StringBuilder;
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>("(C) ");
        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();
        $r27 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r28 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalid>;
        $r29 = $r28[i0];
        $r30 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testPattern>;
        $r31 = virtualinvoke $r27.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r29, $r30, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>($r26, $r31);
        $r32 = new java.lang.StringBuilder;
        specialinvoke $r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("(D) ");
        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
        $r35 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r36 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalid>;
        $r37 = $r36[i0];
        $r38 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testPattern>;
        $z1 = virtualinvoke $r35.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isValid(java.lang.String,java.lang.String,java.util.Locale)>($r37, $r38, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertFalse(java.lang.String,boolean)>($r34, $z1);
        i0 = i0 + 1;

     label1:
        $r39 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] invalid>;
        $i1 = lengthof $r39;
        if i0 < $i1 goto label0;

        return;
    }

    public void testValidStrict()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        int i0, $i1;
        java.lang.String r1, $r12, $r17, $r21, $r24, $r28, $r33, $r34, $r38, $r41, $r42;
        java.util.Locale $r2, $r25;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r19, $r20, $r26, $r27, $r36, $r37;
        java.lang.Number[] $r6, $r13, $r29;
        java.lang.Number $r7, $r14, $r30;
        org.apache.commons.validator.routines.AbstractNumberValidator $r15, $r22, $r31, $r39;
        java.lang.String[] $r16, $r23, $r32, $r40, $r43;
        java.lang.Object $r18, $r35;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        i0 = 0;
        goto label1;

     label0:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("idx=[");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] value=[");
        $r6 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number[] validStrictCompare>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("(A) ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number[] validStrictCompare>;
        $r14 = $r13[i0];
        $r15 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r16 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] validStrict>;
        $r17 = $r16[i0];
        $r2 = <java.util.Locale: java.util.Locale US>;
        $r18 = virtualinvoke $r15.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r17, null, $r2);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r12, $r14, $r18);
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("(B) ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        $r22 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r23 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] validStrict>;
        $r24 = $r23[i0];
        $r25 = <java.util.Locale: java.util.Locale US>;
        $z0 = virtualinvoke $r22.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isValid(java.lang.String,java.lang.String,java.util.Locale)>($r24, null, $r25);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>($r21, $z0);
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("(C) ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        $r29 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number[] validStrictCompare>;
        $r30 = $r29[i0];
        $r31 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r32 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] validStrict>;
        $r33 = $r32[i0];
        $r34 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testPattern>;
        $r35 = virtualinvoke $r31.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r33, $r34, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r28, $r30, $r35);
        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>(java.lang.String)>("(D) ");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        $r39 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r40 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] validStrict>;
        $r41 = $r40[i0];
        $r42 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testPattern>;
        $z1 = virtualinvoke $r39.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isValid(java.lang.String,java.lang.String,java.util.Locale)>($r41, $r42, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>($r38, $z1);
        i0 = i0 + 1;

     label1:
        $r43 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] validStrict>;
        $i1 = lengthof $r43;
        if i0 < $i1 goto label0;

        return;
    }

    public void testValidNotStrict()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        int i0, $i1;
        java.lang.String r1, $r12, $r17, $r21, $r24, $r28, $r33, $r34, $r38, $r41, $r42;
        java.util.Locale $r2, $r25;
        java.lang.StringBuilder $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r19, $r20, $r26, $r27, $r36, $r37;
        java.lang.Number[] $r6, $r13, $r29;
        java.lang.Number $r7, $r14, $r30;
        org.apache.commons.validator.routines.AbstractNumberValidator $r15, $r22, $r31, $r39;
        java.lang.String[] $r16, $r23, $r32, $r40, $r43;
        java.lang.Object $r18, $r35;
        boolean $z0, $z1;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        i0 = 0;
        goto label1;

     label0:
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("idx=[");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] value=[");
        $r6 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number[] validCompare>;
        $r7 = $r6[i0];
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();
        $r10 = new java.lang.StringBuilder;
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("(A) ");
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();
        $r13 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number[] validCompare>;
        $r14 = $r13[i0];
        $r15 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r16 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] valid>;
        $r17 = $r16[i0];
        $r2 = <java.util.Locale: java.util.Locale US>;
        $r18 = virtualinvoke $r15.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r17, null, $r2);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r12, $r14, $r18);
        $r19 = new java.lang.StringBuilder;
        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("(B) ");
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
        $r22 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r23 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] valid>;
        $r24 = $r23[i0];
        $r25 = <java.util.Locale: java.util.Locale US>;
        $z0 = virtualinvoke $r22.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isValid(java.lang.String,java.lang.String,java.util.Locale)>($r24, null, $r25);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>($r21, $z0);
        $r26 = new java.lang.StringBuilder;
        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("(C) ");
        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();
        $r29 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number[] validCompare>;
        $r30 = $r29[i0];
        $r31 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r32 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] valid>;
        $r33 = $r32[i0];
        $r34 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testPattern>;
        $r35 = virtualinvoke $r31.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r33, $r34, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>($r28, $r30, $r35);
        $r36 = new java.lang.StringBuilder;
        specialinvoke $r36.<java.lang.StringBuilder: void <init>(java.lang.String)>("(D) ");
        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();
        $r39 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r40 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] valid>;
        $r41 = $r40[i0];
        $r42 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testPattern>;
        $z1 = virtualinvoke $r39.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isValid(java.lang.String,java.lang.String,java.util.Locale)>($r41, $r42, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>($r38, $z1);
        i0 = i0 + 1;

     label1:
        $r43 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String[] valid>;
        $i1 = lengthof $r43;
        if i0 < $i1 goto label0;

        return;
    }

    public void testValidateLocale()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        java.util.Locale $r1, $r8, $r13, $r17;
        java.lang.Number $r2, $r10, $r19;
        org.apache.commons.validator.routines.AbstractNumberValidator $r3, $r6, $r11, $r15, $r20, $r23;
        java.lang.String $r4, $r7, $r12, $r16, $r21, $r24;
        java.lang.Object $r5, $r9, $r14, $r18, $r22, $r25;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        $r2 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number testNumber>;
        $r3 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r4 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testStringUS>;
        $r1 = <java.util.Locale: java.util.Locale US>;
        $r5 = virtualinvoke $r3.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r4, null, $r1);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("US Locale, US Format", $r2, $r5);
        $r6 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r7 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testStringDE>;
        $r8 = <java.util.Locale: java.util.Locale US>;
        $r9 = virtualinvoke $r6.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r7, null, $r8);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("US Locale, DE Format", $r9);
        $r10 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number testNumber>;
        $r11 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r12 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testStringDE>;
        $r13 = <java.util.Locale: java.util.Locale GERMAN>;
        $r14 = virtualinvoke $r11.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r12, null, $r13);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("DE Locale, DE Format", $r10, $r14);
        $r15 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r16 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testStringUS>;
        $r17 = <java.util.Locale: java.util.Locale GERMAN>;
        $r18 = virtualinvoke $r15.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r16, null, $r17);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("DE Locale, US Format", $r18);
        $r19 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.Number testNumber>;
        $r20 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r21 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testStringUS>;
        $r22 = virtualinvoke $r20.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r21, null, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>("Default Locale, US Format", $r19, $r22);
        $r23 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r24 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: java.lang.String testStringDE>;
        $r25 = virtualinvoke $r23.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.Object parse(java.lang.String,java.lang.String,java.util.Locale)>($r24, null, null);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNull(java.lang.String,java.lang.Object)>("Default Locale, DE Format", $r25);
        return;
    }

    public void testFormat()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        java.math.BigDecimal $r1, r2;
        java.util.Locale $r3, $r7;
        org.apache.commons.validator.routines.AbstractNumberValidator $r4, $r6, $r9;
        java.lang.String $r5, $r8, $r10;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        $r1 = new java.math.BigDecimal;
        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>("1234.5");
        r2 = $r1;
        $r4 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r3 = <java.util.Locale: java.util.Locale US>;
        $r5 = virtualinvoke $r4.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.String format(java.lang.Object,java.util.Locale)>(r2, $r3);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("US Locale, US Format", "1,234.5", $r5);
        $r6 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r7 = <java.util.Locale: java.util.Locale GERMAN>;
        $r8 = virtualinvoke $r6.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.String format(java.lang.Object,java.util.Locale)>(r2, $r7);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("DE Locale, DE Format", "1.234,5", $r8);
        $r9 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $r10 = virtualinvoke $r9.<org.apache.commons.validator.routines.AbstractNumberValidator: java.lang.String format(java.lang.Object,java.lang.String)>(r2, "#,#0.00");
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("Pattern #,#0.00", "12,34.50", $r10);
        return;
    }

    public void testRangeMinMax()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        java.lang.Integer $r1, r2, r3, r4, r5, r6, r7, $r8, $r9, $r10, $r11, $r12;
        org.apache.commons.validator.routines.AbstractNumberValidator $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        $r1 = new java.lang.Integer;
        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(9);
        r2 = $r1;
        $r8 = new java.lang.Integer;
        specialinvoke $r8.<java.lang.Integer: void <init>(int)>(10);
        r3 = $r8;
        $r9 = new java.lang.Integer;
        specialinvoke $r9.<java.lang.Integer: void <init>(int)>(11);
        r4 = $r9;
        $r10 = new java.lang.Integer;
        specialinvoke $r10.<java.lang.Integer: void <init>(int)>(19);
        r5 = $r10;
        $r11 = new java.lang.Integer;
        specialinvoke $r11.<java.lang.Integer: void <init>(int)>(20);
        r6 = $r11;
        $r12 = new java.lang.Integer;
        specialinvoke $r12.<java.lang.Integer: void <init>(int)>(21);
        r7 = $r12;
        $r13 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z0 = virtualinvoke $r13.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isInRange(java.lang.Number,java.lang.Number,java.lang.Number)>(r2, r3, r6);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertFalse(java.lang.String,boolean)>("isInRange() < min", $z0);
        $r14 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z1 = virtualinvoke $r14.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isInRange(java.lang.Number,java.lang.Number,java.lang.Number)>(r3, r3, r6);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>("isInRange() = min", $z1);
        $r15 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z2 = virtualinvoke $r15.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isInRange(java.lang.Number,java.lang.Number,java.lang.Number)>(r4, r3, r6);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>("isInRange() in range", $z2);
        $r16 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z3 = virtualinvoke $r16.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isInRange(java.lang.Number,java.lang.Number,java.lang.Number)>(r6, r3, r6);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>("isInRange() = max", $z3);
        $r17 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z4 = virtualinvoke $r17.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean isInRange(java.lang.Number,java.lang.Number,java.lang.Number)>(r7, r3, r6);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertFalse(java.lang.String,boolean)>("isInRange() > max", $z4);
        $r18 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z5 = virtualinvoke $r18.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean minValue(java.lang.Number,java.lang.Number)>(r2, r3);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertFalse(java.lang.String,boolean)>("minValue() < min", $z5);
        $r19 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z6 = virtualinvoke $r19.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean minValue(java.lang.Number,java.lang.Number)>(r3, r3);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>("minValue() = min", $z6);
        $r20 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z7 = virtualinvoke $r20.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean minValue(java.lang.Number,java.lang.Number)>(r4, r3);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>("minValue() > min", $z7);
        $r21 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z8 = virtualinvoke $r21.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean maxValue(java.lang.Number,java.lang.Number)>(r5, r6);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>("maxValue() < max", $z8);
        $r22 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z9 = virtualinvoke $r22.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean maxValue(java.lang.Number,java.lang.Number)>(r6, r6);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertTrue(java.lang.String,boolean)>("maxValue() = max", $z9);
        $r23 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator strictValidator>;
        $z10 = virtualinvoke $r23.<org.apache.commons.validator.routines.AbstractNumberValidator: boolean maxValue(java.lang.Number,java.lang.Number)>(r7, r6);
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertFalse(java.lang.String,boolean)>("maxValue() > max", $z10);
        return;
    }

    public void testSerialization()
    {
        org.apache.commons.validator.routines.AbstractNumberValidatorTest r0;
        java.io.ByteArrayOutputStream $r1, r2;
        java.io.ObjectOutputStream r3, $r6;
        java.io.ByteArrayInputStream r4, $r19;
        java.io.ObjectInputStream r5, $r21;
        org.apache.commons.validator.routines.AbstractNumberValidator $r7, $r11, $r25;
        java.lang.Exception $r8, r9, $r22, r23;
        java.lang.StringBuilder $r10, $r15, $r16, $r24, $r29, $r30;
        java.lang.Class $r12, $r26;
        java.lang.String $r13, $r14, $r17, $r27, $r28, $r31;
        java.lang.Object r18;
        byte[] $r20;

        r0 := @this: org.apache.commons.validator.routines.AbstractNumberValidatorTest;
        $r1 = new java.io.ByteArrayOutputStream;
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();
        r2 = $r1;

     label0:
        $r6 = new java.io.ObjectOutputStream;
        specialinvoke $r6.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r2);
        r3 = $r6;
        $r7 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        virtualinvoke r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);
        virtualinvoke r3.<java.io.ObjectOutputStream: void flush()>();
        virtualinvoke r3.<java.io.ObjectOutputStream: void close()>();

     label1:
        goto label3;

     label2:
        $r8 := @caughtexception;
        r9 = $r8;
        $r10 = new java.lang.StringBuilder;
        $r11 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.Class getClass()>();
        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();
        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);
        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);
        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error during serialization: ");
        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);
        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void fail(java.lang.String)>($r17);

     label3:
        r18 = null;

     label4:
        $r19 = new java.io.ByteArrayInputStream;
        $r20 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
        specialinvoke $r19.<java.io.ByteArrayInputStream: void <init>(byte[])>($r20);
        r4 = $r19;
        $r21 = new java.io.ObjectInputStream;
        specialinvoke $r21.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r4);
        r5 = $r21;
        r18 = virtualinvoke r5.<java.io.ObjectInputStream: java.lang.Object readObject()>();
        virtualinvoke r4.<java.io.ByteArrayInputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r22 := @caughtexception;
        r23 = $r22;
        $r24 = new java.lang.StringBuilder;
        $r25 = r0.<org.apache.commons.validator.routines.AbstractNumberValidatorTest: org.apache.commons.validator.routines.AbstractNumberValidator validator>;
        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.Class getClass()>();
        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();
        $r28 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r27);
        specialinvoke $r24.<java.lang.StringBuilder: void <init>(java.lang.String)>($r28);
        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error during deserialization: ");
        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);
        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void fail(java.lang.String)>($r31);

     label7:
        staticinvoke <org.apache.commons.validator.routines.AbstractNumberValidatorTest: void assertNotNull(java.lang.Object)>(r18);
        return;

        catch java.lang.Exception from label0 to label1 with label2;
        catch java.lang.Exception from label4 to label5 with label6;
    }
}
