public class org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest extends org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest
{
    private static java.lang.String[] invalidCheckDigits;
    private static java.lang.String[] validCheckDigits;

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        $r0 = newarray (java.lang.String)[3];
        $r0[0] = "DUS0421CW";
        $r0[1] = "DUS0421CN";
        $r0[2] = "DUS0421CE";
        <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: java.lang.String[] invalidCheckDigits> = $r0;
        $r1 = newarray (java.lang.String)[1];
        $r1[0] = "DUS0421C5";
        <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: java.lang.String[] validCheckDigits> = $r1;
        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void <init>(java.lang.String)>(r1);
        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest r0;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest;
        specialinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void setUp()>();
        $r1 = <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigit: org.apache.commons.validator.routines.checkdigit.CheckDigit CUSIP_CHECK_DIGIT>;
        r0.<org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine> = $r1;
        $r2 = newarray (java.lang.String)[8];
        $r2[0] = "037833100";
        $r2[1] = "931142103";
        $r2[2] = "837649128";
        $r2[3] = "392690QT3";
        $r2[4] = "594918104";
        $r2[5] = "86770G101";
        $r2[6] = "Y8295N109";
        $r2[7] = "G8572F100";
        r0.<org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: java.lang.String[] valid> = $r2;
        $r3 = newarray (java.lang.String)[1];
        $r3[0] = "0378#3100";
        r0.<org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: java.lang.String[] invalid> = $r3;
        return;
    }

    public void testVALIDATOR_336_InvalidCheckDigits()
    {
        org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest r0;
        int i0, $i1;
        java.lang.String r1, $r5;
        java.lang.String[] $r2, $r7;
        java.lang.StringBuilder $r3, $r4;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r6;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest;
        i0 = 0;
        goto label1;

     label0:
        $r2 = <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: java.lang.String[] invalidCheckDigits>;
        r1 = $r2[i0];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Should fail: ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        $r6 = r0.<org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $z0 = interfaceinvoke $r6.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>(r1);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: void assertFalse(java.lang.String,boolean)>($r5, $z0);
        i0 = i0 + 1;

     label1:
        $r7 = <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: java.lang.String[] invalidCheckDigits>;
        $i1 = lengthof $r7;
        if i0 < $i1 goto label0;

        return;
    }

    public void testVALIDATOR_336_ValidCheckDigits()
    {
        org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest r0;
        int i0, $i1;
        java.lang.String r1, $r5;
        java.lang.String[] $r2, $r7;
        java.lang.StringBuilder $r3, $r4;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r6;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest;
        i0 = 0;
        goto label1;

     label0:
        $r2 = <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: java.lang.String[] validCheckDigits>;
        r1 = $r2[i0];
        $r3 = new java.lang.StringBuilder;
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Should fail: ");
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);
        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
        $r6 = r0.<org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $z0 = interfaceinvoke $r6.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>(r1);
        staticinvoke <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: void assertTrue(java.lang.String,boolean)>($r5, $z0);
        i0 = i0 + 1;

     label1:
        $r7 = <org.apache.commons.validator.routines.checkdigit.CUSIPCheckDigitTest: java.lang.String[] validCheckDigits>;
        $i1 = lengthof $r7;
        if i0 < $i1 goto label0;

        return;
    }
}
