public class org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest extends org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest
{

    public void <init>(java.lang.String)
    {
        org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest r0;
        java.lang.String r1;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest;
        r1 := @parameter0: java.lang.String;
        specialinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void <init>(java.lang.String)>(r1);
        r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: int checkDigitLth> = 2;
        return;
    }

    protected void setUp() throws java.lang.Exception
    {
        org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest r0;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r1;
        java.lang.String[] $r2, $r3;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest;
        specialinvoke r0.<org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest: void setUp()>();
        $r1 = <org.apache.commons.validator.routines.checkdigit.IBANCheckDigit: org.apache.commons.validator.routines.checkdigit.CheckDigit IBAN_CHECK_DIGIT>;
        r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine> = $r1;
        $r2 = newarray (java.lang.String)[40];
        $r2[0] = "AD1200012030200359100100";
        $r2[1] = "AT611904300234573201";
        $r2[2] = "BE62510007547061";
        $r2[3] = "BE68539007547034";
        $r2[4] = "CH3900700115201849173";
        $r2[5] = "CH9300762011623852957";
        $r2[6] = "CY17002001280000001200527600";
        $r2[7] = "CZ6508000000192000145399";
        $r2[8] = "DE89370400440532013000";
        $r2[9] = "DK5000400440116243";
        $r2[10] = "EE382200221020145685";
        $r2[11] = "ES8023100001180000012345";
        $r2[12] = "FI2112345600000785";
        $r2[13] = "FR1420041010050500013M02606";
        $r2[14] = "GB29NWBK60161331926819";
        $r2[15] = "GI75NWBK000000007099453";
        $r2[16] = "GR1601101250000000012300695";
        $r2[17] = "HU42117730161111101800000000";
        $r2[18] = "IE29AIBK93115212345678";
        $r2[19] = "IS140159260076545510730339";
        $r2[20] = "IT60X0542811101000000123456";
        $r2[21] = "LT121000011101001000";
        $r2[22] = "LU280019400644750000";
        $r2[23] = "LV80BANK0000435195001";
        $r2[24] = "MT84MALT011000012345MTLCAST001S";
        $r2[25] = "NL39RABO0300065264";
        $r2[26] = "NL91ABNA0417164300";
        $r2[27] = "NO9386011117947";
        $r2[28] = "PL27114020040000300201355387";
        $r2[29] = "PL60102010260000042270201111";
        $r2[30] = "PT50000201231234567890154";
        $r2[31] = "SE3550000000054910000003";
        $r2[32] = "SI56191000000123438";
        $r2[33] = "SK3112000000198742637541";
        $r2[34] = "AA0200000000053";
        $r2[35] = "AA9700000000089";
        $r2[36] = "AA9800000000071";
        $r2[37] = "ZZ02ZZZZZZZZZZZZZZZZZZZZZZZZZ04";
        $r2[38] = "ZZ97ZZZZZZZZZZZZZZZZZZZZZZZZZ40";
        $r2[39] = "ZZ98ZZZZZZZZZZZZZZZZZZZZZZZZZ22";
        r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: java.lang.String[] valid> = $r2;
        $r3 = newarray (java.lang.String)[4];
        $r3[0] = "510007+47061BE63";
        $r3[1] = "IE01AIBK93118702569045";
        $r3[2] = "AA0000000000089";
        $r3[3] = "AA9900000000053";
        r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: java.lang.String[] invalid> = $r3;
        r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: java.lang.String zeroSum> = null;
        r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: java.lang.String missingMessage> = "Invalid Code length=0";
        return;
    }

    public void testZeroSum()
    {
        org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest r0;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest;
        return;
    }

    protected java.lang.String[] createInvalidCodes(java.lang.String[])
    {
        org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest r0;
        java.lang.String[] r1, $r21, $r23;
        java.util.ArrayList $r2, r3;
        int i0, i1, $i2, $i3;
        java.lang.String r4, r5, r6, $r7, $r8, $r11, $r15, $r16, $r18, $r20;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r17, $r19;
        boolean $z0;
        java.lang.Object[] $r22;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest;
        r1 := @parameter0: java.lang.String[];
        $r2 = new java.util.ArrayList;
        specialinvoke $r2.<java.util.ArrayList: void <init>()>();
        r3 = $r2;
        i0 = 0;
        goto label6;

     label0:
        $r7 = r1[i0];
        r4 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: java.lang.String removeCheckDigit(java.lang.String)>($r7);
        $r8 = r1[i0];
        r5 = virtualinvoke r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: java.lang.String checkDigit(java.lang.String)>($r8);
        i1 = 2;
        goto label5;

     label1:
        if i1 <= 9 goto label2;

        $r9 = new java.lang.StringBuilder;
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();
        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
        goto label3;

     label2:
        $r12 = new java.lang.StringBuilder;
        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("0");
        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);
        $r11 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r6 = $r11;
        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r5);
        if $z0 != 0 goto label4;

        $r14 = new java.lang.StringBuilder;
        $r15 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, 2);
        $r16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r15);
        specialinvoke $r14.<java.lang.StringBuilder: void <init>(java.lang.String)>($r16);
        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
        $r18 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(4);
        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);
        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r20);

     label4:
        i1 = i1 + 1;

     label5:
        if i1 <= 98 goto label1;

        i0 = i0 + 1;

     label6:
        $i2 = lengthof r1;
        if i0 < $i2 goto label0;

        $i3 = interfaceinvoke r3.<java.util.List: int size()>();
        $r21 = newarray (java.lang.String)[$i3];
        $r22 = interfaceinvoke r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r21);
        $r23 = (java.lang.String[]) $r22;
        return $r23;
    }

    protected java.lang.String removeCheckDigit(java.lang.String)
    {
        org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest r0;
        java.lang.String r1, $r3, $r4, $r6, $r8;
        java.lang.StringBuilder $r2, $r5, $r7;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest;
        r1 := @parameter0: java.lang.String;
        $r2 = new java.lang.StringBuilder;
        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 2);
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00");
        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(4);
        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();
        return $r8;
    }

    protected java.lang.String checkDigit(java.lang.String)
    {
        org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest r0;
        java.lang.String r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        $i1 = r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: int checkDigitLth>;
        if $i0 > $i1 goto label1;

     label0:
        return "";

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(2, 4);
        return $r2;
    }

    public void testOther() throws java.lang.Exception
    {
        org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest r0;
        java.io.BufferedReader r1, $r5;
        java.io.InputStreamReader $r2;
        java.lang.String r3, $r9, $r11, $r12, r13;
        java.lang.Throwable r4, $r14;
        java.lang.Class $r6;
        java.io.InputStream $r7;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        org.apache.commons.validator.routines.checkdigit.CheckDigit $r8, $r10;

        r0 := @this: org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest;
        r1 = null;

     label0:
        $r5 = new java.io.BufferedReader;
        $r2 = new java.io.InputStreamReader;
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
        $r7 = virtualinvoke $r6.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("IBANtests.txt");
        specialinvoke $r2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r7, "ASCII");
        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);
        r1 = $r5;
        goto label3;

     label1:
        $z0 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("#");
        if $z0 != 0 goto label3;

        $i0 = virtualinvoke r13.<java.lang.String: int length()>();
        if $i0 <= 0 goto label3;

        $z1 = virtualinvoke r13.<java.lang.String: boolean startsWith(java.lang.String)>("-");
        if $z1 == 0 goto label2;

        r3 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>(1);
        $r8 = r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r9 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "");
        $z2 = interfaceinvoke $r8.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>($r9);
        staticinvoke <junit.framework.Assert: void assertFalse(java.lang.String,boolean)>(r3, $z2);
        goto label3;

     label2:
        $r10 = r0.<org.apache.commons.validator.routines.checkdigit.IBANCheckDigitTest: org.apache.commons.validator.routines.checkdigit.CheckDigit routine>;
        $r11 = virtualinvoke r13.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(" ", "");
        $z3 = interfaceinvoke $r10.<org.apache.commons.validator.routines.checkdigit.CheckDigit: boolean isValid(java.lang.String)>($r11);
        staticinvoke <junit.framework.Assert: void assertTrue(java.lang.String,boolean)>(r13, $z3);

     label3:
        $r12 = virtualinvoke r1.<java.io.BufferedReader: java.lang.String readLine()>();
        r13 = $r12;
        if $r12 != null goto label1;

        goto label6;

     label4:
        $r14 := @caughtexception;
        r4 = $r14;
        if r1 == null goto label5;

        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label5:
        throw r4;

     label6:
        if r1 == null goto label7;

        virtualinvoke r1.<java.io.BufferedReader: void close()>();

     label7:
        return;

        catch java.lang.Throwable from label0 to label4 with label4;
    }
}
