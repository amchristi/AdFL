public class org.apache.commons.validator.routines.EmailValidator extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final java.lang.String SPECIAL_CHARS;
    private static final java.lang.String VALID_CHARS;
    private static final java.lang.String QUOTED_USER;
    private static final java.lang.String WORD;
    private static final java.lang.String EMAIL_REGEX;
    private static final java.lang.String IP_DOMAIN_REGEX;
    private static final java.lang.String USER_REGEX;
    private static final java.util.regex.Pattern EMAIL_PATTERN;
    private static final java.util.regex.Pattern IP_DOMAIN_PATTERN;
    private static final java.util.regex.Pattern USER_PATTERN;
    private final boolean allowLocal;
    private final boolean allowTld;
    private static final org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR;
    private static final org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_TLD;
    private static final org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_LOCAL;
    private static final org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_LOCAL_WITH_TLD;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1, $r2;
        org.apache.commons.validator.routines.EmailValidator $r3, $r4, $r5, $r6;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\s*?(.+)@(.+?)\\s*$");
        <org.apache.commons.validator.routines.EmailValidator: java.util.regex.Pattern EMAIL_PATTERN> = $r0;
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\[(.*)\\]$");
        <org.apache.commons.validator.routines.EmailValidator: java.util.regex.Pattern IP_DOMAIN_PATTERN> = $r1;
        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\s*(((\\\\.)|[^\\s\\p{Cntrl}\\(\\)<>@,;:\'\\\\\\\"\\.\\[\\]]|\')+|(\"[^\"]*\"))(\\.(((\\\\.)|[^\\s\\p{Cntrl}\\(\\)<>@,;:\'\\\\\\\"\\.\\[\\]]|\')+|(\"[^\"]*\")))*$");
        <org.apache.commons.validator.routines.EmailValidator: java.util.regex.Pattern USER_PATTERN> = $r2;
        $r3 = new org.apache.commons.validator.routines.EmailValidator;
        specialinvoke $r3.<org.apache.commons.validator.routines.EmailValidator: void <init>(boolean,boolean)>(0, 0);
        <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR> = $r3;
        $r4 = new org.apache.commons.validator.routines.EmailValidator;
        specialinvoke $r4.<org.apache.commons.validator.routines.EmailValidator: void <init>(boolean,boolean)>(0, 1);
        <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_TLD> = $r4;
        $r5 = new org.apache.commons.validator.routines.EmailValidator;
        specialinvoke $r5.<org.apache.commons.validator.routines.EmailValidator: void <init>(boolean,boolean)>(1, 0);
        <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_LOCAL> = $r5;
        $r6 = new org.apache.commons.validator.routines.EmailValidator;
        specialinvoke $r6.<org.apache.commons.validator.routines.EmailValidator: void <init>(boolean,boolean)>(1, 1);
        <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_LOCAL_WITH_TLD> = $r6;
        return;
    }

    public static org.apache.commons.validator.routines.EmailValidator getInstance()
    {
        org.apache.commons.validator.routines.EmailValidator $r0;

        $r0 = <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR>;
        return $r0;
    }

    public static org.apache.commons.validator.routines.EmailValidator getInstance(boolean, boolean)
    {
        boolean z0, z1;
        org.apache.commons.validator.routines.EmailValidator $r0, $r1, $r2, $r3;

        z0 := @parameter0: boolean;
        z1 := @parameter1: boolean;
        if z0 == 0 goto label1;

        if z1 == 0 goto label0;

        $r0 = <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_LOCAL_WITH_TLD>;
        return $r0;

     label0:
        $r1 = <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_LOCAL>;
        return $r1;

     label1:
        if z1 == 0 goto label2;

        $r2 = <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR_WITH_TLD>;
        return $r2;

     label2:
        $r3 = <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator EMAIL_VALIDATOR>;
        return $r3;
    }

    public static org.apache.commons.validator.routines.EmailValidator getInstance(boolean)
    {
        boolean z0;
        org.apache.commons.validator.routines.EmailValidator $r0;

        z0 := @parameter0: boolean;
        $r0 = staticinvoke <org.apache.commons.validator.routines.EmailValidator: org.apache.commons.validator.routines.EmailValidator getInstance(boolean,boolean)>(z0, 0);
        return $r0;
    }

    protected void <init>(boolean, boolean)
    {
        org.apache.commons.validator.routines.EmailValidator r0;
        boolean z0, z1;

        r0 := @this: org.apache.commons.validator.routines.EmailValidator;
        z0 := @parameter0: boolean;
        z1 := @parameter1: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.commons.validator.routines.EmailValidator: boolean allowLocal> = z0;
        r0.<org.apache.commons.validator.routines.EmailValidator: boolean allowTld> = z1;
        return;
    }

    protected void <init>(boolean)
    {
        org.apache.commons.validator.routines.EmailValidator r0;
        boolean z0;

        r0 := @this: org.apache.commons.validator.routines.EmailValidator;
        z0 := @parameter0: boolean;
        specialinvoke r0.<java.lang.Object: void <init>()>();
        r0.<org.apache.commons.validator.routines.EmailValidator: boolean allowLocal> = z0;
        r0.<org.apache.commons.validator.routines.EmailValidator: boolean allowTld> = 0;
        return;
    }

    public boolean isValid(java.lang.String)
    {
        org.apache.commons.validator.routines.EmailValidator r0;
        java.lang.String r1, $r4, $r5;
        java.util.regex.Matcher r2;
        boolean $z0, $z1, $z2, $z3;
        java.util.regex.Pattern $r3;

        r0 := @this: org.apache.commons.validator.routines.EmailValidator;
        r1 := @parameter0: java.lang.String;
        if r1 != null goto label0;

        return 0;

     label0:
        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(".");
        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = <org.apache.commons.validator.routines.EmailValidator: java.util.regex.Pattern EMAIL_PATTERN>;
        r2 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z1 = virtualinvoke r2.<java.util.regex.Matcher: boolean matches()>();
        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $z2 = virtualinvoke r0.<org.apache.commons.validator.routines.EmailValidator: boolean isValidUser(java.lang.String)>($r4);
        if $z2 != 0 goto label3;

        return 0;

     label3:
        $r5 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);
        $z3 = virtualinvoke r0.<org.apache.commons.validator.routines.EmailValidator: boolean isValidDomain(java.lang.String)>($r5);
        if $z3 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    protected boolean isValidDomain(java.lang.String)
    {
        org.apache.commons.validator.routines.EmailValidator r0;
        java.lang.String r1, $r5;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher r3;
        org.apache.commons.validator.routines.InetAddressValidator r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.commons.validator.routines.DomainValidator r6;

        r0 := @this: org.apache.commons.validator.routines.EmailValidator;
        r1 := @parameter0: java.lang.String;
        $r2 = <org.apache.commons.validator.routines.EmailValidator: java.util.regex.Pattern IP_DOMAIN_PATTERN>;
        r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean matches()>();
        if $z0 == 0 goto label0;

        r4 = staticinvoke <org.apache.commons.validator.routines.InetAddressValidator: org.apache.commons.validator.routines.InetAddressValidator getInstance()>();
        $r5 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);
        $z1 = virtualinvoke r4.<org.apache.commons.validator.routines.InetAddressValidator: boolean isValid(java.lang.String)>($r5);
        return $z1;

     label0:
        $z2 = r0.<org.apache.commons.validator.routines.EmailValidator: boolean allowLocal>;
        r6 = staticinvoke <org.apache.commons.validator.routines.DomainValidator: org.apache.commons.validator.routines.DomainValidator getInstance(boolean)>($z2);
        $z3 = r0.<org.apache.commons.validator.routines.EmailValidator: boolean allowTld>;
        if $z3 == 0 goto label2;

        $z4 = virtualinvoke r6.<org.apache.commons.validator.routines.DomainValidator: boolean isValid(java.lang.String)>(r1);
        if $z4 != 0 goto label1;

        $z5 = virtualinvoke r6.<org.apache.commons.validator.routines.DomainValidator: boolean isValidTld(java.lang.String)>(r1);
        if $z5 != 0 goto label1;

        return 0;

     label1:
        return 1;

     label2:
        $z6 = virtualinvoke r6.<org.apache.commons.validator.routines.DomainValidator: boolean isValid(java.lang.String)>(r1);
        return $z6;
    }

    protected boolean isValidUser(java.lang.String)
    {
        org.apache.commons.validator.routines.EmailValidator r0;
        java.lang.String r1;
        int $i0;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.validator.routines.EmailValidator;
        r1 := @parameter0: java.lang.String;
        if r1 == null goto label0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();
        if $i0 <= 64 goto label1;

     label0:
        return 0;

     label1:
        $r2 = <org.apache.commons.validator.routines.EmailValidator: java.util.regex.Pattern USER_PATTERN>;
        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();
        return $z0;
    }
}
